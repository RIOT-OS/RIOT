# Copyright (c) 2021 HAW Hamburg
#
# This file is subject to the terms and conditions of the GNU Lesser
# General Public License v2.1. See the file LICENSE in the top level
# directory for more details.

menuconfig KCONFIG_USEPKG_MBEDTLS
    bool "Configure mbed TLS"
    help
        Configure mbed TLS using Kconfig.

if KCONFIG_USEPKG_MBEDTLS

config MBEDTLS_SELF_TEST
    bool "Enable the checkup functions (*_self_test)"
    default y

config MBEDTLS_ENTROPY_C
    bool "Enable the platform-specific entropy code."
    default y
    depends on MBEDTLS_SHA256_C # || MBEDTLS_SHA512_C
    help
        This module provides a generic entropy pool.

config MBEDTLS_SHA256_C
    bool "Enable the SHA-224 and SHA-256 cryptographic hash algorithms"
    default y
    help
        This module adds support for SHA-224 and SHA-256.
        This module is required for the SSL/TLS 1.2 PRF
        function.

config MBEDTLS_SHA256_ALT
    bool "Enable to let mbed TLS use an alternate SHA2xx core implementation"
    default y
    help
        In case you enable MBEDTLS_SHA256_ALT, mbed TLS
        will no longer provide the "struct
        mbedtls_sha256_context" definition and omit the
        base function declarations and implementations.
        "sha256_alt.h" will be included from "sha256.h"
        to include the new function definitions.

config MBEDTLS_THREADING_C
    bool "Enable this layer to allow use of mutexes within mbed TLS"
    default y
    help
        Enable the threading abstraction layer. If you do intend to
        use contexts between threads, you will need to enable this
        layer to prevent race condition. See also the mbed TLS
        Knowledge Base article about threading: https://tls.mbed.org/
        kb/development/thread-safety-and-multi-threading
        This allows different threading implementations
        (self-implemented or  provided). In RIOT, we enable this
        layer by default and utilize MBEDTLS_THREADING_ALT with RIOT
        mutexes.

config MBEDTLS_THREADING_ALT
    bool "Provide your own alternate threading implementation"
    default y if MBEDTLS_THREADING_C
    help
        This to allows your own alternate threading implementation.

config MBEDTLS_SSL_TLS_C
    bool "Enable the generic SSL/TLS code."
    default y
    help
        This module is required for SSL/TLS

config MBEDTLS_CIPHER_C
    bool "Enable the generic cipher layer"
    default y
    help
        Allow generic cipher layer

config MBEDTLS_SSL_SERVER_NAME_INDICATION
    bool "Enable server name indication"
    default y
    help
        Enable support for RFC 6066 server name indication (SNI) in SSL

config MBEDTLS_MD_C
    bool "Enable the generic message digets layer"
    default y
    help
        This module enables the generic message digets layer

config MBEDTLS_SSL_PROTO_TLS1_2
    bool "Specify TLS V1.2"
    default y
    help
        Enable support for TLS 1.2 (and DTLS 1.2 if DTLS is enabled)

config MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
    bool "Enable ECDHE ECDSA key exchange"
    default y
    help
        This module Tenables the following ciphersuites (if other requisites are
        enabled as well):
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA

config MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
    bool "Enable the ECDHE-RSA based ciphersuite modes in SSL / TLS"
    default y
    help
        This enables the following ciphersuites (if other requisites are
        enabled as well):
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
        MBEDTLS_TLS_ECDHE_RSA_WITH_RC4_128_SHA

config MBEDTLS_RSA_C
    bool "Enable the RSA public-key cryptosystem"
    default y
    help
        This module is used by the following key exchanges:
            RSA, DHE-RSA, ECDHE-RSA, RSA-PSK

config MBEDTLS_X509_CRT_PARSE_C
    bool "Enable X.509 certificate parsing"
    default y
    help
        This module is required for X.509 certificate parsing

config MBEDTLS_X509_USE_C
    bool "Enable X.509 core for certificates usage"
    default y
    help
        This module is required for the X.509 parsing modules

config MBEDTLS_PEM_PARSE_C
    bool "Enable PEM decoding/parsing"
    default y
    help
        This modules adds support for decoding / parsing PEM files

config MBEDTLS_BASE64_C
    bool "Enable base64 decoding"
    default y
    help
        This module is required for PEM support (required by X.509)

config MBEDTLS_PKCS1_V15
    bool "Enable  support for PKCS1 v1.5 encoding"
    default y
    help
        This enables support for PKCS#1 v1.5 operations

config MBEDTLS_BIGNUM_C
    bool "Enable the multi-precision integer"
    default y
    help
        This module is required for RSA, DHM and ECC (ECDH, ECDSA) support

config MBEDTLS_OID_C
    bool "Enable the OID database"
    default y
    help
        This module translates between OIDs and internal values

config MBEDTLS_ASN1_PARSE_C
    bool "Enable the generic ASN1 parser"
    default y
    help
        This module enables the generic ASN1 parser

config MBEDTLS_PK_PARSE_C
    bool "Enable the generic public key parser"
    default y
    help
        Enables the generic public key parse functions

config MBEDTLS_PK_C
    bool "Enable the generic public key layer"
    default y
    help
        Enables generic public key wrappers

config MBEDTLS_SSL_CLI_C
    bool "Enable the SSL/TLS client"
    default y
    help
        This module is required for SSL/TLS client support

config MBEDTLS_AES_C
    bool "Enable the AES block cipher"
    default y
    help
        This module enables the following ciphersuites (if other requisites are
        enabled as well):
        MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_DHE_RSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_DHE_RSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_DHE_PSK_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_DHE_PSK_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_RSA_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA256
        MBEDTLS_TLS_RSA_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_RSA_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_RSA_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_RSA_PSK_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_RSA_PSK_WITH_AES_128_CBC_SHA
        MBEDTLS_TLS_PSK_WITH_AES_256_GCM_SHA384
        MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA384
        MBEDTLS_TLS_PSK_WITH_AES_256_CBC_SHA
        MBEDTLS_TLS_PSK_WITH_AES_128_GCM_SHA256
        MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA256
        MBEDTLS_TLS_PSK_WITH_AES_128_CBC_SHA
        PEM_PARSE uses AES for decrypting encrypted keys

config MBEDTLS_NET_C
    bool "Enable networking layer"
    default y
    help
        This module only works on POSIX/Unix (including Linux, BSD and OS X)
        and Windows. For other platforms, you will want to disable it, and write your
        own networking callbacks to be passed to \c mbedtls_ssl_set_bio().

config MBEDTLS_CTR_DRBG_C
    bool "Enable the CTR_DRBG AES-based random generator"
    default y
    help
        This module provides the CTR_DRBG AES random number generator

config MBEDTLS_ECDH_C
    bool "Enable the elliptic curve Diffie-Hellman library"
    default y
    help
        This module is used by the following key exchanges:
        ECDHE-ECDSA, ECDHE-RSA, DHE-PSK

config MBEDTLS_ECDSA_C
    bool "Enable the elliptic curve DSA library"
    default y
    help
        This module is used by the following key exchanges:
        ECDHE-ECDSA

config MBEDTLS_ECP_C
    bool "Enable the elliptic curve over GF(p) library"
    default y
    help
        This module requires:
        MBEDTLS_BIGNUM_C and at least one MBEDTLS_ECP_DP_XXX_ENABLED

config MBEDTLS_ECP_DP_SECP521R1_ENABLED
    bool "Enable specific curves within the Elliptic Curve"
    default y
    help
        By default all supported curves are enabled

config MBEDTLS_ASN1_WRITE_C
    bool "Enable the generic ASN1 writer"
    default y
    help
        Enable the generic ASN1 writer

config MBEDTLS_DHM_C
    bool "Enable the Diffie-Hellman-Merkle module"
    default y
    help
        This module is used by the following key exchanges:
        DHE-RSA, DHE-PSK

config MBEDTLS_GCM_C
    bool "Enable the Galois/Counter Mode (GCM)"
    default y
    help
        This module enables the AES-GCM and CAMELLIA-GCM ciphersuites, if other
        requisites are enabled as well

config MBEDTLS_PLATFORM_C
    bool "Enable the platform abstraction layer"
    default y
    help
        This module enables abstraction of common (libc) functions

config MBEDTLS_DEBUG_C
    bool "Enable debug messages"
    default y
    help
        This module provides debugging functions

rsource "contrib/entropy/Kconfig"

endif # KCONFIG_USEPKG_MBEDTLS
