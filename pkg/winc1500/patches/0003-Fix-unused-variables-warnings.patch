From 8fa0a21b7dde28ad3fe8d227ab65296eef68c173 Mon Sep 17 00:00:00 2001
From: Bumsik Kim <kbumsik@gmail.com>
Date: Thu, 11 Oct 2018 10:31:28 -0400
Subject: [PATCH 3/4] Fix unused variables warnings

---
 winc1500/bsp/source/nm_bsp_riot.c                 |  2 ++
 winc1500/bus_wrapper/source/nm_bus_wrapper_riot.c |  6 +++++-
 winc1500/driver/source/m2m_hif.c                  |  7 +++++++
 winc1500/driver/source/m2m_ota.c                  |  4 ++++
 winc1500/driver/source/m2m_ssl.c                  |  2 ++
 winc1500/driver/source/m2m_wifi.c                 |  8 ++++++++
 winc1500/driver/source/nmbus.c                    |  2 ++
 winc1500/driver/source/nmdrv.c                    |  2 ++
 winc1500/driver/source/nmspi.c                    |  2 ++
 winc1500/socket/source/socket.c                   | 14 ++++++++++++++
 10 files changed, 48 insertions(+), 1 deletion(-)

diff --git a/winc1500/bsp/source/nm_bsp_riot.c b/winc1500/bsp/source/nm_bsp_riot.c
index 74a863c..a20c367 100644
--- a/winc1500/bsp/source/nm_bsp_riot.c
+++ b/winc1500/bsp/source/nm_bsp_riot.c
@@ -58,6 +58,8 @@ static void chip_isr(void *args)
 #if	defined(MODULE_WINC1500) && defined(MODULE_NETDEV_ETH)
 		gpfIsr(args);
 #else
+		(void)args;
+
 		gpfIsr();
 #endif
 	}
diff --git a/winc1500/bus_wrapper/source/nm_bus_wrapper_riot.c b/winc1500/bus_wrapper/source/nm_bus_wrapper_riot.c
index 46eb82c..144703c 100644
--- a/winc1500/bus_wrapper/source/nm_bus_wrapper_riot.c
+++ b/winc1500/bus_wrapper/source/nm_bus_wrapper_riot.c
@@ -69,7 +69,7 @@ static int8_t spi_rw(uint8_t* pu8Mosi, uint8_t* pu8Miso, uint16_t u16Sz)
 	if (((pu8Miso == NULL) && (pu8Mosi == NULL)) ||(u16Sz == 0)) {
 		return M2M_ERR_INVALID_ARG;
 	}
-
+	
 	/* Enable/Disable in/out operations */
 	if (pu8Mosi == NULL) {
 		pu8Mosi = &u8Dummy;
@@ -106,6 +106,8 @@ static int8_t spi_rw(uint8_t* pu8Mosi, uint8_t* pu8Miso, uint16_t u16Sz)
 */
 int8_t nm_bus_init(void *pvinit)
 {
+	(void)pvinit;
+
     winc1500_t *dev = &winc1500;
 	int8_t result = M2M_SUCCESS;
 
@@ -173,5 +175,7 @@ int8_t nm_bus_deinit(void)
 */
 int8_t nm_bus_reinit(void* config)
 {
+	(void)config;
+	
 	return M2M_SUCCESS;
 }
diff --git a/winc1500/driver/source/m2m_hif.c b/winc1500/driver/source/m2m_hif.c
index 72a0db3..af0e4a3 100644
--- a/winc1500/driver/source/m2m_hif.c
+++ b/winc1500/driver/source/m2m_hif.c
@@ -131,6 +131,9 @@ ERR1:
 */
 static void m2m_hif_cb(uint8 u8OpCode, uint16 u16DataSize, uint32 u32Addr)
 {
+	(void)u8OpCode;
+	(void)u16DataSize;
+	(void)u32Addr;
 
 
 }
@@ -251,6 +254,8 @@ ERR1:
 
 sint8 hif_init(void * arg)
 {
+	(void)arg;
+
 	m2m_memset((uint8*)&gstrHifCxt,0,sizeof(tstrHifContext));
 #if defined(MODULE_NETDEV_ETH)
 	/** The isr will be registered in _init() in winc1500_netdev.c
@@ -271,6 +276,8 @@ sint8 hif_init(void * arg)
 */
 sint8 hif_deinit(void * arg)
 {
+	(void)arg;
+
 	sint8 ret = M2M_SUCCESS;
 	ret = hif_chip_wake();
 	m2m_memset((uint8*)&gstrHifCxt,0,sizeof(tstrHifContext));
diff --git a/winc1500/driver/source/m2m_ota.c b/winc1500/driver/source/m2m_ota.c
index c55e812..efe167a 100644
--- a/winc1500/driver/source/m2m_ota.c
+++ b/winc1500/driver/source/m2m_ota.c
@@ -79,6 +79,8 @@ FUNCTION PROTOTYPES
 */
 static void m2m_ota_cb(uint8 u8OpCode, uint16 u16DataSize, uint32 u32Addr)
 {
+	(void)u16DataSize;
+
 	sint8 ret = M2M_SUCCESS;
 	if(u8OpCode == M2M_OTA_RESP_NOTIF_UPDATE_INFO)
 	{
@@ -200,6 +202,8 @@ NMI_API sint8  m2m_ota_notif_check_for_update(void)
 */
 NMI_API sint8 m2m_ota_notif_sched(uint32 u32Period)
 {
+	(void)u32Period;
+	
 	sint8 ret = M2M_SUCCESS;
 	ret = hif_send(M2M_REQ_GROUP_OTA,M2M_OTA_REQ_NOTIF_CHECK_FOR_UPDATE,NULL,0,NULL,0,0);
 	return ret;
diff --git a/winc1500/driver/source/m2m_ssl.c b/winc1500/driver/source/m2m_ssl.c
index 2b4c94d..98bd7f7 100644
--- a/winc1500/driver/source/m2m_ssl.c
+++ b/winc1500/driver/source/m2m_ssl.c
@@ -73,6 +73,8 @@ FUNCTION PROTOTYPES
 */
 static void m2m_ssl_cb(uint8 u8OpCode, uint16 u16DataSize, uint32 u32Addr)
 {
+	(void)u16DataSize;
+	
 	sint8 s8tmp = M2M_SUCCESS;
 	switch(u8OpCode)
 	{
diff --git a/winc1500/driver/source/m2m_wifi.c b/winc1500/driver/source/m2m_wifi.c
index a365a0e..9311764 100644
--- a/winc1500/driver/source/m2m_wifi.c
+++ b/winc1500/driver/source/m2m_wifi.c
@@ -501,6 +501,7 @@ _EXIT0:
 
 sint8  m2m_wifi_deinit(void * arg)
 {
+	(void)arg;
 
 	hif_deinit(NULL);
 
@@ -512,6 +513,8 @@ sint8  m2m_wifi_deinit(void * arg)
 
 sint8 m2m_wifi_handle_events(void * arg)
 {
+	(void)arg;
+
 	return hif_handle_isr();
 }
 
@@ -668,6 +671,8 @@ sint8 m2m_wifi_request_dhcp_client(void)
 }
 sint8 m2m_wifi_request_dhcp_server(uint8* addr)
 {
+	(void)addr;
+
     /*legacy API should be removed */
 	return 0;
 }
@@ -858,6 +863,7 @@ sint8 m2m_wifi_wps_disable(void)
 */
 sint8 m2m_wifi_req_client_ctrl(uint8 u8Cmd)
 {
+	(void)u8Cmd;
 
 	sint8 ret = M2M_SUCCESS;
 #ifdef _PS_SERVER_
@@ -881,6 +887,8 @@ sint8 m2m_wifi_req_client_ctrl(uint8 u8Cmd)
 */
 sint8 m2m_wifi_req_server_init(uint8 ch)
 {
+	(void)ch;
+	
 	sint8 ret = M2M_SUCCESS;
 #ifdef _PS_SERVER_
 	tstrM2mServerInit strServer;
diff --git a/winc1500/driver/source/nmbus.c b/winc1500/driver/source/nmbus.c
index 1ae1d1e..491a3d3 100644
--- a/winc1500/driver/source/nmbus.c
+++ b/winc1500/driver/source/nmbus.c
@@ -108,6 +108,8 @@ sint8 nm_bus_reset(void)
 */
 sint8 nm_bus_iface_reconfigure(void *ptr)
 {
+	(void)ptr;
+	
 	sint8 ret = M2M_SUCCESS;
 #ifdef CONF_WINC_USE_UART
 	ret = nm_uart_reconfigure(ptr);
diff --git a/winc1500/driver/source/nmdrv.c b/winc1500/driver/source/nmdrv.c
index dead628..57e6f86 100644
--- a/winc1500/driver/source/nmdrv.c
+++ b/winc1500/driver/source/nmdrv.c
@@ -361,6 +361,8 @@ ERR1:
 */
 sint8 nm_drv_deinit(void * arg)
 {
+	(void)arg;
+	
 	sint8 ret;
 
 	ret = chip_deinit();
diff --git a/winc1500/driver/source/nmspi.c b/winc1500/driver/source/nmspi.c
index aa3dc6f..9e76aa9 100644
--- a/winc1500/driver/source/nmspi.c
+++ b/winc1500/driver/source/nmspi.c
@@ -302,6 +302,8 @@ static sint8 spi_cmd(uint8 cmd, uint32 adr, uint32 u32data, uint32 sz,uint8 cloc
 
 static sint8 spi_data_rsp(uint8 cmd)
 {
+	(void)cmd;
+	
 	uint8 len;
 	uint8 rsp[3];
 	sint8 result = N_OK;
diff --git a/winc1500/socket/source/socket.c b/winc1500/socket/source/socket.c
index a23e418..e4d269f 100644
--- a/winc1500/socket/source/socket.c
+++ b/winc1500/socket/source/socket.c
@@ -678,6 +678,9 @@ Date
 *********************************************************************/
 sint8 accept(SOCKET sock, struct sockaddr *addr, uint8 *addrlen)
 {
+	(void)addr;
+	(void)addrlen;
+
 	sint8	s8Ret = SOCK_ERR_INVALID_ARG;
 	
 	if(sock >= 0 && (gastrSockets[sock].bIsUsed == 1) )
@@ -748,6 +751,8 @@ Date
 *********************************************************************/
 sint16 send(SOCKET sock, void *pvSendBuffer, uint16 u16SendLength, uint16 flags)
 {
+	(void)flags;
+
 	sint16	s16Ret = SOCK_ERR_INVALID_ARG;
 	
 	if((sock >= 0) && (pvSendBuffer != NULL) && (u16SendLength <= SOCKET_BUFFER_MAX_LENGTH) && (gastrSockets[sock].bIsUsed == 1))
@@ -800,6 +805,9 @@ Date
 *********************************************************************/
 sint16 sendto(SOCKET sock, void *pvSendBuffer, uint16 u16SendLength, uint16 flags, struct sockaddr *pstrDestAddr, uint8 u8AddrLen)
 {
+	(void)flags;
+	(void)u8AddrLen;
+	
 	sint16	s16Ret = SOCK_ERR_INVALID_ARG;
 	
 	if((sock >= 0) && (pvSendBuffer != NULL) && (u16SendLength <= SOCKET_BUFFER_MAX_LENGTH) && (gastrSockets[sock].bIsUsed == 1))
@@ -1249,6 +1257,12 @@ Date
 *********************************************************************/
 sint8 getsockopt(SOCKET sock, uint8 u8Level, uint8 u8OptName, const void *pvOptValue, uint8* pu8OptLen)
 {
+	(void)sock;
+	(void)u8Level;
+	(void)u8OptName;
+	(void)pvOptValue;
+	(void)pu8OptLen;
+
 	/* TBD */
 	return M2M_SUCCESS;
 }
-- 
2.19.1

