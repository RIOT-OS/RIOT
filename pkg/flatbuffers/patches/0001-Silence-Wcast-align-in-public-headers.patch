From acf830a05aa5e577811b3738c1f3c2081041b4dc Mon Sep 17 00:00:00 2001
From: Marian Buschsieweke <marian.buschsieweke@ovgu.de>
Date: Sat, 20 May 2023 21:11:06 +0200
Subject: [PATCH] Silence Wcast-align in public headers

---
 include/flatbuffers/buffer.h             | 5 +++++
 include/flatbuffers/flatbuffer_builder.h | 5 +++++
 include/flatbuffers/table.h              | 7 ++++++-
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/include/flatbuffers/buffer.h b/include/flatbuffers/buffer.h
index 94d4f79..45a08aa 100644
--- a/include/flatbuffers/buffer.h
+++ b/include/flatbuffers/buffer.h
@@ -17,6 +17,9 @@
 #ifndef FLATBUFFERS_BUFFER_H_
 #define FLATBUFFERS_BUFFER_H_
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wcast-align"
+
 #include <algorithm>
 
 #include "flatbuffers/base.h"
@@ -196,4 +199,6 @@ const T *GetSizePrefixedRoot(const void *buf) {
 
 }  // namespace flatbuffers
 
+#pragma GCC diagnostic pop
+
 #endif  // FLATBUFFERS_BUFFER_H_
diff --git a/include/flatbuffers/flatbuffer_builder.h b/include/flatbuffers/flatbuffer_builder.h
index ed932cd..ef5cbcc 100644
--- a/include/flatbuffers/flatbuffer_builder.h
+++ b/include/flatbuffers/flatbuffer_builder.h
@@ -17,6 +17,9 @@
 #ifndef FLATBUFFERS_FLATBUFFER_BUILDER_H_
 #define FLATBUFFERS_FLATBUFFER_BUILDER_H_
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wcast-align"
+
 #include <algorithm>
 #include <cstdint>
 #include <functional>
@@ -1468,4 +1471,6 @@ const T *GetTemporaryPointer(FlatBufferBuilder &fbb, Offset<T> offset) {
 
 }  // namespace flatbuffers
 
+#pragma GCC diagnostic pop
+
 #endif  // FLATBUFFERS_FLATBUFFER_BUILDER_H_
diff --git a/include/flatbuffers/table.h b/include/flatbuffers/table.h
index b370ccb..8788255 100644
--- a/include/flatbuffers/table.h
+++ b/include/flatbuffers/table.h
@@ -17,6 +17,9 @@
 #ifndef FLATBUFFERS_TABLE_H_
 #define FLATBUFFERS_TABLE_H_
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wcast-align"
+
 #include "flatbuffers/base.h"
 #include "flatbuffers/verifier.h"
 
@@ -153,7 +156,7 @@ class Table {
     return verifier.Check(field_offset != 0) &&
            verifier.VerifyOffset<OffsetT>(data_, field_offset);
   }
- 
+
   bool VerifyOffset64(const Verifier &verifier, voffset_t field) const {
     return VerifyOffset<uoffset64_t>(verifier, field);
   }
@@ -185,4 +188,6 @@ inline flatbuffers::Optional<bool> Table::GetOptional<uint8_t, bool>(
 
 }  // namespace flatbuffers
 
+#pragma GCC diagnostic pop
+
 #endif  // FLATBUFFERS_TABLE_H_
-- 
2.40.1

