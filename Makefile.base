ASMSRC = $(wildcard *.s)
ASSMSRC = $(wildcard *.S)
ASMOBJ = $(ASMSRC:%.s=$(BINDIR)$(MODULE)/%.o)
ASMOBJ += $(ASSMSRC:%.S=$(BINDIR)$(MODULE)/%.o)

ifeq ($(strip $(SRC)),)
	SRC = $(wildcard *.c)
endif
OBJ = $(SRC:%.c=$(BINDIR)$(MODULE)/%.o)
DEP = $(SRC:%.c=$(BINDIR)$(MODULE)/%.d)

GIT_STRING := $(shell git describe --abbrev=4 --dirty=-`hostname`)
GIT_BRANCH := $(shell git rev-parse --abbrev-ref HEAD)
ifeq ($(strip $(GIT_BRANCH)),master)
	GIT_VERSION = $(GIT_STRING)
else
	GIT_VERSION = $(shell echo $(GIT_STRING) $(GIT_BRANCH) | sed 's/ /-/')
endif
ifeq ($(strip $(GIT_VERSION)),)
	GIT_VERSION := "UNKNOWN"
endif
export CFLAGS += -DVERSION=\"$(GIT_VERSION)\"

.PHONY: clean

$(BINDIR)$(MODULE).a: $(OBJ) $(ASMOBJ)
	$(AD)$(AR) -rc $(BINDIR)$(MODULE).a $(OBJ) $(ASMOBJ)

# compile and generate dependency info
$(BINDIR)$(MODULE)/%.o: %.c
	@mkdir -p $(BINDIR)$(MODULE)
	$(AD)$(CC) $(CFLAGS) $(INCLUDES) -c $*.c -o $(BINDIR)$(MODULE)/$*.o

$(DEP): $(BINDIR)$(MODULE)%.d: %.c
	@mkdir -p $(BINDIR)$(MODULE)
	@$(CC) $(CFLAGS) $(INCLUDES) -M -MF $(BINDIR)$(MODULE)/$*.d -MT $(BINDIR)$(MODULE)/$*.o $*.c

$(BINDIR)$(MODULE)/%.o: %.s
	$(AD)$(AS) $(ASFLAGS) $*.s -o $(BINDIR)$(MODULE)/$*.o

$(BINDIR)$(MODULE)/%.o: %.S
	$(AD)$(CC) -c $(CFLAGS) $*.S -o $(BINDIR)$(MODULE)/$*.o

# remove compilation products
clean::
	$(AD)rm -f $(BINDIR)$(MODULE).a $(OBJ) $(DEP) $(ASMOBJ)

.PHONY: $(DEP)
-include $(DEP)
