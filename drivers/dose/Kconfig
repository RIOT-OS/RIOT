# Copyright (c) 2020 Freie Universitaet Berlin
#
# This file is subject to the terms and conditions of the GNU Lesser
# General Public License v2.1. See the file LICENSE in the top level
# directory for more details.
#
menuconfig KCONFIG_USEMODULE_DOSE
    bool "Configure DOSE driver"
    depends on USEMODULE_DOSE
    help
        Configure the Differentially Operated Serial Ethernet (DOSE)
        driver using Kconfig.

if KCONFIG_USEMODULE_DOSE

config DOSE_TIMEOUT_BYTES
    int "Transaction timeout in bytes"
    default 50
    help
        Timeout, in bytes at the set baudrate, to bring the driver back into idle state if
        the remote side died within a transaction.

endif # KCONFIG_USEMODULE_DOSE

menuconfig MODULE_DOSE
    bool "Differentially Operated Serial Ethernet (DOSE)"
    depends on TEST_KCONFIG
    depends on HAS_PERIPH_GPIO
    depends on HAS_PERIPH_GPIO_IRQ
    depends on HAS_PERIPH_UART
    select MODULE_CHUNKED_RINGBUFFER
    select MODULE_EUI_PROVIDER
    select MODULE_IOLIST
    select MODULE_NETDEV_ETH
    select MODULE_NETDEV_LEGACY_API
    select MODULE_PERIPH_GPIO
    select MODULE_PERIPH_GPIO_IRQ
    select MODULE_PERIPH_UART
    select MODULE_PERIPH_UART_COLLISION if HAS_PERIPH_UART_COLLISION
    select MODULE_PERIPH_UART_RXSTART_IRQ if HAS_PERIPH_UART_RXSTART_IRQ
    select MODULE_RANDOM
    select MODULE_ZTIMER
    select ZTIMER_USEC
    help
      Allows RIOT nodes to communicate by Ethernet over a serial bus.

if MODULE_DOSE

config MODULE_DOSE_WATCHDOG
    bool "Use a watchdog timer"
    depends on HAS_PERIPH_TIMER_PERIODIC
    select MODULE_PERIPH_TIMER_PERIODIC
    help
        Say y to utilize a dedicated hardware timer (DOSE_TIMER_DEV which should
        be configured in board.h) to periodically check if any interface does
        not make progress receiving a frame and abort the RX process. This
        speeds up the more critical RX path.

config DOSE_TIMEOUT_BYTES
    int "Transaction timeout in bytes"
    default 50
    help
        Timeout, in bytes at the set baudrate, to bring the driver back into idle state if
        the remote side died within a transaction.

endif # MODULE_DOSE
