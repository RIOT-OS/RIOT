ifneq (,$(filter net_help,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/include
endif
ifneq (,$(filter nhdp,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/include
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/routing/nhdp
endif

ifneq (,$(filter crypto,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/include/crypto
endif

ifneq (,$(filter posix,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/include
endif
ifneq (,$(filter pnet,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/pnet/include
endif
ifneq (,$(filter pthread,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/pthread/include
endif

ifneq (,$(filter oneway_malloc,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/oneway-malloc/include
endif

ifneq (,$(filter cpp11-compat,$(USEMODULE)))
    USEMODULE_INCLUDES += $(RIOTBASE)/sys/cpp11-compat/include
endif

ifneq (,$(filter ng_slip,$(USEMODULE)))
    FEATURES_REQUIRED += periph_uart
endif

ifneq (,$(filter embunit,$(USEMODULE)))
    ifeq ($(OUTPUT),XML)
        CFLAGS += -DOUTPUT=OUTPUT_XML
    else ifeq ($(OUTPUT),TEXT)
        CFLAGS += -DOUTPUT=OUTPUT_TEXT
    else ifeq ($(OUTPUT),COMPILER)
        CFLAGS += -DOUTPUT=OUTPUT_COMPILER
    else ifeq ($(OUTPUT),COLORTEXT)
        CFLAGS += -DOUTPUT=OUTPUT_COLORTEXT
    else ifeq ($(OUTPUT),COLOR)
        CFLAGS += -DOUTPUT=OUTPUT_COLOR
    endif
endif

ifneq (,$(filter log_%,$(USEMODULE)))
    include $(RIOTBASE)/sys/log/Makefile.include
endif

ifneq (,$(filter newlib,$(USEMODULE)))
    include $(RIOTBASE)/sys/newlib/Makefile.include
endif

INCLUDES += -I$(RIOTBASE)/sys/libc/include
