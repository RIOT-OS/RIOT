ifneq (,$(filter bhp,$(USEMODULE)))
  include $(RIOTBASE)/sys/bhp/Makefile.include
endif

ifneq (,$(filter gnrc_sixlowpan_frag_rb,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/gnrc/network_layer/sixlowpan/frag
endif

ifneq (,$(filter gnrc_lorawan,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/gnrc/link_layer/lorawan/include
endif

ifneq (,$(filter gnrc_sock,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/gnrc/sock/include
endif

ifneq (,$(filter gnrc_sock_async,$(USEMODULE)))
  CFLAGS += -DSOCK_HAS_ASYNC
endif

ifneq (,$(filter gnrc_pktbuf,$(USEMODULE)))
  include $(RIOTBASE)/sys/net/gnrc/pktbuf/Makefile.include
endif

ifneq (,$(filter gnrc_pktbuf_static,$(USEMODULE)))
  include $(RIOTBASE)/sys/net/gnrc/pktbuf_static/Makefile.include
endif

ifneq (,$(filter malloc_thread_safe,$(USEMODULE)))
  include $(RIOTBASE)/sys/malloc_thread_safe/Makefile.include
endif

ifneq (,$(filter posix_headers,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/include
endif

ifneq (,$(filter pthread,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/pthread/include
endif

ifneq (,$(filter oneway_malloc,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/oneway-malloc/include
endif

ifneq (,$(filter eui_provider,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/link_layer/eui_provider/include
endif

ifneq (,$(filter app_metadata,$(USEMODULE)))
  # Overwrite the application shell formats.
  # This is an optional macro that can be used to coordinate
  # standardized shell formats, as an example it can point to an RDM
  # that specifies semantics.
  ifdef APP_SHELL_FMT
    CFLAGS += -DAPP_SHELL_FMT=\"$(APP_SHELL_FMT)\"
  endif
endif

ifneq (,$(filter auto_init,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/auto_init/include
endif

ifneq (,$(filter cpp11-compat,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/cpp11-compat/include
endif

ifneq (,$(filter embunit,$(USEMODULE)))
  ifeq ($(OUTPUT),XML)
    CFLAGS += -DOUTPUT=OUTPUT_XML
  else ifeq ($(OUTPUT),TEXT)
    CFLAGS += -DOUTPUT=OUTPUT_TEXT
  else ifeq ($(OUTPUT),COMPILER)
    CFLAGS += -DOUTPUT=OUTPUT_COMPILER
  else ifeq ($(OUTPUT),COLORTEXT)
    CFLAGS += -DOUTPUT=OUTPUT_COLORTEXT
  else ifeq ($(OUTPUT),COLOR)
    CFLAGS += -DOUTPUT=OUTPUT_COLOR
  endif
endif

ifneq (,$(filter log_color,$(USEMODULE)))
  include $(RIOTBASE)/sys/log_color/Makefile.include
endif

ifneq (,$(filter log_printfnoformat,$(USEMODULE)))
  include $(RIOTBASE)/sys/log_printfnoformat/Makefile.include
endif

ifneq (,$(filter newlib,$(USEMODULE)))
  include $(RIOTMAKE)/libc/newlib.mk
endif

ifneq (,$(filter nosoftfpu,$(USEMODULE)))
  LINKFLAGS += -Wl,-wrap=__adddf3
  LINKFLAGS += -Wl,-wrap=__addsf3
  LINKFLAGS += -Wl,-wrap=__aeabi_d2f
  LINKFLAGS += -Wl,-wrap=__aeabi_dadd
  LINKFLAGS += -Wl,-wrap=__aeabi_dcmpeq
  LINKFLAGS += -Wl,-wrap=__aeabi_dcmpge
  LINKFLAGS += -Wl,-wrap=__aeabi_dcmpgt
  LINKFLAGS += -Wl,-wrap=__aeabi_dcmple
  LINKFLAGS += -Wl,-wrap=__aeabi_dcmplt
  LINKFLAGS += -Wl,-wrap=__aeabi_ddiv
  LINKFLAGS += -Wl,-wrap=__aeabi_dmul
  LINKFLAGS += -Wl,-wrap=__aeabi_drsub
  LINKFLAGS += -Wl,-wrap=__aeabi_dsub
  LINKFLAGS += -Wl,-wrap=__aeabi_f2d
  LINKFLAGS += -Wl,-wrap=__aeabi_fadd
  LINKFLAGS += -Wl,-wrap=__aeabi_fcmpeq
  LINKFLAGS += -Wl,-wrap=__aeabi_fcmpge
  LINKFLAGS += -Wl,-wrap=__aeabi_fcmpgt
  LINKFLAGS += -Wl,-wrap=__aeabi_fcmple
  LINKFLAGS += -Wl,-wrap=__aeabi_fcmplt
  LINKFLAGS += -Wl,-wrap=__aeabi_fdiv
  LINKFLAGS += -Wl,-wrap=__aeabi_fmul
  LINKFLAGS += -Wl,-wrap=__aeabi_frsub
  LINKFLAGS += -Wl,-wrap=__aeabi_fsub
  LINKFLAGS += -Wl,-wrap=__cmpdf2
  LINKFLAGS += -Wl,-wrap=__cmpsf2
  LINKFLAGS += -Wl,-wrap=__divdf3
  LINKFLAGS += -Wl,-wrap=__divsf3
  LINKFLAGS += -Wl,-wrap=__extendsfdf2
  LINKFLAGS += -Wl,-wrap=__fixdfdi
  LINKFLAGS += -Wl,-wrap=__fixdfsi
  LINKFLAGS += -Wl,-wrap=__fixdfti
  LINKFLAGS += -Wl,-wrap=__fixsfdi
  LINKFLAGS += -Wl,-wrap=__fixsfsi
  LINKFLAGS += -Wl,-wrap=__fixsfti
  LINKFLAGS += -Wl,-wrap=__fixunsdfdi
  LINKFLAGS += -Wl,-wrap=__fixunsdfsi
  LINKFLAGS += -Wl,-wrap=__fixunsdfti
  LINKFLAGS += -Wl,-wrap=__fixunssfdi
  LINKFLAGS += -Wl,-wrap=__fixunssfsi
  LINKFLAGS += -Wl,-wrap=__fixunssfti
  LINKFLAGS += -Wl,-wrap=__floatdidf
  LINKFLAGS += -Wl,-wrap=__floatdisf
  LINKFLAGS += -Wl,-wrap=__floatsidf
  LINKFLAGS += -Wl,-wrap=__floatsisf
  LINKFLAGS += -Wl,-wrap=__floattidf
  LINKFLAGS += -Wl,-wrap=__floattisf
  LINKFLAGS += -Wl,-wrap=__floatundidf
  LINKFLAGS += -Wl,-wrap=__floatundisf
  LINKFLAGS += -Wl,-wrap=__floatunsidf
  LINKFLAGS += -Wl,-wrap=__floatunsisf
  LINKFLAGS += -Wl,-wrap=__floatuntidf
  LINKFLAGS += -Wl,-wrap=__floatuntisf
  LINKFLAGS += -Wl,-wrap=__muldf3
  LINKFLAGS += -Wl,-wrap=__mulsf3
  LINKFLAGS += -Wl,-wrap=__negdf2
  LINKFLAGS += -Wl,-wrap=__negsf2
  LINKFLAGS += -Wl,-wrap=__powidf2
  LINKFLAGS += -Wl,-wrap=__powisf2
  LINKFLAGS += -Wl,-wrap=__subdf3
  LINKFLAGS += -Wl,-wrap=__subsf3
  LINKFLAGS += -Wl,-wrap=__truncdfsf2
  LINKFLAGS += -Wl,-wrap=__unorddf2
  LINKFLAGS += -Wl,-wrap=__unordsf2
endif

ifneq (,$(filter picolibc,$(USEMODULE)))
  include $(RIOTMAKE)/libc/picolibc.mk
endif

ifneq (,$(filter arduino,$(USEMODULE)))
  include $(RIOTBASE)/sys/arduino/Makefile.include
endif

ifneq (,$(filter printf_float,$(USEMODULE)))
  ifneq (,$(filter newlib_nano,$(USEMODULE)))
    LINKFLAGS += -u _printf_float
  endif
endif

ifneq (,$(filter scanf_float,$(USEMODULE)))
  ifneq (,$(filter newlib_nano,$(USEMODULE)))
    LINKFLAGS += -u _scanf_float
  endif
endif

ifneq (,$(filter riotboot,$(FEATURES_USED)))
  include $(RIOTBASE)/sys/riotboot/Makefile.include
endif

ifneq (,$(filter skald, $(USEMODULE)))
  include $(RIOTBASE)/sys/net/ble/skald/Makefile.include
endif

ifneq (,$(filter sock sock_%,$(USEMODULE)))
  ifneq (,$(filter ipv4,$(USEMODULE)))
    CFLAGS += -DSOCK_HAS_IPV4
  endif
  ifneq (,$(filter ipv6,$(USEMODULE)))
    CFLAGS += -DSOCK_HAS_IPV6
  endif
endif

ifneq (,$(filter sock_async_event,$(USEMODULE)))
  include $(RIOTBASE)/sys/net/sock/async/event/Makefile.include
endif

ifneq (,$(filter ssp,$(USEMODULE)))
  include $(RIOTBASE)/sys/ssp/Makefile.include
endif

ifneq (native,$(BOARD))
  INCLUDES += -I$(RIOTBASE)/sys/libc/include
endif

ifneq (,$(filter clif, $(USEMODULE)))
  INCLUDES += -I$(RIOTBASE)/sys/clif/include
endif

ifneq (,$(filter zptr,$(USEMODULE)))
  include $(RIOTBASE)/sys/zptr/Makefile.include
endif

ifneq (,$(filter test_utils_result_output,$(USEMODULE)))
  include $(RIOTBASE)/sys/test_utils/result_output/Makefile.include
endif

ifneq (,$(filter test_utils_netdev_ieee802154_minimal,$(USEMODULE)))
  CFLAGS += -DCONFIG_NETDEV_REGISTER_SIGNAL
endif

ifneq (,$(filter ztimer,$(USEMODULE)))
  include $(RIOTBASE)/sys/ztimer/Makefile.include
endif

ifneq (,$(filter prng,$(USEMODULE)))
  include $(RIOTBASE)/sys/random/Makefile.include
endif

ifneq (,$(filter tinyusb_dfu usbus_dfu riotboot_reset,$(USEMODULE)))
  CFLAGS += -DCPU_RAM_BASE=$(RAM_START_ADDR)
  CFLAGS += -DCPU_RAM_SIZE=$(shell printf "0x%x" $$(($(RAM_LEN:%K=%*1024))))
endif

ifneq (,$(filter test_utils_netdev_eth_minimal,$(USEMODULE)))
  CFLAGS += -DCONFIG_NETDEV_REGISTER_SIGNAL
endif

ifneq (,$(filter shell_lock,$(USEMODULE)))
  include $(RIOTBASE)/sys/shell_lock/Makefile.include
endif

PSEUDOMODULES += shell_democommands

ifneq (,$(filter rust_riotmodules,$(USEMODULE)))
  include $(RIOTBASE)/sys/rust_riotmodules/Makefile.include
endif

ifneq (,$(filter tiny_strerror,$(USEMODULE)))
  include $(RIOTBASE)/sys/tiny_strerror/Makefile.include
endif

ifneq (,$(filter preprocessor_%,$(USEMODULE)))
  include $(RIOTBASE)/sys/preprocessor/Makefile.include
endif

ifneq (,$(filter gcoap,$(USEMODULE)))
  include $(RIOTBASE)/sys/net/application_layer/gcoap/Makefile.include
endif
