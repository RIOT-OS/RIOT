ifneq (,$(filter gnrc_sixlowpan_frag_rb,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/gnrc/network_layer/sixlowpan/frag
endif

ifneq (,$(filter gnrc_lorawan,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/gnrc/link_layer/lorawan/include
endif

ifneq (,$(filter gnrc_sock,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/gnrc/sock/include
  ifneq (,$(filter gnrc_ipv6,$(USEMODULE)))
    CFLAGS += -DSOCK_HAS_IPV6
  endif
endif

ifneq (,$(filter gnrc_sock_async,$(USEMODULE)))
  CFLAGS += -DSOCK_HAS_ASYNC
endif

ifneq (,$(filter gnrc_pktbuf,$(USEMODULE)))
  include $(RIOTBASE)/sys/net/gnrc/pktbuf/Makefile.include
endif

ifneq (,$(filter posix_headers,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/include
endif

ifneq (,$(filter pthread,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/posix/pthread/include
endif

ifneq (,$(filter oneway_malloc,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/oneway-malloc/include
endif

ifneq (,$(filter eui_provider,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/net/link_layer/eui_provider/include
endif

ifneq (,$(filter app_metadata,$(USEMODULE)))
  # Overwrite the application shell formats.
  # This is an optional macro that can be used to coordinate
  # standardized shell formats, as an example it can point to an RDM
  # that specifies semantics.
  ifdef APP_SHELL_FMT
    CFLAGS += -DAPP_SHELL_FMT=\"$(APP_SHELL_FMT)\"
  endif
endif

ifneq (,$(filter cpp11-compat,$(USEMODULE)))
  USEMODULE_INCLUDES += $(RIOTBASE)/sys/cpp11-compat/include
endif

ifneq (,$(filter embunit,$(USEMODULE)))
  ifeq ($(OUTPUT),XML)
    CFLAGS += -DOUTPUT=OUTPUT_XML
  else ifeq ($(OUTPUT),TEXT)
    CFLAGS += -DOUTPUT=OUTPUT_TEXT
  else ifeq ($(OUTPUT),COMPILER)
    CFLAGS += -DOUTPUT=OUTPUT_COMPILER
  else ifeq ($(OUTPUT),COLORTEXT)
    CFLAGS += -DOUTPUT=OUTPUT_COLORTEXT
  else ifeq ($(OUTPUT),COLOR)
    CFLAGS += -DOUTPUT=OUTPUT_COLOR
  endif
endif

ifneq (,$(filter log_%,$(USEMODULE)))
  include $(RIOTBASE)/sys/log/Makefile.include
endif

ifneq (,$(filter newlib,$(USEMODULE)))
  include $(RIOTMAKE)/libc/newlib.mk
endif

ifneq (,$(filter picolibc,$(USEMODULE)))
  include $(RIOTMAKE)/libc/picolibc.mk
endif

ifneq (,$(filter arduino,$(USEMODULE)))
  include $(RIOTBASE)/sys/arduino/Makefile.include
endif

ifneq (,$(filter printf_float,$(USEMODULE)))
  ifneq (,$(filter newlib_nano,$(USEMODULE)))
    LINKFLAGS += -u _printf_float
  endif
endif

ifneq (,$(filter scanf_float,$(USEMODULE)))
  ifneq (,$(filter newlib_nano,$(USEMODULE)))
    LINKFLAGS += -u _scanf_float
  endif
endif

ifneq (,$(filter riotboot,$(FEATURES_USED)))
  include $(RIOTBASE)/sys/riotboot/Makefile.include
endif

ifneq (,$(filter sock_async_event,$(USEMODULE)))
  include $(RIOTBASE)/sys/net/sock/async/event/Makefile.include
endif

ifneq (,$(filter ssp,$(USEMODULE)))
  include $(RIOTBASE)/sys/ssp/Makefile.include
endif

ifneq (native,$(BOARD))
  INCLUDES += -I$(RIOTBASE)/sys/libc/include
endif

ifneq (,$(filter clif, $(USEMODULE)))
  INCLUDES += -I$(RIOTBASE)/sys/clif/include
endif

ifneq (,$(filter zptr,$(USEMODULE)))
  include $(RIOTBASE)/sys/zptr/Makefile.include
endif

# Convert xtimer into a pseudo module if its API is already implemented by
# ztimer's compatibility wrapper
ifneq (,$(filter ztimer_xtimer_compat,$(USEMODULE)))
  PSEUDOMODULES += xtimer
endif

ifneq (,$(filter prng,$(USEMODULE)))
  include $(RIOTBASE)/sys/random/Makefile.include
endif
