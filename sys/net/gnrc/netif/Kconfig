# Copyright (c) 2020 HAW Hamburg
#
# This file is subject to the terms and conditions of the GNU Lesser
# General Public License v2.1. See the file LICENSE in the top level
# directory for more details.
#
menuconfig MOD_GNRC_NETIF
    bool "GNRC Network Interface"
    default y
    select MOD_L2UTIL
    select MOD_FMT
    select MOD_NETIF
    select HAVE_NETSTATS_L2
    help
        This module implements the Network Interface for the GNRC stack.

if MOD_GNRC_NETIF

config MOD_AUTO_INIT_GNRC_NETIF
    bool "Auto-init GNRC Network Interface"
    default y if MOD_AUTO_INIT
    select MOD_GNRC_NETIF_INIT_DEVS

config MOD_TXTSND
    bool "Command txtsnd"
    depends on MOD_SHELL_COMMANDS
    help
        Adds an useful command to test lower layers.

menu "Interfaces options"

config GNRC_NETIF_MSG_QUEUE_SIZE_EXP
    int "Exponent for the message queue size for network interface threads (as 2^n)"
    default 4
    help
        As the queue size ALWAYS needs to be power of two, this option
        represents the exponent of 2^n, which will be used as the size of
        the queue.

config GNRC_NETIF_IPV6_ADDRS_NUMOF
    int "Maximum number of unicast and anycast addresses per interface"
    default 2
    help
        If you change this, please make sure that
        @ref CONFIG_GNRC_NETIF_IPV6_GROUPS_NUMOF is also large enough to fit the
        addresses' solicited nodes multicast addresses.
        Default: 2 (1 link-local + 1 global address).

config GNRC_NETIF_DEFAULT_HL
    int "Default hop limit"
    default 64

config GNRC_NETIF_MIN_WAIT_AFTER_SEND_US
    int "Minimum wait time after a send operation"
    default 0
    help
        This value is expressed in microseconds. It is purely meant as a debugging
        feature to slow down a radios sending.

config GNRC_NETIF_NONSTANDARD_6LO_MTU
    bool "Enable usage of non standard MTU for 6LoWPAN network interfaces"
    depends on MOD_GNRC_NETIF_6LO
    help
        Enables the usage of non standard MTU for 6LoWPAN network interfaces.
        This is non compliant with RFC 4944 and might not be supported by other
        implementations.

endmenu # Interfaces options"

rsource "hdr/Kconfig"
rsource "init_devs/Kconfig"

config MOD_GNRC_NETIF_IPV6
    bool "GNRC Network Interface IPv6 support"
    default y if MOD_GNRC_IPV6

config MOD_GNRC_NETIF_6LO
    bool "GNRC Network Interface Sixlowpan support"
    default y if MOD_GNRC_SIXLOWPAN

# include particular technologies
rsource "ethernet/Kconfig"
rsource "ieee802154/Kconfig"
endif # MOD_GNRC_NETIF
