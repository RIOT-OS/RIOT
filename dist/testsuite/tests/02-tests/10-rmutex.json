{
    "test" : "python",
    "node_defaults" : {
        "app" : "tests/rmutex"
    },
    "args" : {
        "python" :
        [
            "child = test.nodes[0].child",
            "",
            "thread_prio = {",
            "        3:  6,",
            "        4:  4,",
            "        5:  5,",
            "        6:  2,",
            "        7:  4",
            "        }",
            "",
            "lock_depth = {",
            "        3:  5,",
            "        4:  3,",
            "        5:  3,",
            "        6:  4,",
            "        7:  5",
            "        }",
            "",
            "def thread_prio_sort(x):",
            "    return thread_prio.get(x)*1000 + x",
            "",
            "for k in thread_prio.keys():",
            "    child.expect(u\"T%i \\(prio %i, depth 0\\): trying to lock rmutex now\" %",
            "                 (k, thread_prio[k]))",
            "",
            "pri_sorted = sorted(thread_prio, key=thread_prio_sort)",
            "for T in pri_sorted:",
            "    for depth in range(lock_depth[T]):",
            "        child.expect(u\"T%i \\(prio %i, depth %i\\): locked rmutex now\" %",
            "                     (T, thread_prio[T], depth))"
        ]
    }
}
