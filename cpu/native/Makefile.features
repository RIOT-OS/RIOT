ifeq (FreeBSD,$(OS))
  DISABLE_LIBSTDCPP ?= 1
endif

ifeq ($(NATIVE_64BIT), y)
  FEATURES_PROVIDED += arch_64bit
else
  FEATURES_PROVIDED += arch_32bit
endif
FEATURES_PROVIDED += arch_native
FEATURES_PROVIDED += cpp
ifneq ($(DISABLE_LIBSTDCPP),1)
  # libstdc++ on FreeBSD is broken (does not work with -m32)
  # Override with "export DISABLE_LIBSTDCPP=0"
  FEATURES_PROVIDED += libstdcpp
endif
FEATURES_PROVIDED += periph_cpuid
FEATURES_PROVIDED += periph_eeprom
FEATURES_PROVIDED += periph_flashpage
FEATURES_PROVIDED += periph_flashpage_pagewise
FEATURES_PROVIDED += periph_hwrng
FEATURES_PROVIDED += periph_pm
FEATURES_PROVIDED += periph_pwm
FEATURES_PROVIDED += periph_timer_periodic
ifeq ($(OS) $(OS_ARCH),Linux x86_64)
  # TODO: Add rust support for native 64 bit.
  ifneq ($(NATIVE_64BIT), y)
    FEATURES_PROVIDED += rust_target
  endif
endif
FEATURES_PROVIDED += ssp

ifeq ($(OS),Linux)
  # Access to hardware SPI bus is only supported on Linux hosts
  FEATURES_PROVIDED += periph_spi
  # Hardware GPIO access is only available on Linux hosts
  FEATURES_PROVIDED += periph_gpio periph_gpio_irq
  # CAN is only supported on Linux through socketCAN
  FEATURES_PROVIDED += periph_can
endif

# This configuration enables modules that are only available when using Kconfig
# module modelling
ifeq (1, $(TEST_KCONFIG))
  KCONFIG_CPU_CONFIG += $(RIOTCPU)/native/native.config
endif
