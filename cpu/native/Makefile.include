NATIVEINCLUDES += -I$(RIOTCPU)/native/include/

ifeq ($(OS),Darwin)
	EXECUTABLE_EXTENSION ?= macho
else
	EXECUTABLE_EXTENSION ?= elf
endif

ifneq (,$(filter periph_can,$(USEMODULE)))
  ifeq (,$(filter libsocketcan,$(USEPKG)))
    # link system libsocketcan if not using the provided package
    LINKFLAGS += -lsocketcan
  endif
endif

ifneq (,$(filter can,$(USEMODULE)))
  # In case of native, we rely on the real CAN implementation to handle
  # the nitty-gritty details such as loop delay.
  CFLAGS += -DCONFIG_FDCAN_DEVICE_TRANSCEIVER_LOOP_DELAY=0
endif

ifneq (,$(filter periph_timer,$(USEMODULE)))
  ifneq ($(OS),Darwin)
		# using timer_settime requires -lrt
		LINKFLAGS += -lrt
	endif
endif

TOOLCHAINS_SUPPORTED = gnu llvm afl

# Platform triple as used by Rust
ifeq ($(OS) $(OS_ARCH),Linux x86_64)
  ifneq (,$(filter arch_32bit,$(FEATURES_USED)))
    RUST_TARGET = i686-unknown-linux-gnu
  else
    RUST_TARGET = x86_64-unknown-linux-gnu
  endif
endif

include $(RIOTMAKE)/arch/native.inc.mk

USE_LIBUCONTEXT := $(shell pkg-config libucontext 2> /dev/null && echo 1 || echo 0)

ifeq ($(USE_LIBUCONTEXT),1)
  CFLAGS += $(pkg-config libucontext --cflags) -DUSE_LIBUCONTEXT=1
  LINKFLAGS += $(shell pkg-config libucontext --libs)
endif
