FAM = $(shell echo $(CPU_FAM) | tr 'a-z-' 'A-Z_')
CFLAGS += -DCPU_FAM_$(FAM)

# All stm32 families provide pm support
USEMODULE += pm_layered

# include stm32 common functions and stm32 common periph drivers
USEMODULE += stm32_common stm32_common_periph

# For stm32 cpu's we use the stm32_common.ld linker script
export LINKFLAGS += -L$(RIOTCPU)/stm32_common/ldscripts
LINKER_SCRIPT ?= stm32_common.ld

INCLUDES += -I$(RIOTCPU)/stm32_common/include

# Compute ROM_LEN and RAM_LEN
include $(RIOTCPU)/stm32_common/stm32_mem_lengths.mk
KB := 1024
LEN := $(shell echo $(ROM_LEN) | sed 's/K//')
FLASHSIZE := $(shell echo $$(( $(LEN) * $(KB) )) )

# Get CPU_LINE_ variable
-include $(RIOTCPU)/$(CPU)/stm32_line.mk
CPU_LINE ?= $(shell echo $(CPU_MODEL) | cut -c -9 | tr 'a-z-' 'A-Z_')xx

# Set CFLAGS
CFLAGS += -D$(CPU_LINE) -DCPU_LINE_$(CPU_LINE)
CFLAGS += -DSTM32_FLASHSIZE=$(FLASHSIZE)U

info-stm32:
	@echo "CPU: $(CPU_MODEL)"
	@echo "$(TAB)Line: $(CPU_LINE)"
	@echo "$(TAB)Pin count:$(TAB)$(STM32_PINCOUNT)"
	@echo "$(TAB)ROM size:$(TAB)$(ROM_LEN) ($(FLASHSIZE) Bytes)"
	@echo "$(TAB)RAM size:$(TAB)$(RAM_LEN)"

ifneq (,$(CCMRAM_LEN))
  LINKFLAGS += $(LINKFLAGPREFIX)--defsym=_ccmram_length=$(CCMRAM_LEN)
endif
