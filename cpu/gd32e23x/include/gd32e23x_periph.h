/*
 * Copyright (c) 2009-2019 ARM Limited. All rights reserved.
 * Copyright (C) 2023 BISSELL Homecare, Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the License); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @file     gd32e23x_periph.h
 * @brief    CMSIS HeaderFile
 * @note     Generated by SVDConv V3.3.44
 *           from File /Arm/Packs/GigaDevice/GD32E23x_DFP/1.0.3/SVD/GD32E230.svd
 */


/** @addtogroup
  * @{
  */


/** @addtogroup GD32E230
  * @{
  */


#ifndef GD32E23X_PERIPH_H
#define GD32E23X_PERIPH_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M23 Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* ==========================================  GD32E230 Specific Interrupt Numbers  ========================================== */
  WWDGT_IRQn                =   0,              /*!< 0  WWDGT                                                                  */
  LVD_IRQn                  =   1,              /*!< 1  LVD                                                                    */
  RTC_IRQn                  =   2,              /*!< 2  RTC                                                                    */
  FMC_IRQn                  =   3,              /*!< 3  FMC                                                                    */
  RCU_IRQn                  =   4,              /*!< 4  RCU                                                                    */
  EXTI0_1_IRQn              =   5,              /*!< 5  EXTI0_1                                                                */
  EXTI2_3_IRQn              =   6,              /*!< 6  EXTI2_3                                                                */
  EXTI4_15_IRQn             =   7,              /*!< 7  EXTI4_15                                                               */
  DMA_Channel0_IRQn         =   9,              /*!< 9  DMA_Channel0                                                           */
  DMA_Channel1_2_IRQn       =  10,              /*!< 10 DMA_Channel1_2                                                         */
  DMA_Channel3_4_IRQn       =  11,              /*!< 11 DMA_Channel3_4                                                         */
  ADC_CMP_IRQn              =  12,              /*!< 12 ADC_CMP                                                                */
  TIMER0_BRK_UP_TRG_COM_IRQn=  13,              /*!< 13 TIMER0_BRK_UP_TRG_COM                                                  */
  TIMER0_CC_IRQn            =  14,              /*!< 14 TIMER0_CC                                                              */
  TIMER2_IRQn               =  16,              /*!< 16 TIMER2                                                                 */
  TIMER5_IRQn               =  17,              /*!< 17 TIMER5                                                                 */
  TIMER13_IRQn              =  19,              /*!< 19 TIMER13                                                                */
  TIMER14_IRQn              =  20,              /*!< 20 TIMER14                                                                */
  TIMER15_IRQn              =  21,              /*!< 21 TIMER15                                                                */
  TIMER16_IRQn              =  22,              /*!< 22 TIMER16                                                                */
  I2C0_EV_IRQn              =  23,              /*!< 23 I2C0_EV                                                                */
  I2C1_EV_IRQn              =  24,              /*!< 24 I2C1_EV                                                                */
  SPI0_IRQn                 =  25,              /*!< 25 SPI0                                                                   */
  SPI1_IRQn                 =  26,              /*!< 26 SPI1                                                                   */
  USART0_IRQn               =  27,              /*!< 27 USART0                                                                 */
  USART1_IRQn               =  28,              /*!< 28 USART1                                                                 */
  I2C0_ER_IRQn              =  32,              /*!< 32 I2C0_ER                                                                */
  I2C1_ER_IRQn              =  34               /*!< 34 I2C1_ER                                                                */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M23 Processor and Core Peripherals  =========================== */
#define __CM23_REV                 0x0000U      /*!< CM23 Core Revision                                                        */
#define __NVIC_PRIO_BITS               2        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */
#define __MPU_PRESENT                  0        /*!< MPU present                                                               */
#define __FPU_PRESENT                  0        /*!< FPU present                                                               */
#define __SAUREGION_PRESENT            0        /*!< SAU region present                                                        */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm23.h"                          /*!< ARM Cortex-M23 processor and core peripherals                             */
// #include "system_gd32e23x.h"                    /*!< GD32E230 System                                                           */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* ========================================  Start of section using anonymous unions  ======================================== */
#if defined (__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Not supported compiler type
#endif


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Analog to digital converter (ADC)
  */

typedef struct {                                /*!< ADC Structure                                                             */

  union {
    __IOM uint32_t STAT;                        /*!< status register                                                           */

    struct {
      __IOM uint32_t WDE        : 1;            /*!< Analog watchdog event flag                                                */
      __IOM uint32_t EOC        : 1;            /*!< End of group conversion flag                                              */
      __IOM uint32_t EOIC       : 1;            /*!< End of inserted group conversion flag                                     */
      __IOM uint32_t STIC       : 1;            /*!< Start flag of inserted channel group                                      */
      __IOM uint32_t STRC       : 1;            /*!< Start flag of regular channel group                                       */
            uint32_t            : 27;
    } STAT_b;
  } ;

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t WDCHSEL    : 5;            /*!< Analog watchdog channel select                                            */
      __IOM uint32_t EOCIE      : 1;            /*!< Interrupt enable for EOC                                                  */
      __IOM uint32_t WDEIE      : 1;            /*!< Interrupt enable for WDE                                                  */
      __IOM uint32_t EOICIE     : 1;            /*!< Interrupt enable for EOIC                                                 */
      __IOM uint32_t SM         : 1;            /*!< Scan mode                                                                 */
      __IOM uint32_t WDSC       : 1;            /*!< When in scan mode, analog watchdog is effective on a single
                                                     channel                                                                   */
      __IOM uint32_t ICA        : 1;            /*!< Inserted channel group convert automatically                              */
      __IOM uint32_t DISRC      : 1;            /*!< Discontinuous mode on regular channels                                    */
      __IOM uint32_t DISIC      : 1;            /*!< Discontinuous mode on injected channels                                   */
      __IOM uint32_t DISNUM     : 3;            /*!< Number of conversions in discontinuous mode                               */
            uint32_t            : 6;
      __IOM uint32_t IWDEN      : 1;            /*!< Inserted channel analog watchdog enable                                   */
      __IOM uint32_t RWDEN      : 1;            /*!< Regular channel analog watchdog enable                                    */
      __IOM uint32_t DRES       : 2;            /*!< ADC resolution                                                            */
            uint32_t            : 6;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t ADCON      : 1;            /*!< ADC ON                                                                    */
      __IOM uint32_t CTN        : 1;            /*!< Continuous mode                                                           */
      __IOM uint32_t CLB        : 1;            /*!< ADC calibration                                                           */
      __IOM uint32_t RSTCLB     : 1;            /*!< Reset calibration                                                         */
            uint32_t            : 4;
      __IOM uint32_t DMA        : 1;            /*!< DMA request enable                                                        */
            uint32_t            : 2;
      __IOM uint32_t DAL        : 1;            /*!< Data alignment                                                            */
      __IOM uint32_t ETSIC      : 3;            /*!< External trigger select for inserted channel                              */
      __IOM uint32_t ETEIC      : 1;            /*!< External trigger enable for inserted channels                             */
            uint32_t            : 1;
      __IOM uint32_t ETSRC      : 3;            /*!< External trigger select for regular channel                               */
      __IOM uint32_t ETERC      : 1;            /*!< External trigger enable for regular channel                               */
      __IOM uint32_t SWICST     : 1;            /*!< Start on inserted channel                                                 */
      __IOM uint32_t SWRCST     : 1;            /*!< Start on regular channel                                                  */
      __IOM uint32_t TSVREN     : 1;            /*!< Channel 16 and 17 enable of ADC                                           */
            uint32_t            : 8;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t SAMPT0;                      /*!< Sampling time register 0                                                  */

    struct {
            uint32_t            : 18;
      __IOM uint32_t SPT16      : 3;            /*!< Channel 16 sample time selection                                          */
      __IOM uint32_t SPT17      : 3;            /*!< Channel 17 sample time selection                                          */
            uint32_t            : 8;
    } SAMPT0_b;
  } ;

  union {
    __IOM uint32_t SAMPT1;                      /*!< Sampling time register 1                                                  */

    struct {
      __IOM uint32_t SPT0       : 3;            /*!< Channel 0 sample time selection                                           */
      __IOM uint32_t SPT1       : 3;            /*!< Channel 1 sample time selection                                           */
      __IOM uint32_t SPT2       : 3;            /*!< Channel 2 sample time selection                                           */
      __IOM uint32_t SPT3       : 3;            /*!< Channel 3 sample time selection                                           */
      __IOM uint32_t SPT4       : 3;            /*!< Channel 4 sample time selection                                           */
      __IOM uint32_t SPT5       : 3;            /*!< Channel 5 sample time selection                                           */
      __IOM uint32_t SPT6       : 3;            /*!< Channel 6 sample time selection                                           */
      __IOM uint32_t SPT7       : 3;            /*!< Channel 7 sample time selection                                           */
      __IOM uint32_t SPT8       : 3;            /*!< Channel 8 sample time selection                                           */
      __IOM uint32_t SPT9       : 3;            /*!< Channel 9 sample time selection                                           */
            uint32_t            : 2;
    } SAMPT1_b;
  } ;

  union {
    __IOM uint32_t IOFF0;                       /*!< Inserted channel data offset register 0                                   */

    struct {
      __IOM uint32_t IOFF       : 12;           /*!< Data offset for injected channel x                                        */
            uint32_t            : 20;
    } IOFF0_b;
  } ;

  union {
    __IOM uint32_t IOFF1;                       /*!< Inserted channel data offset register 1                                   */

    struct {
      __IOM uint32_t IOFF       : 12;           /*!< Data offset for injected channel x                                        */
            uint32_t            : 20;
    } IOFF1_b;
  } ;

  union {
    __IOM uint32_t IOFF2;                       /*!< Inserted channel data offset register 2                                   */

    struct {
      __IOM uint32_t IOFF       : 12;           /*!< Data offset for injected channel x                                        */
            uint32_t            : 20;
    } IOFF2_b;
  } ;

  union {
    __IOM uint32_t IOFF3;                       /*!< Inserted channel data offset register 3                                   */

    struct {
      __IOM uint32_t IOFF       : 12;           /*!< Data offset for injected channel x                                        */
            uint32_t            : 20;
    } IOFF3_b;
  } ;

  union {
    __IOM uint32_t WDHT;                        /*!< watchdog higher threshold register                                        */

    struct {
      __IOM uint32_t WDHT       : 12;           /*!< Analog watchdog high threshold                                            */
            uint32_t            : 20;
    } WDHT_b;
  } ;

  union {
    __IOM uint32_t WDLT;                        /*!< watchdog low threshold register                                           */

    struct {
      __IOM uint32_t WDLT       : 12;           /*!< Analog watchdog lower threshold                                           */
            uint32_t            : 20;
    } WDLT_b;
  } ;

  union {
    __IOM uint32_t RSQ0;                        /*!< regular sequence register 0                                               */

    struct {
      __IOM uint32_t RSQ12      : 5;            /*!< 12th conversion in regular sequence                                       */
      __IOM uint32_t RSQ13      : 5;            /*!< 13th conversion in regular sequence                                       */
      __IOM uint32_t RSQ14      : 5;            /*!< 14th conversion in regular sequence                                       */
      __IOM uint32_t RSQ15      : 5;            /*!< 15th conversion in regular sequence                                       */
      __IOM uint32_t RL         : 4;            /*!< Regular channel sequence length                                           */
            uint32_t            : 8;
    } RSQ0_b;
  } ;

  union {
    __IOM uint32_t RSQ1;                        /*!< regular sequence register 1                                               */

    struct {
      __IOM uint32_t RSQ6       : 5;            /*!< 6th conversion in regular sequence                                        */
      __IOM uint32_t RSQ7       : 5;            /*!< 7th conversion in regular sequence                                        */
      __IOM uint32_t RSQ8       : 5;            /*!< 8th conversion in regular sequence                                        */
      __IOM uint32_t RSQ9       : 5;            /*!< 9th conversion in regular sequence                                        */
      __IOM uint32_t RSQ10      : 5;            /*!< 10th conversion in regular sequence                                       */
      __IOM uint32_t RSQ11      : 5;            /*!< 11th conversion in regular sequence                                       */
            uint32_t            : 2;
    } RSQ1_b;
  } ;

  union {
    __IOM uint32_t RSQ2;                        /*!< regular sequence register 2                                               */

    struct {
      __IOM uint32_t RSQ0       : 5;            /*!< conversion in regular sequence                                            */
      __IOM uint32_t RSQ1       : 5;            /*!< 1st conversion in regular sequence                                        */
      __IOM uint32_t RSQ2       : 5;            /*!< 2nd conversion in regular sequence                                        */
      __IOM uint32_t RSQ3       : 5;            /*!< 3rd conversion in regular sequence                                        */
      __IOM uint32_t RSQ4       : 5;            /*!< 4th conversion in regular sequence                                        */
      __IOM uint32_t RSQ5       : 5;            /*!< 5th conversion in regular sequence                                        */
            uint32_t            : 2;
    } RSQ2_b;
  } ;

  union {
    __IOM uint32_t ISQ;                         /*!< injected sequence register                                                */

    struct {
      __IOM uint32_t ISQ0       : 5;            /*!< conversion in injected sequence                                           */
      __IOM uint32_t ISQ1       : 5;            /*!< 1st conversion in injected sequence                                       */
      __IOM uint32_t ISQ2       : 5;            /*!< 2nd conversion in injected sequence                                       */
      __IOM uint32_t ISQ3       : 5;            /*!< 3rd conversion in injected sequence                                       */
      __IOM uint32_t IL         : 2;            /*!< Injected sequence length                                                  */
            uint32_t            : 10;
    } ISQ_b;
  } ;

  union {
    __IM  uint32_t IDATA0;                      /*!< injected data register 0                                                  */

    struct {
      __IM  uint32_t IDATAn     : 16;           /*!< Injected data                                                             */
            uint32_t            : 16;
    } IDATA0_b;
  } ;

  union {
    __IM  uint32_t IDATA1;                      /*!< injected data register 1                                                  */

    struct {
      __IM  uint32_t IDATAn     : 16;           /*!< Injected data                                                             */
            uint32_t            : 16;
    } IDATA1_b;
  } ;

  union {
    __IM  uint32_t IDATA2;                      /*!< injected data register 2                                                  */

    struct {
      __IM  uint32_t IDATAn     : 16;           /*!< Injected data                                                             */
            uint32_t            : 16;
    } IDATA2_b;
  } ;

  union {
    __IM  uint32_t IDATA3;                      /*!< injected data register 3                                                  */

    struct {
      __IM  uint32_t IDATAn     : 16;           /*!< Injected data                                                             */
            uint32_t            : 16;
    } IDATA3_b;
  } ;

  union {
    __IM  uint32_t RDATA;                       /*!< regular data register                                                     */

    struct {
      __IM  uint32_t RDATA      : 16;           /*!< Regular data                                                              */
            uint32_t            : 16;
    } RDATA_b;
  } ;
  __IM  uint32_t  RESERVED[12];

  union {
    __IOM uint32_t OVSAMPCTL;                   /*!< ADC oversample control register                                           */

    struct {
      __IOM uint32_t OVSEN      : 1;            /*!< Oversampler Enable                                                        */
            uint32_t            : 1;
      __IOM uint32_t OVSR       : 3;            /*!< Oversampling ratio                                                        */
      __IOM uint32_t OVSS       : 4;            /*!< Oversampling shift                                                        */
      __IOM uint32_t TOVS       : 1;            /*!< Triggered Oversampling                                                    */
            uint32_t            : 22;
    } OVSAMPCTL_b;
  } ;
} ADC_Type;                                     /*!< Size = 132 (0x84)                                                         */



/* =========================================================================================================================== */
/* ================                                            CMP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Comparator (CMP)
  */

typedef struct {                                /*!< CMP Structure                                                             */

  union {
    __IOM uint32_t CS;                          /*!< control and status register                                               */

    struct {
      __IOM uint32_t CMPEN      : 1;            /*!< Comparator enable                                                         */
      __IOM uint32_t CMPSW      : 1;            /*!< Comparator switch                                                         */
      __IOM uint32_t CMPM       : 2;            /*!< Comparator mode                                                           */
      __IOM uint32_t CMPMSEL    : 3;            /*!< Comparator input selection                                                */
            uint32_t            : 1;
      __IOM uint32_t CMPOSEL    : 3;            /*!< Comparator output selection                                               */
      __IOM uint32_t CMPPL      : 1;            /*!< Polarity of comparator output                                             */
      __IOM uint32_t CMPHST     : 2;            /*!< Comparator hysteresis                                                     */
      __IM  uint32_t CMPO       : 1;            /*!< Comparator 0 output                                                       */
      __IOM uint32_t CMPLK      : 1;            /*!< Comparator 0 lock                                                         */
            uint32_t            : 16;
    } CS_b;
  } ;
} CMP_Type;                                     /*!< Size = 4 (0x4)                                                            */



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief cyclic redundancy check calculation unit (CRC)
  */

typedef struct {                                /*!< CRC Structure                                                             */

  union {
    __IOM uint32_t DATA;                        /*!< Data register                                                             */

    struct {
      __IOM uint32_t DATA       : 32;           /*!< CRC calculation result bits                                               */
    } DATA_b;
  } ;

  union {
    __IOM uint32_t FDATA;                       /*!< Free data register                                                        */

    struct {
      __IOM uint32_t FDATA      : 8;            /*!< General-purpose 8-bit data register bits                                  */
            uint32_t            : 24;
    } FDATA_b;
  } ;

  union {
    __IOM uint32_t CTL;                         /*!< Control register                                                          */

    struct {
      __IOM uint32_t RST        : 1;            /*!< reset bit                                                                 */
            uint32_t            : 2;
      __IOM uint32_t PS         : 2;            /*!< Size of polynomial                                                        */
      __IOM uint32_t REV_I      : 2;            /*!< Reverse input data                                                        */
      __IOM uint32_t REV_O      : 1;            /*!< Reverse output data                                                       */
            uint32_t            : 24;
    } CTL_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t IDATA;                       /*!< Initialization Data Register                                              */

    struct {
      __IOM uint32_t IDATA      : 32;           /*!< CRC calculation initial value                                             */
    } IDATA_b;
  } ;

  union {
    __IOM uint32_t POLY;                        /*!< Polynomial register                                                       */

    struct {
      __IOM uint32_t POLY       : 32;           /*!< User configurable polynomial value                                        */
    } POLY_b;
  } ;
} CRC_Type;                                     /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                          DBGMCU                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Debug support (DBGMCU)
  */

typedef struct {                                /*!< DBGMCU Structure                                                          */

  union {
    __IM  uint32_t ID;                          /*!< MCU Device ID Code Register                                               */

    struct {
      __IM  uint32_t ID_CODE    : 32;           /*!< DBG ID code register                                                      */
    } ID_b;
  } ;

  union {
    __IOM uint32_t CTL0;                        /*!< Debug Control Register 0                                                  */

    struct {
      __IOM uint32_t SLP_HOLD   : 1;            /*!< Sleep mode hold register                                                  */
      __IOM uint32_t DSLP_HOLD  : 1;            /*!< DEEPSLEEP mode hold Mode                                                  */
      __IOM uint32_t STB_HOLD   : 1;            /*!< Standby mode hold Mode                                                    */
            uint32_t            : 5;
      __IOM uint32_t FWDGT_HOLD : 1;            /*!< FWDGT hold register                                                       */
      __IOM uint32_t WWDGT_HOLD : 1;            /*!< WWDGT hold register                                                       */
      __IOM uint32_t TIMER0_HOLD : 1;           /*!< Timer 0 hold register                                                     */
            uint32_t            : 1;
      __IOM uint32_t TIMER2_HOLD : 1;           /*!< Timer 2 hold register                                                     */
            uint32_t            : 2;
      __IOM uint32_t I2C0_HOLD  : 1;            /*!< I2C0 hold register                                                        */
      __IOM uint32_t I2C1_HOLD  : 1;            /*!< I2C1 hold register                                                        */
            uint32_t            : 2;
      __IOM uint32_t TIMER5_HOLD : 1;           /*!< Timer 5 hold register                                                     */
            uint32_t            : 7;
      __IOM uint32_t TIMER13_HOLD : 1;          /*!< Timer 13 hold register                                                    */
            uint32_t            : 4;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< Debug Control Register 1                                                  */

    struct {
            uint32_t            : 10;
      __IOM uint32_t RTC_HOLD   : 1;            /*!< RTC hold register                                                         */
            uint32_t            : 5;
      __IOM uint32_t TIMER14_HOLD : 1;          /*!< Timer 14 hold register                                                    */
      __IOM uint32_t TIMER15_HOLD : 1;          /*!< Timer 15 hold register                                                    */
      __IOM uint32_t TIMER16_HOLD : 1;          /*!< Timer 16 hold register                                                    */
            uint32_t            : 13;
    } CTL1_b;
  } ;
} DBGMCU_Type;                                  /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DMA controller (DMA)
  */

typedef struct {                                /*!< DMA Structure                                                             */

  union {
    __IM  uint32_t INTF;                        /*!< DMA interrupt flag register (DMA_INTF)                                    */

    struct {
      __IM  uint32_t GIF0       : 1;            /*!< Channel 0 Global interrupt flag                                           */
      __IM  uint32_t FTFIF0     : 1;            /*!< Channel 0 Full Transfer Finish flag                                       */
      __IM  uint32_t HTFIF0     : 1;            /*!< Channel 0 Half Transfer Finish flag                                       */
      __IM  uint32_t ERRIF0     : 1;            /*!< Channel 0 Error flag                                                      */
      __IM  uint32_t GIF1       : 1;            /*!< Channel 1 Global interrupt flag                                           */
      __IM  uint32_t FTFIF1     : 1;            /*!< Channel 1 Full Transfer Finish flag                                       */
      __IM  uint32_t HTFIF1     : 1;            /*!< Channel 1 Half Transfer Finish flag                                       */
      __IM  uint32_t ERRIF1     : 1;            /*!< Channel 1 Error flag                                                      */
      __IM  uint32_t GIF2       : 1;            /*!< Channel 2 Global interrupt flag                                           */
      __IM  uint32_t FTFIF2     : 1;            /*!< Channel 2 Full Transfer Finish flag                                       */
      __IM  uint32_t HTFIF2     : 1;            /*!< Channel 2 Half Transfer Finish flag                                       */
      __IM  uint32_t ERRIF2     : 1;            /*!< Channel 2 Error flag                                                      */
      __IM  uint32_t GIF3       : 1;            /*!< Channel 3 Global interrupt flag                                           */
      __IM  uint32_t FTFIF3     : 1;            /*!< Channel 3 Full Transfer Finish flag                                       */
      __IM  uint32_t HTFIF3     : 1;            /*!< Channel 3 Half Transfer Finish flag                                       */
      __IM  uint32_t ERRIF3     : 1;            /*!< Channel 3 Error flag                                                      */
      __IM  uint32_t GIF4       : 1;            /*!< Channel 4 Global interrupt flag                                           */
      __IM  uint32_t FTFIF4     : 1;            /*!< Channel 4 Full Transfer Finish flag                                       */
      __IM  uint32_t HTFIF4     : 1;            /*!< Channel 4 Half Transfer Finish flag                                       */
      __IM  uint32_t ERRIF4     : 1;            /*!< Channel 4 Error flag                                                      */
            uint32_t            : 12;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t INTC;                        /*!< DMA interrupt flag clear register (DMA_INTC)                              */

    struct {
      __OM  uint32_t GIFC0      : 1;            /*!< Channel 0 Global interrupt flag clear                                     */
      __OM  uint32_t FTFIFC0    : 1;            /*!< Channel 0 Full Transfer Finish clear                                      */
      __OM  uint32_t HTFIFC0    : 1;            /*!< Channel 0 Half Transfer clear                                             */
      __OM  uint32_t ERRIFC0    : 1;            /*!< Channel 0 Error clear                                                     */
      __OM  uint32_t GIFC1      : 1;            /*!< Channel 1 Global interrupt flag clear                                     */
      __OM  uint32_t FTFIFC1    : 1;            /*!< Channel 1 Full Transfer Finish clear                                      */
      __OM  uint32_t HTFIFC1    : 1;            /*!< Channel 1 Half Transfer clear                                             */
      __OM  uint32_t ERRIFC1    : 1;            /*!< Channel 1 Error clear                                                     */
      __OM  uint32_t GIFC2      : 1;            /*!< Channel 2 Global interrupt flag clear                                     */
      __OM  uint32_t FTFIFC2    : 1;            /*!< Channel 2 Full Transfer Finish clear                                      */
      __OM  uint32_t HTFIFC2    : 1;            /*!< Channel 2 Half Transfer clear                                             */
      __OM  uint32_t ERRIFC2    : 1;            /*!< Channel 2 Error clear                                                     */
      __OM  uint32_t GIFC3      : 1;            /*!< Channel 3 Global interrupt flag clear                                     */
      __OM  uint32_t FTFIFC3    : 1;            /*!< Channel 3 Full Transfer Finish clear                                      */
      __OM  uint32_t HTFIFC3    : 1;            /*!< Channel 3 Half Transfer clear                                             */
      __OM  uint32_t ERRIFC3    : 1;            /*!< Channel 3 Error clear                                                     */
      __OM  uint32_t GIFC4      : 1;            /*!< Channel 4 Global interrupt flag clear                                     */
      __OM  uint32_t FTFIFC4    : 1;            /*!< Channel 4 Full Transfer Finish clear                                      */
      __OM  uint32_t HTFIFC4    : 1;            /*!< Channel 4 Half Transfer clear                                             */
      __OM  uint32_t ERRIFC4    : 1;            /*!< Channel 4 Error clear                                                     */
            uint32_t            : 12;
    } INTC_b;
  } ;

  union {
    __IOM uint32_t CH0CTL;                      /*!< DMA channel configuration register (DMA_CH0CTL)                           */

    struct {
      __IOM uint32_t CHEN       : 1;            /*!< Channel enable                                                            */
      __IOM uint32_t FTFIE      : 1;            /*!< Full Transfer Finish interrupt enable                                     */
      __IOM uint32_t HTFIE      : 1;            /*!< Half Transfer Finish interrupt enable                                     */
      __IOM uint32_t ERRIE      : 1;            /*!< Transfer access error interrupt enable                                    */
      __IOM uint32_t DIR        : 1;            /*!< Transfer direction                                                        */
      __IOM uint32_t CMEN       : 1;            /*!< Circular mode enable                                                      */
      __IOM uint32_t PNAGA      : 1;            /*!< Next address generation algorithm of peripheral                           */
      __IOM uint32_t MNAGA      : 1;            /*!< Next address generation algorithm of memory                               */
      __IOM uint32_t PWIDTH     : 2;            /*!< Transfer data size of peripheral                                          */
      __IOM uint32_t MWIDTH     : 2;            /*!< Transfer data size of memory                                              */
      __IOM uint32_t PRIO       : 2;            /*!< Priority Level of this channel                                            */
      __IOM uint32_t M2M        : 1;            /*!< Memory to memory mode                                                     */
            uint32_t            : 17;
    } CH0CTL_b;
  } ;

  union {
    __IOM uint32_t CH0CNT;                      /*!< DMA channel 0 counter register                                            */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< Transfer counter                                                          */
            uint32_t            : 16;
    } CH0CNT_b;
  } ;

  union {
    __IOM uint32_t CH0PADDR;                    /*!< DMA channel 0 peripheral base address register                            */

    struct {
      __IOM uint32_t PADDR      : 32;           /*!< Peripheral base address                                                   */
    } CH0PADDR_b;
  } ;

  union {
    __IOM uint32_t CH0MADDR;                    /*!< DMA channel 0 memory base address register                                */

    struct {
      __IOM uint32_t MADDR      : 32;           /*!< Memory address                                                            */
    } CH0MADDR_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t CH1CTL;                      /*!< DMA channel configuration register (DMA_CH1CTL)                           */

    struct {
      __IOM uint32_t CHEN       : 1;            /*!< Channel enable                                                            */
      __IOM uint32_t FTFIE      : 1;            /*!< Full Transfer Finish interrupt enable                                     */
      __IOM uint32_t HTFIE      : 1;            /*!< Half Transfer Finish interrupt enable                                     */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t DIR        : 1;            /*!< Transfer direction                                                        */
      __IOM uint32_t CMEN       : 1;            /*!< Circular mode enable                                                      */
      __IOM uint32_t PNAGA      : 1;            /*!< Next address generation algorithm of peripheral                           */
      __IOM uint32_t MNAGA      : 1;            /*!< Next address generation algorithm of memory                               */
      __IOM uint32_t PWIDTH     : 2;            /*!< Transfer data size of peripheral                                          */
      __IOM uint32_t MWIDTH     : 2;            /*!< Transfer data size of memory                                              */
      __IOM uint32_t PRIO       : 2;            /*!< Priority Level of this channel                                            */
      __IOM uint32_t M2M        : 1;            /*!< Memory to memory mode                                                     */
            uint32_t            : 17;
    } CH1CTL_b;
  } ;

  union {
    __IOM uint32_t CH1CNT;                      /*!< DMA channel 1 counter register                                            */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< Transfer counter                                                          */
            uint32_t            : 16;
    } CH1CNT_b;
  } ;

  union {
    __IOM uint32_t CH1PADDR;                    /*!< DMA channel 1 peripheral base address register                            */

    struct {
      __IOM uint32_t PADDR      : 32;           /*!< Peripheral base address                                                   */
    } CH1PADDR_b;
  } ;

  union {
    __IOM uint32_t CH1MADDR;                    /*!< DMA channel 1 memory base address register                                */

    struct {
      __IOM uint32_t MADDR      : 32;           /*!< Memory address                                                            */
    } CH1MADDR_b;
  } ;
  __IM  uint32_t  RESERVED1;

  union {
    __IOM uint32_t CH2CTL;                      /*!< DMA channel configuration register (DMA_CH2CTL)                           */

    struct {
      __IOM uint32_t CHEN       : 1;            /*!< Channel enable                                                            */
      __IOM uint32_t FTFIE      : 1;            /*!< Full Transfer Finish interrupt enable                                     */
      __IOM uint32_t HTFIE      : 1;            /*!< Half Transfer Finish interrupt enable                                     */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t DIR        : 1;            /*!< Transfer direction                                                        */
      __IOM uint32_t CMEN       : 1;            /*!< Circular mode enable                                                      */
      __IOM uint32_t PNAGA      : 1;            /*!< Next address generation algorithm of peripheral                           */
      __IOM uint32_t MNAGA      : 1;            /*!< Next address generation algorithm of memory                               */
      __IOM uint32_t PWIDTH     : 2;            /*!< Transfer data size of peripheral                                          */
      __IOM uint32_t MWIDTH     : 2;            /*!< Transfer data size of memory                                              */
      __IOM uint32_t PRIO       : 2;            /*!< Priority Level of this channel                                            */
      __IOM uint32_t M2M        : 1;            /*!< Memory to memory mode                                                     */
            uint32_t            : 17;
    } CH2CTL_b;
  } ;

  union {
    __IOM uint32_t CH2CNT;                      /*!< DMA channel 2 counter register                                            */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< Transfer counter                                                          */
            uint32_t            : 16;
    } CH2CNT_b;
  } ;

  union {
    __IOM uint32_t CH2PADDR;                    /*!< DMA channel 2 peripheral base address register                            */

    struct {
      __IOM uint32_t PADDR      : 32;           /*!< Peripheral base address                                                   */
    } CH2PADDR_b;
  } ;

  union {
    __IOM uint32_t CH2MADDR;                    /*!< DMA channel 2 memory base address register                                */

    struct {
      __IOM uint32_t MADDR      : 32;           /*!< Memory address                                                            */
    } CH2MADDR_b;
  } ;
  __IM  uint32_t  RESERVED2;

  union {
    __IOM uint32_t CH3CTL;                      /*!< DMA channel configuration register (DMA_CH3CTL)                           */

    struct {
      __IOM uint32_t CHEN       : 1;            /*!< Channel enable                                                            */
      __IOM uint32_t FTFIE      : 1;            /*!< Full Transfer Finish interrupt enable                                     */
      __IOM uint32_t HTFIE      : 1;            /*!< Half Transfer Finish interrupt enable                                     */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t DIR        : 1;            /*!< Transfer direction                                                        */
      __IOM uint32_t CMEN       : 1;            /*!< Circular mode enable                                                      */
      __IOM uint32_t PNAGA      : 1;            /*!< Next address generation algorithm of peripheral                           */
      __IOM uint32_t MNAGA      : 1;            /*!< Next address generation algorithm of memory                               */
      __IOM uint32_t PWIDTH     : 2;            /*!< Transfer data size of peripheral                                          */
      __IOM uint32_t MWIDTH     : 2;            /*!< Transfer data size of memory                                              */
      __IOM uint32_t PRIO       : 2;            /*!< Priority Level of this channel                                            */
      __IOM uint32_t M2M        : 1;            /*!< Memory to memory mode                                                     */
            uint32_t            : 17;
    } CH3CTL_b;
  } ;

  union {
    __IOM uint32_t CH3CNT;                      /*!< DMA channel 3 counter register                                            */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< Transfer counter                                                          */
            uint32_t            : 16;
    } CH3CNT_b;
  } ;

  union {
    __IOM uint32_t CH3PADDR;                    /*!< DMA channel 3 peripheral base address register                            */

    struct {
      __IOM uint32_t PADDR      : 32;           /*!< Peripheral base address                                                   */
    } CH3PADDR_b;
  } ;

  union {
    __IOM uint32_t CH3MADDR;                    /*!< DMA channel 3 memory base address register                                */

    struct {
      __IOM uint32_t MADDR      : 32;           /*!< Memory address                                                            */
    } CH3MADDR_b;
  } ;
  __IM  uint32_t  RESERVED3;

  union {
    __IOM uint32_t CH4CTL;                      /*!< DMA channel configuration register (DMA_CH4CTL)                           */

    struct {
      __IOM uint32_t CHEN       : 1;            /*!< Channel enable                                                            */
      __IOM uint32_t FTFIE      : 1;            /*!< Full Transfer Finish interrupt enable                                     */
      __IOM uint32_t HTFIE      : 1;            /*!< Half Transfer Finish interrupt enable                                     */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t DIR        : 1;            /*!< Transfer direction                                                        */
      __IOM uint32_t CMEN       : 1;            /*!< Circular mode enable                                                      */
      __IOM uint32_t PNAGA      : 1;            /*!< Next address generation algorithm of peripheral                           */
      __IOM uint32_t MNAGA      : 1;            /*!< Next address generation algorithm of memory                               */
      __IOM uint32_t PWIDTH     : 2;            /*!< Transfer data size of peripheral                                          */
      __IOM uint32_t MWIDTH     : 2;            /*!< Transfer data size of memory                                              */
      __IOM uint32_t PRIO       : 2;            /*!< Priority Level of this channel                                            */
      __IOM uint32_t M2M        : 1;            /*!< Memory to memory mode                                                     */
            uint32_t            : 17;
    } CH4CTL_b;
  } ;

  union {
    __IOM uint32_t CH4CNT;                      /*!< DMA channel 4 counter register                                            */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< Transfer counter                                                          */
            uint32_t            : 16;
    } CH4CNT_b;
  } ;

  union {
    __IOM uint32_t CH4PADDR;                    /*!< DMA channel 4 peripheral base address register                            */

    struct {
      __IOM uint32_t PADDR      : 32;           /*!< Peripheral base address                                                   */
    } CH4PADDR_b;
  } ;

  union {
    __IOM uint32_t CH4MADDR;                    /*!< DMA channel 4 memory base address register                                */

    struct {
      __IOM uint32_t MADDR      : 32;           /*!< Memory address                                                            */
    } CH4MADDR_b;
  } ;
} DMA_Type;                                     /*!< Size = 104 (0x68)                                                         */



/* =========================================================================================================================== */
/* ================                                           EXTI                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief External interrupt/event
      controller (EXTI)
  */

typedef struct {                                /*!< EXTI Structure                                                            */

  union {
    __IOM uint32_t INTEN;                       /*!< Interrupt enable register (EXTI_INTEN)                                    */

    struct {
      __IOM uint32_t INTEN0     : 1;            /*!< Enable Interrupt on line 0                                                */
      __IOM uint32_t INTEN1     : 1;            /*!< Enable Interrupt on line 1                                                */
      __IOM uint32_t INTEN2     : 1;            /*!< Enable Interrupt on line 2                                                */
      __IOM uint32_t INTEN3     : 1;            /*!< Enable Interrupt on line 3                                                */
      __IOM uint32_t INTEN4     : 1;            /*!< Enable Interrupt on line 4                                                */
      __IOM uint32_t INTEN5     : 1;            /*!< Enable Interrupt on line 5                                                */
      __IOM uint32_t INTEN6     : 1;            /*!< Enable Interrupt on line 6                                                */
      __IOM uint32_t INTEN7     : 1;            /*!< Enable Interrupt on line 7                                                */
      __IOM uint32_t INTEN8     : 1;            /*!< Enable Interrupt on line 8                                                */
      __IOM uint32_t INTEN9     : 1;            /*!< Enable Interrupt on line 9                                                */
      __IOM uint32_t INTEN10    : 1;            /*!< Enable Interrupt on line 10                                               */
      __IOM uint32_t INTEN11    : 1;            /*!< Enable Interrupt on line 11                                               */
      __IOM uint32_t INTEN12    : 1;            /*!< Enable Interrupt on line 12                                               */
      __IOM uint32_t INTEN13    : 1;            /*!< Enable Interrupt on line 13                                               */
      __IOM uint32_t INTEN14    : 1;            /*!< Enable Interrupt on line 14                                               */
      __IOM uint32_t INTEN15    : 1;            /*!< Enable Interrupt on line 15                                               */
      __IOM uint32_t INTEN16    : 1;            /*!< Enable Interrupt on line 16                                               */
      __IOM uint32_t INTEN17    : 1;            /*!< Enable Interrupt on line 17                                               */
      __IOM uint32_t INTEN18    : 1;            /*!< Enable Interrupt on line 18                                               */
      __IOM uint32_t INTEN19    : 1;            /*!< Enable Interrupt on line 19                                               */
      __IOM uint32_t INTEN20    : 1;            /*!< Enable Interrupt on line 20                                               */
      __IOM uint32_t INTEN21    : 1;            /*!< Enable Interrupt on line 21                                               */
      __IOM uint32_t INTEN22    : 1;            /*!< Enable Interrupt on line 22                                               */
      __IOM uint32_t INTEN23    : 1;            /*!< Enable Interrupt on line 23                                               */
      __IOM uint32_t INTEN24    : 1;            /*!< Enable Interrupt on line 24                                               */
      __IOM uint32_t INTEN25    : 1;            /*!< Enable Interrupt on line 25                                               */
      __IOM uint32_t INTEN26    : 1;            /*!< Enable Interrupt on line 26                                               */
      __IOM uint32_t INTEN27    : 1;            /*!< Enable Interrupt on line 27                                               */
            uint32_t            : 4;
    } INTEN_b;
  } ;

  union {
    __IOM uint32_t EVEN;                        /*!< Event enable register (EXTI_EVEN)                                         */

    struct {
      __IOM uint32_t EVEN0      : 1;            /*!< Enable Event on line 0                                                    */
      __IOM uint32_t EVEN1      : 1;            /*!< Enable Event on line 1                                                    */
      __IOM uint32_t EVEN2      : 1;            /*!< Enable Event on line 2                                                    */
      __IOM uint32_t EVEN3      : 1;            /*!< Enable Event on line 3                                                    */
      __IOM uint32_t EVEN4      : 1;            /*!< Enable Event on line 4                                                    */
      __IOM uint32_t EVEN5      : 1;            /*!< Enable Event on line 5                                                    */
      __IOM uint32_t EVEN6      : 1;            /*!< Enable Event on line 6                                                    */
      __IOM uint32_t EVEN7      : 1;            /*!< Enable Event on line 7                                                    */
      __IOM uint32_t EVEN8      : 1;            /*!< Enable Event on line 8                                                    */
      __IOM uint32_t EVEN9      : 1;            /*!< Enable Event on line 9                                                    */
      __IOM uint32_t EVEN10     : 1;            /*!< Enable Event on line 10                                                   */
      __IOM uint32_t EVEN11     : 1;            /*!< Enable Event on line 11                                                   */
      __IOM uint32_t EVEN12     : 1;            /*!< Enable Event on line 12                                                   */
      __IOM uint32_t EVEN13     : 1;            /*!< Enable Event on line 13                                                   */
      __IOM uint32_t EVEN14     : 1;            /*!< Enable Event on line 14                                                   */
      __IOM uint32_t EVEN15     : 1;            /*!< Enable Event on line 15                                                   */
      __IOM uint32_t EVEN16     : 1;            /*!< Enable Event on line 16                                                   */
      __IOM uint32_t EVEN17     : 1;            /*!< Enable Event on line 17                                                   */
      __IOM uint32_t EVEN18     : 1;            /*!< Enable Event on line 18                                                   */
      __IOM uint32_t EVEN19     : 1;            /*!< Enable Event on line 19                                                   */
      __IOM uint32_t EVEN20     : 1;            /*!< Enable Event on line 20                                                   */
      __IOM uint32_t EVEN21     : 1;            /*!< Enable Event on line 21                                                   */
      __IOM uint32_t EVEN22     : 1;            /*!< Enable Event on line 22                                                   */
      __IOM uint32_t EVEN23     : 1;            /*!< Enable Event on line 23                                                   */
      __IOM uint32_t EVEN24     : 1;            /*!< Enable Event on line 24                                                   */
      __IOM uint32_t EVEN25     : 1;            /*!< Enable Event on line 25                                                   */
      __IOM uint32_t EVEN26     : 1;            /*!< Enable Event on line 26                                                   */
      __IOM uint32_t EVEN27     : 1;            /*!< Enable Event on line 27                                                   */
            uint32_t            : 4;
    } EVEN_b;
  } ;

  union {
    __IOM uint32_t RTEN;                        /*!< Rising Edge Trigger Enable register (EXTI_RTEN)                           */

    struct {
      __IOM uint32_t RTEN0      : 1;            /*!< Rising trigger event configuration of line 0                              */
      __IOM uint32_t RTEN1      : 1;            /*!< Rising trigger event configuration of line 1                              */
      __IOM uint32_t RTEN2      : 1;            /*!< Rising trigger event configuration of line 2                              */
      __IOM uint32_t RTEN3      : 1;            /*!< Rising trigger event configuration of line 3                              */
      __IOM uint32_t RTEN4      : 1;            /*!< Rising trigger event configuration of line 4                              */
      __IOM uint32_t RTEN5      : 1;            /*!< Rising trigger event configuration of line 5                              */
      __IOM uint32_t RTEN6      : 1;            /*!< Rising trigger event configuration of line 6                              */
      __IOM uint32_t RTEN7      : 1;            /*!< Rising trigger event configuration of line 7                              */
      __IOM uint32_t RTEN8      : 1;            /*!< Rising trigger event configuration of line 8                              */
      __IOM uint32_t RTEN9      : 1;            /*!< Rising trigger event configuration of line 9                              */
      __IOM uint32_t RTEN10     : 1;            /*!< Rising trigger event configuration of line 10                             */
      __IOM uint32_t RTEN11     : 1;            /*!< Rising trigger event configuration of line 11                             */
      __IOM uint32_t RTEN12     : 1;            /*!< Rising trigger event configuration of line 12                             */
      __IOM uint32_t RTEN13     : 1;            /*!< Rising trigger event configuration of line 13                             */
      __IOM uint32_t RTEN14     : 1;            /*!< Rising trigger event configuration of line 14                             */
      __IOM uint32_t RTEN15     : 1;            /*!< Rising trigger event configuration of line 15                             */
      __IOM uint32_t RTEN16     : 1;            /*!< Rising trigger event configuration of line 16                             */
      __IOM uint32_t RTEN17     : 1;            /*!< Rising trigger event configuration of line 17                             */
            uint32_t            : 1;
      __IOM uint32_t RTEN19     : 1;            /*!< Rising trigger event configuration of line 19                             */
            uint32_t            : 1;
      __IOM uint32_t RTEN21     : 1;            /*!< Rising trigger event configuration of line 21                             */
            uint32_t            : 10;
    } RTEN_b;
  } ;

  union {
    __IOM uint32_t FTEN;                        /*!< Falling Egde Trigger Enable register (EXTI_FTEN)                          */

    struct {
      __IOM uint32_t FTEN0      : 1;            /*!< Falling trigger event configuration of line 0                             */
      __IOM uint32_t FTEN1      : 1;            /*!< Falling trigger event configuration of line 1                             */
      __IOM uint32_t FTEN2      : 1;            /*!< Falling trigger event configuration of line 2                             */
      __IOM uint32_t FTEN3      : 1;            /*!< Falling trigger event configuration of line 3                             */
      __IOM uint32_t FTEN4      : 1;            /*!< Falling trigger event configuration of line 4                             */
      __IOM uint32_t FTEN5      : 1;            /*!< Falling trigger event configuration of line 5                             */
      __IOM uint32_t FTEN6      : 1;            /*!< Falling trigger event configuration of line 6                             */
      __IOM uint32_t FTEN7      : 1;            /*!< Falling trigger event configuration of line 7                             */
      __IOM uint32_t FTEN8      : 1;            /*!< Falling trigger event configuration of line 8                             */
      __IOM uint32_t FTEN9      : 1;            /*!< Falling trigger event configuration of line 9                             */
      __IOM uint32_t FTEN10     : 1;            /*!< Falling trigger event configuration of line 10                            */
      __IOM uint32_t FTEN11     : 1;            /*!< Falling trigger event configuration of line 11                            */
      __IOM uint32_t FTEN12     : 1;            /*!< Falling trigger event configuration of line 12                            */
      __IOM uint32_t FTEN13     : 1;            /*!< Falling trigger event configuration of line 13                            */
      __IOM uint32_t FTEN14     : 1;            /*!< Falling trigger event configuration of line 14                            */
      __IOM uint32_t FTEN15     : 1;            /*!< Falling trigger event configuration of line 15                            */
      __IOM uint32_t FTEN16     : 1;            /*!< Falling trigger event configuration of line 16                            */
      __IOM uint32_t FTEN17     : 1;            /*!< Falling trigger event configuration of line 17                            */
            uint32_t            : 1;
      __IOM uint32_t FTEN19     : 1;            /*!< Falling trigger event configuration of line 19                            */
            uint32_t            : 1;
      __IOM uint32_t FTEN21     : 1;            /*!< Falling trigger event configuration of line 21                            */
            uint32_t            : 10;
    } FTEN_b;
  } ;

  union {
    __IOM uint32_t SWIEV;                       /*!< Software interrupt event register (EXTI_SWIEV)                            */

    struct {
      __IOM uint32_t SWIEV0     : 1;            /*!< Software Interrupt on line 0                                              */
      __IOM uint32_t SWIEV1     : 1;            /*!< Software Interrupt on line 1                                              */
      __IOM uint32_t SWIEV2     : 1;            /*!< Software Interrupt on line 2                                              */
      __IOM uint32_t SWIEV3     : 1;            /*!< Software Interrupt on line 3                                              */
      __IOM uint32_t SWIEV4     : 1;            /*!< Software Interrupt on line 4                                              */
      __IOM uint32_t SWIEV5     : 1;            /*!< Software Interrupt on line 5                                              */
      __IOM uint32_t SWIEV6     : 1;            /*!< Software Interrupt on line 6                                              */
      __IOM uint32_t SWIEV7     : 1;            /*!< Software Interrupt on line 7                                              */
      __IOM uint32_t SWIEV8     : 1;            /*!< Software Interrupt on line 8                                              */
      __IOM uint32_t SWIEV9     : 1;            /*!< Software Interrupt on line 9                                              */
      __IOM uint32_t SWIEV10    : 1;            /*!< Software Interrupt on line 10                                             */
      __IOM uint32_t SWIEV11    : 1;            /*!< Software Interrupt on line 11                                             */
      __IOM uint32_t SWIEV12    : 1;            /*!< Software Interrupt on line 12                                             */
      __IOM uint32_t SWIEV13    : 1;            /*!< Software Interrupt on line 13                                             */
      __IOM uint32_t SWIEV14    : 1;            /*!< Software Interrupt on line 14                                             */
      __IOM uint32_t SWIEV15    : 1;            /*!< Software Interrupt on line 15                                             */
      __IOM uint32_t SWIEV16    : 1;            /*!< Software Interrupt on line 16                                             */
      __IOM uint32_t SWIEV17    : 1;            /*!< Software Interrupt on line 17                                             */
            uint32_t            : 1;
      __IOM uint32_t SWIEV19    : 1;            /*!< Software Interrupt on line 19                                             */
            uint32_t            : 1;
      __IOM uint32_t SWIEV21    : 1;            /*!< Software Interrupt on line 21                                             */
            uint32_t            : 10;
    } SWIEV_b;
  } ;

  union {
    __IOM uint32_t PD;                          /*!< Pending register (EXTI_PD)                                                */

    struct {
      __IOM uint32_t PD0        : 1;            /*!< Pending bit 0                                                             */
      __IOM uint32_t PD1        : 1;            /*!< Pending bit 1                                                             */
      __IOM uint32_t PD2        : 1;            /*!< Pending bit 2                                                             */
      __IOM uint32_t PD3        : 1;            /*!< Pending bit 3                                                             */
      __IOM uint32_t PD4        : 1;            /*!< Pending bit 4                                                             */
      __IOM uint32_t PD5        : 1;            /*!< Pending bit 5                                                             */
      __IOM uint32_t PD6        : 1;            /*!< Pending bit 6                                                             */
      __IOM uint32_t PD7        : 1;            /*!< Pending bit 7                                                             */
      __IOM uint32_t PD8        : 1;            /*!< Pending bit 8                                                             */
      __IOM uint32_t PD9        : 1;            /*!< Pending bit 9                                                             */
      __IOM uint32_t PD10       : 1;            /*!< Pending bit 10                                                            */
      __IOM uint32_t PD11       : 1;            /*!< Pending bit 11                                                            */
      __IOM uint32_t PD12       : 1;            /*!< Pending bit 12                                                            */
      __IOM uint32_t PD13       : 1;            /*!< Pending bit 13                                                            */
      __IOM uint32_t PD14       : 1;            /*!< Pending bit 14                                                            */
      __IOM uint32_t PD15       : 1;            /*!< Pending bit 15                                                            */
      __IOM uint32_t PD16       : 1;            /*!< Pending bit 16                                                            */
      __IOM uint32_t PD17       : 1;            /*!< Pending bit 17                                                            */
            uint32_t            : 1;
      __IOM uint32_t PD19       : 1;            /*!< Pending bit 19                                                            */
            uint32_t            : 1;
      __IOM uint32_t PD21       : 1;            /*!< Pending bit 21                                                            */
            uint32_t            : 10;
    } PD_b;
  } ;
} EXTI_Type;                                    /*!< Size = 24 (0x18)                                                          */



/* =========================================================================================================================== */
/* ================                                            FMC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief FMC (FMC)
  */

typedef struct {                                /*!< FMC Structure                                                             */

  union {
    __IOM uint32_t WS;                          /*!< wait state register                                                       */

    struct {
      __IOM uint32_t WSCNT      : 3;            /*!< wait state counter register                                               */
            uint32_t            : 1;
      __IOM uint32_t PFEN       : 1;            /*!< Pre-fetch enable                                                          */
            uint32_t            : 10;
      __IOM uint32_t PGW        : 1;            /*!< Program width to flash memory                                             */
            uint32_t            : 16;
    } WS_b;
  } ;

  union {
    __OM  uint32_t KEY;                         /*!< Unlock key register                                                       */

    struct {
      __OM  uint32_t KEY        : 32;           /*!< FMC_CTL unlock register                                                   */
    } KEY_b;
  } ;

  union {
    __OM  uint32_t OBKEY;                       /*!< Option byte unlock key register                                           */

    struct {
      __OM  uint32_t OBKEY      : 32;           /*!< FMC_ CTL option bytes operation unlock register                           */
    } OBKEY_b;
  } ;

  union {
    __IOM uint32_t STAT;                        /*!< Status register                                                           */

    struct {
      __IM  uint32_t BUSY       : 1;            /*!< The flash is busy bit                                                     */
            uint32_t            : 1;
      __IOM uint32_t PGERR      : 1;            /*!< Program error flag bit                                                    */
      __IOM uint32_t PGAERR     : 1;            /*!< Program alignment error flag bit                                          */
      __IOM uint32_t WPERR      : 1;            /*!< Erase/Program protection error flag bit                                   */
      __IOM uint32_t ENDF       : 1;            /*!< End of operation flag bit                                                 */
            uint32_t            : 26;
    } STAT_b;
  } ;

  union {
    __IOM uint32_t CTL;                         /*!< Control register                                                          */

    struct {
      __IOM uint32_t PG         : 1;            /*!< Main flash program for bank0 command bit                                  */
      __IOM uint32_t PER        : 1;            /*!< Main flash page erase for bank0 command bit                               */
      __IOM uint32_t MER        : 1;            /*!< Main flash mass erase for bank0 command bit                               */
            uint32_t            : 1;
      __IOM uint32_t OBPG       : 1;            /*!< Option bytes program command bit                                          */
      __IOM uint32_t OBER       : 1;            /*!< Option bytes erase command bit                                            */
      __IOM uint32_t START      : 1;            /*!< Send erase command to FMC bit                                             */
      __IOM uint32_t LK         : 1;            /*!< FMC_CTL lock bit                                                          */
            uint32_t            : 1;
      __IOM uint32_t OBWEN      : 1;            /*!< Option byte erase/program enable bit                                      */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable bit                                                */
            uint32_t            : 1;
      __IOM uint32_t ENDIE      : 1;            /*!< End of operation interrupt enable bit                                     */
      __IOM uint32_t OBRLD      : 1;            /*!< Option byte reload bit                                                    */
            uint32_t            : 18;
    } CTL_b;
  } ;

  union {
    __IOM uint32_t ADDR;                        /*!< Address register                                                          */

    struct {
      __IOM uint32_t ADDR       : 32;           /*!< Flash erase/program command address bits                                  */
    } ADDR_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IM  uint32_t OBSTAT;                      /*!< Option byte control register                                              */

    struct {
      __IM  uint32_t OBERR      : 1;            /*!< Option bytes read error bit                                               */
      __IM  uint32_t PLEVEL     : 2;            /*!< Option bytes security protection level                                    */
            uint32_t            : 5;
      __IM  uint32_t USER       : 8;            /*!< Store USER of option bytes block after system reset                       */
      __IM  uint32_t DATA       : 16;           /*!< Store DATA[15:0] of option bytes block after system reset                 */
    } OBSTAT_b;
  } ;

  union {
    __IM  uint32_t WP;                          /*!< Erase/Program Protection register                                         */

    struct {
      __IM  uint32_t WP         : 16;           /*!< Store WP[15:0] of option bytes block after system reset                   */
            uint32_t            : 16;
    } WP_b;
  } ;
  __IM  uint32_t  RESERVED1[55];

  union {
    __IM  uint32_t PID;                         /*!< Product ID register                                                       */

    struct {
      __IM  uint32_t PID        : 32;           /*!< Product reserved ID code register                                         */
    } PID_b;
  } ;
} FMC_Type;                                     /*!< Size = 260 (0x104)                                                        */



/* =========================================================================================================================== */
/* ================                                           FWDGT                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief free watchdog timer (FWDGT)
  */

typedef struct {                                /*!< FWDGT Structure                                                           */

  union {
    __OM  uint32_t CTL;                         /*!< Control register                                                          */

    struct {
      __OM  uint32_t CMD        : 16;           /*!< Key value                                                                 */
            uint32_t            : 16;
    } CTL_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< Prescaler register                                                        */

    struct {
      __IOM uint32_t PSC        : 3;            /*!< Prescaler divider                                                         */
            uint32_t            : 29;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t RLD;                         /*!< Reload register                                                           */

    struct {
      __IOM uint32_t RLD        : 12;           /*!< Watchdog counter reload value                                             */
            uint32_t            : 20;
    } RLD_b;
  } ;

  union {
    __IM  uint32_t STAT;                        /*!< Status register                                                           */

    struct {
      __IM  uint32_t PUD        : 1;            /*!< Watchdog prescaler value update                                           */
      __IM  uint32_t RUD        : 1;            /*!< Watchdog counter reload value update                                      */
      __IM  uint32_t WUD        : 1;            /*!< Watchdog counter window value update                                      */
            uint32_t            : 29;
    } STAT_b;
  } ;

  union {
    __IOM uint32_t WND;                         /*!< Window register                                                           */

    struct {
      __IOM uint32_t WND        : 12;           /*!< Watchdog counter window value                                             */
            uint32_t            : 20;
    } WND_b;
  } ;
} FWDGT_Type;                                   /*!< Size = 20 (0x14)                                                          */



/* =========================================================================================================================== */
/* ================                                           GPIOA                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose I/Os (GPIOA)
  */

typedef struct {                                /*!< GPIOA Structure                                                           */

  union {
    __IOM uint32_t CTL;                         /*!< GPIO port control register                                                */

    struct {
      __IOM uint32_t CTL0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } CTL_b;
  } ;

  union {
    __IOM uint32_t OMODE;                       /*!< GPIO port output type register                                            */

    struct {
      __IOM uint32_t OM0        : 1;            /*!< Port x configuration bit 0                                                */
      __IOM uint32_t OM1        : 1;            /*!< Port x configuration bit 1                                                */
      __IOM uint32_t OM2        : 1;            /*!< Port x configuration bit 2                                                */
      __IOM uint32_t OM3        : 1;            /*!< Port x configuration bit 3                                                */
      __IOM uint32_t OM4        : 1;            /*!< Port x configuration bit 4                                                */
      __IOM uint32_t OM5        : 1;            /*!< Port x configuration bit 5                                                */
      __IOM uint32_t OM6        : 1;            /*!< Port x configuration bit 6                                                */
      __IOM uint32_t OM7        : 1;            /*!< Port x configuration bit 7                                                */
      __IOM uint32_t OM8        : 1;            /*!< Port x configuration bit 8                                                */
      __IOM uint32_t OM9        : 1;            /*!< Port x configuration bit 9                                                */
      __IOM uint32_t OM10       : 1;            /*!< Port x configuration bit 10                                               */
      __IOM uint32_t OM11       : 1;            /*!< Port x configuration bit 11                                               */
      __IOM uint32_t OM12       : 1;            /*!< Port x configuration bit 12                                               */
      __IOM uint32_t OM13       : 1;            /*!< Port x configuration bit 13                                               */
      __IOM uint32_t OM14       : 1;            /*!< Port x configuration bit 14                                               */
      __IOM uint32_t OM15       : 1;            /*!< Port x configuration bit 15                                               */
            uint32_t            : 16;
    } OMODE_b;
  } ;

  union {
    __IOM uint32_t OSPD;                        /*!< GPIO port output speed register                                           */

    struct {
      __IOM uint32_t OSPD0      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD1      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD2      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD3      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD4      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD5      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD6      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD7      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD8      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD9      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD10     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD11     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD12     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD13     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD14     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD15     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } OSPD_b;
  } ;

  union {
    __IOM uint32_t PUD;                         /*!< GPIO port pull-up/pull-down register                                      */

    struct {
      __IOM uint32_t PUD0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } PUD_b;
  } ;

  union {
    __IM  uint32_t ISTAT;                       /*!< GPIO port input data register                                             */

    struct {
      __IM  uint32_t ISTAT0     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT1     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT2     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT3     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT4     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT5     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT6     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT7     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT8     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT9     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT10    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT11    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT12    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT13    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT14    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT15    : 1;            /*!< Port input data (y = 0..15)                                               */
            uint32_t            : 16;
    } ISTAT_b;
  } ;

  union {
    __IOM uint32_t OCTL;                        /*!< GPIO port output data register                                            */

    struct {
      __IOM uint32_t OCTL0      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL1      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL2      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL3      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL4      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL5      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL6      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL7      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL8      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL9      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL10     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL11     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL12     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL13     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL14     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL15     : 1;            /*!< Port output data (y = 0..15)                                              */
            uint32_t            : 16;
    } OCTL_b;
  } ;

  union {
    __OM  uint32_t BOP;                         /*!< GPIO port bit set/reset register                                          */

    struct {
      __OM  uint32_t BOP0       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP1       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP2       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP3       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP4       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP5       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP6       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP7       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP8       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP9       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP10      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP11      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP12      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP13      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP14      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP15      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t CR0        : 1;            /*!< Port x reset bit y (y= 0..15)                                             */
      __OM  uint32_t CR1        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
    } BOP_b;
  } ;

  union {
    __IOM uint32_t LOCK;                        /*!< GPIO port configuration lock register                                     */

    struct {
      __IOM uint32_t LK0        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK1        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK2        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK3        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK4        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK5        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK6        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK7        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK8        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK9        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK10       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK11       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK12       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK13       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK14       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK15       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LKK        : 1;            /*!< Port x lock bit y                                                         */
            uint32_t            : 15;
    } LOCK_b;
  } ;

  union {
    __IOM uint32_t AFSEL0;                      /*!< GPIO alternate function low register                                      */

    struct {
      __IOM uint32_t SEL0       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL1       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL2       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL3       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL4       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL5       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL6       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL7       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
    } AFSEL0_b;
  } ;

  union {
    __IOM uint32_t AFSEL1;                      /*!< GPIO alternate function register 1                                        */

    struct {
      __IOM uint32_t SEL8       : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL9       : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL10      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL11      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL12      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL13      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL14      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL15      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
    } AFSEL1_b;
  } ;

  union {
    __OM  uint32_t BC;                          /*!< Port bit reset register                                                   */

    struct {
      __OM  uint32_t CR0        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR1        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port cleat bit                                                            */
            uint32_t            : 16;
    } BC_b;
  } ;

  union {
    __OM  uint32_t TG;                          /*!< Port bit toggle register                                                  */

    struct {
      __OM  uint32_t TG0        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG1        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG2        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG3        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG4        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG5        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG6        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG7        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG8        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG9        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG10       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG11       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG12       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG13       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG14       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG15       : 1;            /*!< Port toggle bit                                                           */
            uint32_t            : 16;
    } TG_b;
  } ;
} GPIO_Type;                                   /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           GPIOB                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose I/Os (GPIOB)
  */

typedef struct {                                /*!< GPIOB Structure                                                           */

  union {
    __IOM uint32_t CTL;                         /*!< GPIO port control register                                                */

    struct {
      __IOM uint32_t CTL0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } CTL_b;
  } ;

  union {
    __IOM uint32_t OMODE;                       /*!< GPIO port output type register                                            */

    struct {
      __IOM uint32_t OM0        : 1;            /*!< Port x configuration bit 0                                                */
      __IOM uint32_t OM1        : 1;            /*!< Port x configuration bit 1                                                */
      __IOM uint32_t OM2        : 1;            /*!< Port x configuration bit 2                                                */
      __IOM uint32_t OM3        : 1;            /*!< Port x configuration bit 3                                                */
      __IOM uint32_t OM4        : 1;            /*!< Port x configuration bit 4                                                */
      __IOM uint32_t OM5        : 1;            /*!< Port x configuration bit 5                                                */
      __IOM uint32_t OM6        : 1;            /*!< Port x configuration bit 6                                                */
      __IOM uint32_t OM7        : 1;            /*!< Port x configuration bit 7                                                */
      __IOM uint32_t OM8        : 1;            /*!< Port x configuration bit 8                                                */
      __IOM uint32_t OM9        : 1;            /*!< Port x configuration bit 9                                                */
      __IOM uint32_t OM10       : 1;            /*!< Port x configuration bit 10                                               */
      __IOM uint32_t OM11       : 1;            /*!< Port x configuration bit 11                                               */
      __IOM uint32_t OM12       : 1;            /*!< Port x configuration bit 12                                               */
      __IOM uint32_t OM13       : 1;            /*!< Port x configuration bit 13                                               */
      __IOM uint32_t OM14       : 1;            /*!< Port x configuration bit 14                                               */
      __IOM uint32_t OM15       : 1;            /*!< Port x configuration bit 15                                               */
            uint32_t            : 16;
    } OMODE_b;
  } ;

  union {
    __IOM uint32_t OSPD;                        /*!< GPIO port output speed register                                           */

    struct {
      __IOM uint32_t OSPD0      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD1      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD2      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD3      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD4      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD5      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD6      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD7      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD8      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD9      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD10     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD11     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD12     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD13     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD14     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD15     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } OSPD_b;
  } ;

  union {
    __IOM uint32_t PUD;                         /*!< GPIO port pull-up/pull-down register                                      */

    struct {
      __IOM uint32_t PUD0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } PUD_b;
  } ;

  union {
    __IM  uint32_t ISTAT;                       /*!< GPIO port input data register                                             */

    struct {
      __IM  uint32_t ISTAT0     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT1     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT2     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT3     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT4     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT5     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT6     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT7     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT8     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT9     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT10    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT11    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT12    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT13    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT14    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT15    : 1;            /*!< Port input data (y = 0..15)                                               */
            uint32_t            : 16;
    } ISTAT_b;
  } ;

  union {
    __IOM uint32_t OCTL;                        /*!< GPIO port output data register                                            */

    struct {
      __IOM uint32_t OCTL0      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL1      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL2      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL3      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL4      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL5      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL6      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL7      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL8      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL9      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL10     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL11     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL12     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL13     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL14     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL15     : 1;            /*!< Port output data (y = 0..15)                                              */
            uint32_t            : 16;
    } OCTL_b;
  } ;

  union {
    __OM  uint32_t BOP;                         /*!< GPIO port bit set/reset register                                          */

    struct {
      __OM  uint32_t BOP0       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP1       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP2       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP3       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP4       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP5       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP6       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP7       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP8       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP9       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP10      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP11      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP12      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP13      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP14      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP15      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t CR0        : 1;            /*!< Port x reset bit y (y= 0..15)                                             */
      __OM  uint32_t CR1        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
    } BOP_b;
  } ;

  union {
    __IOM uint32_t LOCK;                        /*!< GPIO port configuration lock register                                     */

    struct {
      __IOM uint32_t LK0        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK1        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK2        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK3        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK4        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK5        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK6        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK7        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK8        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK9        : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK10       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK11       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK12       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK13       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK14       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LK15       : 1;            /*!< Port x lock bit y (y= 0..15)                                              */
      __IOM uint32_t LKK        : 1;            /*!< Port x lock bit y                                                         */
            uint32_t            : 15;
    } LOCK_b;
  } ;

  union {
    __IOM uint32_t AFSEL0;                      /*!< GPIO alternate function low register                                      */

    struct {
      __IOM uint32_t SEL0       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL1       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL2       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL3       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL4       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL5       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL6       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL7       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
    } AFSEL0_b;
  } ;

  union {
    __IOM uint32_t AFSEL1;                      /*!< GPIO alternate function register 1                                        */

    struct {
      __IOM uint32_t SEL8       : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL9       : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL10      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL11      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL12      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL13      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL14      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL15      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
    } AFSEL1_b;
  } ;

  union {
    __OM  uint32_t BC;                          /*!< Port bit reset register                                                   */

    struct {
      __OM  uint32_t CR0        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR1        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port cleat bit                                                            */
            uint32_t            : 16;
    } BC_b;
  } ;

  union {
    __OM  uint32_t TG;                          /*!< Port bit toggle register                                                  */

    struct {
      __OM  uint32_t TG0        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG1        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG2        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG3        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG4        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG5        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG6        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG7        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG8        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG9        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG10       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG11       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG12       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG13       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG14       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG15       : 1;            /*!< Port toggle bit                                                           */
            uint32_t            : 16;
    } TG_b;
  } ;
} GPIOB_Type;                                   /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           GPIOC                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose I/Os (GPIOC)
  */

typedef struct {                                /*!< GPIOC Structure                                                           */

  union {
    __IOM uint32_t CTL;                         /*!< GPIO port control register                                                */

    struct {
      __IOM uint32_t CTL0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } CTL_b;
  } ;

  union {
    __IOM uint32_t OMODE;                       /*!< GPIO port output type register                                            */

    struct {
      __IOM uint32_t OM0        : 1;            /*!< Port x configuration bit 0                                                */
      __IOM uint32_t OM1        : 1;            /*!< Port x configuration bit 1                                                */
      __IOM uint32_t OM2        : 1;            /*!< Port x configuration bit 2                                                */
      __IOM uint32_t OM3        : 1;            /*!< Port x configuration bit 3                                                */
      __IOM uint32_t OM4        : 1;            /*!< Port x configuration bit 4                                                */
      __IOM uint32_t OM5        : 1;            /*!< Port x configuration bit 5                                                */
      __IOM uint32_t OM6        : 1;            /*!< Port x configuration bit 6                                                */
      __IOM uint32_t OM7        : 1;            /*!< Port x configuration bit 7                                                */
      __IOM uint32_t OM8        : 1;            /*!< Port x configuration bit 8                                                */
      __IOM uint32_t OM9        : 1;            /*!< Port x configuration bit 9                                                */
      __IOM uint32_t OM10       : 1;            /*!< Port x configuration bit 10                                               */
      __IOM uint32_t OM11       : 1;            /*!< Port x configuration bit 11                                               */
      __IOM uint32_t OM12       : 1;            /*!< Port x configuration bit 12                                               */
      __IOM uint32_t OM13       : 1;            /*!< Port x configuration bit 13                                               */
      __IOM uint32_t OM14       : 1;            /*!< Port x configuration bit 14                                               */
      __IOM uint32_t OM15       : 1;            /*!< Port x configuration bit 15                                               */
            uint32_t            : 16;
    } OMODE_b;
  } ;

  union {
    __IOM uint32_t OSPD;                        /*!< GPIO port output speed register                                           */

    struct {
      __IOM uint32_t OSPD0      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD1      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD2      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD3      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD4      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD5      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD6      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD7      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD8      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD9      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD10     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD11     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD12     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD13     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD14     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD15     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } OSPD_b;
  } ;

  union {
    __IOM uint32_t PUD;                         /*!< GPIO port pull-up/pull-down register                                      */

    struct {
      __IOM uint32_t PUD0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } PUD_b;
  } ;

  union {
    __IM  uint32_t ISTAT;                       /*!< GPIO port input data register                                             */

    struct {
      __IM  uint32_t ISTAT0     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT1     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT2     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT3     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT4     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT5     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT6     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT7     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT8     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT9     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT10    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT11    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT12    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT13    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT14    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT15    : 1;            /*!< Port input data (y = 0..15)                                               */
            uint32_t            : 16;
    } ISTAT_b;
  } ;

  union {
    __IOM uint32_t OCTL;                        /*!< GPIO port output data register                                            */

    struct {
      __IOM uint32_t OCTL0      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL1      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL2      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL3      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL4      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL5      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL6      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL7      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL8      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL9      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL10     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL11     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL12     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL13     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL14     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL15     : 1;            /*!< Port output data (y = 0..15)                                              */
            uint32_t            : 16;
    } OCTL_b;
  } ;

  union {
    __OM  uint32_t BOP;                         /*!< GPIO port bit set/reset register                                          */

    struct {
      __OM  uint32_t BOP0       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP1       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP2       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP3       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP4       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP5       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP6       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP7       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP8       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP9       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP10      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP11      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP12      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP13      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP14      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP15      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t CR0        : 1;            /*!< Port x reset bit y (y= 0..15)                                             */
      __OM  uint32_t CR1        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
    } BOP_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t AFSEL0;                      /*!< GPIO alternate function low register                                      */

    struct {
      __IOM uint32_t SEL0       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL1       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL2       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL3       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL4       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL5       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL6       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
      __IOM uint32_t SEL7       : 4;            /*!< Alternate function selection for port x bit y (y = 0..7)                  */
    } AFSEL0_b;
  } ;

  union {
    __IOM uint32_t AFSEL1;                      /*!< GPIO alternate function register 1                                        */

    struct {
      __IOM uint32_t SEL8       : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL9       : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL10      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL11      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL12      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL13      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL14      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
      __IOM uint32_t SEL15      : 4;            /*!< Alternate function selection for port x bit y (y = 8..15)                 */
    } AFSEL1_b;
  } ;

  union {
    __OM  uint32_t BC;                          /*!< Port bit reset register                                                   */

    struct {
      __OM  uint32_t CR0        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR1        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port cleat bit                                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port cleat bit                                                            */
            uint32_t            : 16;
    } BC_b;
  } ;

  union {
    __OM  uint32_t TG;                          /*!< Port bit toggle register                                                  */

    struct {
      __OM  uint32_t TG0        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG1        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG2        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG3        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG4        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG5        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG6        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG7        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG8        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG9        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG10       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG11       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG12       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG13       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG14       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG15       : 1;            /*!< Port toggle bit                                                           */
            uint32_t            : 16;
    } TG_b;
  } ;
} GPIOC_Type;                                   /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           GPIOF                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose I/Os (GPIOF)
  */

typedef struct {                                /*!< GPIOF Structure                                                           */

  union {
    __IOM uint32_t CTL;                         /*!< GPIOF port control register                                               */

    struct {
      __IOM uint32_t CTL0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t CTL15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } CTL_b;
  } ;

  union {
    __IOM uint32_t OMODE;                       /*!< GPIO port output type register                                            */

    struct {
      __IOM uint32_t OM0        : 1;            /*!< Port x configuration bit 0                                                */
      __IOM uint32_t OM1        : 1;            /*!< Port x configuration bit 1                                                */
      __IOM uint32_t OM2        : 1;            /*!< Port x configuration bit 2                                                */
      __IOM uint32_t OM3        : 1;            /*!< Port x configuration bit 3                                                */
      __IOM uint32_t OM4        : 1;            /*!< Port x configuration bit 4                                                */
      __IOM uint32_t OM5        : 1;            /*!< Port x configuration bit 5                                                */
      __IOM uint32_t OM6        : 1;            /*!< Port x configuration bit 6                                                */
      __IOM uint32_t OM7        : 1;            /*!< Port x configuration bit 7                                                */
      __IOM uint32_t OM8        : 1;            /*!< Port x configuration bit 8                                                */
      __IOM uint32_t OM9        : 1;            /*!< Port x configuration bit 9                                                */
      __IOM uint32_t OM10       : 1;            /*!< Port x configuration bit 10                                               */
      __IOM uint32_t OM11       : 1;            /*!< Port x configuration bit 11                                               */
      __IOM uint32_t OM12       : 1;            /*!< Port x configuration bit 12                                               */
      __IOM uint32_t OM13       : 1;            /*!< Port x configuration bit 13                                               */
      __IOM uint32_t OM14       : 1;            /*!< Port x configuration bit 14                                               */
      __IOM uint32_t OM15       : 1;            /*!< Port x configuration bit 15                                               */
            uint32_t            : 16;
    } OMODE_b;
  } ;

  union {
    __IOM uint32_t OSPD;                        /*!< GPIO port output speed register                                           */

    struct {
      __IOM uint32_t OSPD0      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD1      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD2      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD3      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD4      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD5      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD6      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD7      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD8      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD9      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD10     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD11     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD12     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD13     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD14     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t OSPD15     : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } OSPD_b;
  } ;

  union {
    __IOM uint32_t PUD;                         /*!< GPIO port pull-up/pull-down register                                      */

    struct {
      __IOM uint32_t PUD0       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD1       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD2       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD3       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD4       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD5       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD6       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD7       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD8       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD9       : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD10      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD11      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD12      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD13      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD14      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
      __IOM uint32_t PUD15      : 2;            /*!< Port x configuration bits (y = 0..15)                                     */
    } PUD_b;
  } ;

  union {
    __IM  uint32_t ISTAT;                       /*!< GPIO port input data register                                             */

    struct {
      __IM  uint32_t ISTAT0     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT1     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT2     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT3     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT4     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT5     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT6     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT7     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT8     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT9     : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT10    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT11    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT12    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT13    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT14    : 1;            /*!< Port input data (y = 0..15)                                               */
      __IM  uint32_t ISTAT15    : 1;            /*!< Port input data (y = 0..15)                                               */
            uint32_t            : 16;
    } ISTAT_b;
  } ;

  union {
    __IOM uint32_t OCTL;                        /*!< GPIO port output data register                                            */

    struct {
      __IOM uint32_t OCTL0      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL1      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL2      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL3      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL4      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL5      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL6      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL7      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL8      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL9      : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL10     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL11     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL12     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL13     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL14     : 1;            /*!< Port output data (y = 0..15)                                              */
      __IOM uint32_t OCTL15     : 1;            /*!< Port output data (y = 0..15)                                              */
            uint32_t            : 16;
    } OCTL_b;
  } ;

  union {
    __OM  uint32_t BOP;                         /*!< GPIO port bit set/reset register                                          */

    struct {
      __OM  uint32_t BOP0       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP1       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP2       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP3       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP4       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP5       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP6       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP7       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP8       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP9       : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP10      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP11      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP12      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP13      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP14      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t BOP15      : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t CR0        : 1;            /*!< Port x set bit y (y= 0..15)                                               */
      __OM  uint32_t CR1        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR2        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR3        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR4        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR5        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR6        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR7        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR8        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR9        : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR10       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR11       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR12       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR13       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR14       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
      __OM  uint32_t CR15       : 1;            /*!< Port x reset bit y (y = 0..15)                                            */
    } BOP_b;
  } ;
  __IM  uint32_t  RESERVED[3];

  union {
    __OM  uint32_t BC;                          /*!< Port bit reset register                                                   */

    struct {
      __OM  uint32_t CR0        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR1        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR2        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR3        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR4        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR5        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR6        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR7        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR8        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR9        : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR10       : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR11       : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR12       : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR13       : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR14       : 1;            /*!< Port x Reset bit y                                                        */
      __OM  uint32_t CR15       : 1;            /*!< Port x Reset bit y                                                        */
            uint32_t            : 16;
    } BC_b;
  } ;

  union {
    __OM  uint32_t TG;                          /*!< Port bit toggle register                                                  */

    struct {
      __OM  uint32_t TG0        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG1        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG2        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG3        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG4        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG5        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG6        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG7        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG8        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG9        : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG10       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG11       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG12       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG13       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG14       : 1;            /*!< Port toggle bit                                                           */
      __OM  uint32_t TG15       : 1;            /*!< Port toggle bit                                                           */
            uint32_t            : 16;
    } TG_b;
  } ;
} GPIOF_Type;                                   /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                           I2C0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Inter integrated circuit (I2C0)
  */

typedef struct {                                /*!< I2C0 Structure                                                            */

  union {
    __IOM uint32_t CTL0;                        /*!< Control register 0                                                        */

    struct {
      __IOM uint32_t I2CEN      : 1;            /*!< Peripheral enable                                                         */
      __IOM uint32_t SMBEN      : 1;            /*!< SMBus mode                                                                */
            uint32_t            : 1;
      __IOM uint32_t SMBSEL     : 1;            /*!< SMBus type                                                                */
      __IOM uint32_t ARPEN      : 1;            /*!< ARP enable                                                                */
      __IOM uint32_t PECEN      : 1;            /*!< PEC enable                                                                */
      __IOM uint32_t GCEN       : 1;            /*!< General call enable                                                       */
      __IOM uint32_t SS         : 1;            /*!< SCL Stretching(Slave mode)                                                */
      __IOM uint32_t START      : 1;            /*!< Start generation                                                          */
      __IOM uint32_t STOP       : 1;            /*!< Stop condition                                                            */
      __IOM uint32_t ACKEN      : 1;            /*!< Acknowledge enable                                                        */
      __IOM uint32_t POAP       : 1;            /*!< Acknowledge/PEC Position (for data reception)                             */
      __IOM uint32_t PECTRANS   : 1;            /*!< Packet error checking                                                     */
      __IOM uint32_t SALT       : 1;            /*!< SMBus alert                                                               */
            uint32_t            : 1;
      __IOM uint32_t SRESET     : 1;            /*!< Software reset                                                            */
            uint32_t            : 16;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< Control register 1                                                        */

    struct {
      __IOM uint32_t I2CCLK     : 7;            /*!< Peripheral clock frequency                                                */
            uint32_t            : 1;
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t EVIE       : 1;            /*!< Event interrupt enable                                                    */
      __IOM uint32_t BUFIE      : 1;            /*!< Buffer interrupt enable                                                   */
      __IOM uint32_t DMAON      : 1;            /*!< DMA mode switch                                                           */
      __IOM uint32_t DMALST     : 1;            /*!< Flag indicating DMA last transfer                                         */
            uint32_t            : 19;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t SADDR0;                      /*!< Own address register 0                                                    */

    struct {
      __IOM uint32_t ADDRESS    : 10;           /*!< Interface address                                                         */
            uint32_t            : 5;
      __IOM uint32_t ADDFORMAT  : 1;            /*!< Addressing mode (slave mode)                                              */
            uint32_t            : 16;
    } SADDR0_b;
  } ;

  union {
    __IOM uint32_t SADDR1;                      /*!< Own address register 1                                                    */

    struct {
      __IOM uint32_t DUADEN     : 1;            /*!< Dual addressing mode enable                                               */
      __IOM uint32_t ADDRESS2   : 7;            /*!< Interface address                                                         */
            uint32_t            : 24;
    } SADDR1_b;
  } ;

  union {
    __IOM uint32_t DATA;                        /*!< Data register                                                             */

    struct {
      __IOM uint32_t TRB        : 8;            /*!< Transmission or reception data buffer                                     */
            uint32_t            : 24;
    } DATA_b;
  } ;

  union {
    __IOM uint32_t STAT0;                       /*!< Transfer status register 0                                                */

    struct {
      __IM  uint32_t SBSEND     : 1;            /*!< Start bit (Master mode)                                                   */
      __IM  uint32_t ADDSEND    : 1;            /*!< Address sent (master mode)/matched (slave mode)                           */
      __IM  uint32_t BTC        : 1;            /*!< Byte transmission completed                                               */
      __IM  uint32_t ADD10SEND  : 1;            /*!< Header of 10-bit address is sent in master mode                           */
      __IM  uint32_t STPDET     : 1;            /*!< Stop detection (slave mode)                                               */
            uint32_t            : 1;
      __IM  uint32_t RBNE       : 1;            /*!< I2C_DATA is not Empty during receiving                                    */
      __IM  uint32_t TBE        : 1;            /*!< I2C_DATA is Empty during transmitting                                     */
      __IOM uint32_t BERR       : 1;            /*!< Bus error                                                                 */
      __IOM uint32_t LOSTARB    : 1;            /*!< Arbitration lost (master mode)                                            */
      __IOM uint32_t AERR       : 1;            /*!< Acknowledge error                                                         */
      __IOM uint32_t OUERR      : 1;            /*!< Overrun/Underrun occurs in slave mode                                     */
      __IOM uint32_t PECERR     : 1;            /*!< PEC error when receiving data                                             */
            uint32_t            : 1;
      __IOM uint32_t SMBTO      : 1;            /*!< Timeout signal in SMBus mode                                              */
      __IOM uint32_t SMBALT     : 1;            /*!< SMBus alert                                                               */
            uint32_t            : 16;
    } STAT0_b;
  } ;

  union {
    __IM  uint32_t STAT1;                       /*!< Transfer status register 1                                                */

    struct {
      __IM  uint32_t MASTER     : 1;            /*!< Master/slave                                                              */
      __IM  uint32_t I2CBSY     : 1;            /*!< Bus busy                                                                  */
      __IM  uint32_t TR         : 1;            /*!< Transmitter/receiver                                                      */
            uint32_t            : 1;
      __IM  uint32_t RXGC       : 1;            /*!< General call address (Slave mode)                                         */
      __IM  uint32_t DEFSMB     : 1;            /*!< SMBus device default address (Slave mode)                                 */
      __IM  uint32_t HSTSMB     : 1;            /*!< SMBus host header (Slave mode)                                            */
      __IM  uint32_t DUMODF     : 1;            /*!< Dual flag (Slave mode)                                                    */
      __IM  uint32_t PECV       : 8;            /*!< Packet error checking register                                            */
            uint32_t            : 16;
    } STAT1_b;
  } ;

  union {
    __IOM uint32_t CKCFG;                       /*!< Clock configure register                                                  */

    struct {
      __IOM uint32_t CLKC       : 12;           /*!< Clock control register in Fast/Standard mode (Master mode)                */
            uint32_t            : 2;
      __IOM uint32_t DTCY       : 1;            /*!< Fast mode duty cycle                                                      */
      __IOM uint32_t FAST       : 1;            /*!< I2C master mode selection                                                 */
            uint32_t            : 16;
    } CKCFG_b;
  } ;

  union {
    __IOM uint32_t RT;                          /*!< Rise time register                                                        */

    struct {
      __IOM uint32_t RISETIME   : 7;            /*!< Maximum rise time in master mode                                          */
            uint32_t            : 25;
    } RT_b;
  } ;
  __IM  uint32_t  RESERVED[23];

  union {
    __IOM uint32_t SAMCS;                       /*!< SAM control and status register                                           */

    struct {
      __IOM uint32_t SAMEN      : 1;            /*!< SAM_V interface enable                                                    */
      __IOM uint32_t STOEN      : 1;            /*!< SAM_V interface timeout detect enable                                     */
            uint32_t            : 2;
      __IOM uint32_t TFFIE      : 1;            /*!< Tx frame fall interrupt enable                                            */
      __IOM uint32_t TFRIE      : 1;            /*!< Tx frame rise interrupt enable                                            */
      __IOM uint32_t RFFIE      : 1;            /*!< Rx frame fall interrupt enable                                            */
      __IOM uint32_t RFRIE      : 1;            /*!< Rx frame rise interrupt enable                                            */
      __IOM uint32_t TXF        : 1;            /*!< level of tx frame signal                                                  */
      __IOM uint32_t RXF        : 1;            /*!< level of rx frame signal                                                  */
            uint32_t            : 2;
      __IOM uint32_t TFF        : 1;            /*!< Txframe fall flag                                                         */
      __IOM uint32_t TFR        : 1;            /*!< Txframe rise flag                                                         */
      __IOM uint32_t RFF        : 1;            /*!< Rxframe fall flag                                                         */
      __IOM uint32_t RFR        : 1;            /*!< Rxframe rise flag                                                         */
            uint32_t            : 16;
    } SAMCS_b;
  } ;
  __IM  uint32_t  RESERVED1[3];

  union {
    __IOM uint32_t FMPCFG;                      /*!< Fast-mode-plus configure register                                         */

    struct {
      __IOM uint32_t FMPEN      : 1;            /*!< Fast-mode-plus enable                                                     */
            uint32_t            : 31;
    } FMPCFG_b;
  } ;
} I2C_Type;                                    /*!< Size = 148 (0x94)                                                         */



/* =========================================================================================================================== */
/* ================                                           NVIC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Nested Vectored Interrupt
      Controller (NVIC)
  */

// typedef struct {                                /*!< NVIC Structure                                                            */

//   union {
//     __IOM uint32_t ISER0;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER0_b;
//   } ;

//   union {
//     __IOM uint32_t ISER1;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER1_b;
//   } ;

//   union {
//     __IOM uint32_t ISER2;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER2_b;
//   } ;

//   union {
//     __IOM uint32_t ISER3;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER3_b;
//   } ;

//   union {
//     __IOM uint32_t ISER4;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER4_b;
//   } ;

//   union {
//     __IOM uint32_t ISER5;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER5_b;
//   } ;

//   union {
//     __IOM uint32_t ISER6;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER6_b;
//   } ;

//   union {
//     __IOM uint32_t ISER7;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER7_b;
//   } ;

//   union {
//     __IOM uint32_t ISER8;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER8_b;
//   } ;

//   union {
//     __IOM uint32_t ISER9;                       /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER9_b;
//   } ;

//   union {
//     __IOM uint32_t ISER10;                      /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER10_b;
//   } ;

//   union {
//     __IOM uint32_t ISER11;                      /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER11_b;
//   } ;

//   union {
//     __IOM uint32_t ISER12;                      /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER12_b;
//   } ;

//   union {
//     __IOM uint32_t ISER13;                      /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER13_b;
//   } ;

//   union {
//     __IOM uint32_t ISER14;                      /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER14_b;
//   } ;

//   union {
//     __IOM uint32_t ISER15;                      /*!< Interrupt Set Enable Register                                             */

//     struct {
//       __IOM uint32_t SETENA     : 32;           /*!< SETENA                                                                    */
//     } ISER15_b;
//   } ;
//   __IM  uint32_t  RESERVED[16];

//   union {
//     __IOM uint32_t ICER0;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER0_b;
//   } ;

//   union {
//     __IOM uint32_t ICER1;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER1_b;
//   } ;
//   __IM  uint32_t  RESERVED1;

//   union {
//     __IOM uint32_t ICER2;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER2_b;
//   } ;

//   union {
//     __IOM uint32_t ICER3;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER3_b;
//   } ;

//   union {
//     __IOM uint32_t ICER4;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER4_b;
//   } ;

//   union {
//     __IOM uint32_t ICER5;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER5_b;
//   } ;

//   union {
//     __IOM uint32_t ICER6;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER6_b;
//   } ;

//   union {
//     __IOM uint32_t ICER7;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER7_b;
//   } ;

//   union {
//     __IOM uint32_t ICER8;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER8_b;
//   } ;

//   union {
//     __IOM uint32_t ICER9;                       /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER9_b;
//   } ;

//   union {
//     __IOM uint32_t ICER10;                      /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER10_b;
//   } ;

//   union {
//     __IOM uint32_t ICER11;                      /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER11_b;
//   } ;

//   union {
//     __IOM uint32_t ICER12;                      /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER12_b;
//   } ;

//   union {
//     __IOM uint32_t ICER13;                      /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER13_b;
//   } ;

//   union {
//     __IOM uint32_t ICER14;                      /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER14_b;
//   } ;

//   union {
//     __IOM uint32_t ICER15;                      /*!< Interrupt Clear Enable Register                                           */

//     struct {
//       __IOM uint32_t CLRENA     : 32;           /*!< CLRENA                                                                    */
//     } ICER15_b;
//   } ;
//   __IM  uint32_t  RESERVED2[15];

//   union {
//     __IOM uint32_t ISPR0;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR0_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR1;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR1_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR2;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR2_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR3;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR3_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR4;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR4_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR5;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR5_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR6;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR6_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR7;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR7_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR8;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR8_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR9;                       /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR9_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR10;                      /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR10_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR11;                      /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR11_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR12;                      /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR12_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR13;                      /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR13_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR14;                      /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR14_b;
//   } ;

//   union {
//     __IOM uint32_t ISPR15;                      /*!< Interrupt Set-Pending Register                                            */

//     struct {
//       __IOM uint32_t SETPEND    : 32;           /*!< SETPEND                                                                   */
//     } ISPR15_b;
//   } ;
//   __IM  uint32_t  RESERVED3[16];

//   union {
//     __IOM uint32_t ICPR0;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR0_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR1;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR1_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR2;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR2_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR3;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR3_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR4;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR4_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR5;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR5_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR6;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR6_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR7;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR7_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR8;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR8_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR9;                       /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR9_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR10;                      /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR10_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR11;                      /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR11_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR12;                      /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR12_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR13;                      /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR13_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR14;                      /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR14_b;
//   } ;

//   union {
//     __IOM uint32_t ICPR15;                      /*!< Interrupt Clear-Pending Register                                          */

//     struct {
//       __IOM uint32_t CLRPEND    : 32;           /*!< CLRPEND                                                                   */
//     } ICPR15_b;
//   } ;
//   __IM  uint32_t  RESERVED4[16];

//   union {
//     __IOM uint32_t IABR0;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR0_b;
//   } ;

//   union {
//     __IOM uint32_t IABR1;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR1_b;
//   } ;

//   union {
//     __IOM uint32_t IABR2;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR2_b;
//   } ;

//   union {
//     __IOM uint32_t IABR3;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR3_b;
//   } ;

//   union {
//     __IOM uint32_t IABR4;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR4_b;
//   } ;

//   union {
//     __IOM uint32_t IABR5;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR5_b;
//   } ;

//   union {
//     __IOM uint32_t IABR6;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR6_b;
//   } ;

//   union {
//     __IOM uint32_t IABR7;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR7_b;
//   } ;

//   union {
//     __IOM uint32_t IABR8;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR8_b;
//   } ;

//   union {
//     __IOM uint32_t IABR9;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR9_b;
//   } ;

//   union {
//     __IOM uint32_t IABR10;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR10_b;
//   } ;

//   union {
//     __IOM uint32_t IABR11;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR11_b;
//   } ;

//   union {
//     __IOM uint32_t IABR12;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR12_b;
//   } ;

//   union {
//     __IOM uint32_t IABR13;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR13_b;
//   } ;

//   union {
//     __IOM uint32_t IABR14;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR14_b;
//   } ;

//   union {
//     __IOM uint32_t IABR15;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t IABR       : 32;           /*!< IABR                                                                      */
//     } IABR15_b;
//   } ;
//   __IM  uint32_t  RESERVED5[16];

//   union {
//     __IOM uint32_t ITNS0;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS0_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS1;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS1_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS2;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS2_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS3;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS3_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS4;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS4_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS5;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS5_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS6;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS6_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS7;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS7_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS8;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS8_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS9;                       /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS9_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS10;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS10_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS11;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS11_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS12;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS12_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS13;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS13_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS14;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS14_b;
//   } ;

//   union {
//     __IOM uint32_t ITNS15;                      /*!< Interrupt Active bit Register                                             */

//     struct {
//       __IOM uint32_t ITNS       : 32;           /*!< ITNS                                                                      */
//     } ITNS15_b;
//   } ;
//   __IM  uint32_t  RESERVED6[16];

//   union {
//     __IOM uint8_t IPR0;                         /*!< Interrupt Priority Register 0                                             */

//     struct {
//       __IOM uint8_t PRI_00      : 8;            /*!< PRI_00                                                                    */
//     } IPR0_b;
//   } ;

//   union {
//     __IOM uint8_t IPR1;                         /*!< Interrupt Priority Register 1                                             */

//     struct {
//       __IOM uint8_t PRI_01      : 8;            /*!< PRI_01                                                                    */
//     } IPR1_b;
//   } ;

//   union {
//     __IOM uint8_t IPR2;                         /*!< Interrupt Priority Register 2                                             */

//     struct {
//       __IOM uint8_t PRI_02      : 8;            /*!< PRI_02                                                                    */
//     } IPR2_b;
//   } ;

//   union {
//     __IOM uint8_t IPR3;                         /*!< Interrupt Priority Register 3                                             */

//     struct {
//       __IOM uint8_t PRI_03      : 8;            /*!< PRI_03                                                                    */
//     } IPR3_b;
//   } ;

//   union {
//     __IOM uint8_t IPR4;                         /*!< Interrupt Priority Register 4                                             */

//     struct {
//       __IOM uint8_t PRI_04      : 8;            /*!< PRI_04                                                                    */
//     } IPR4_b;
//   } ;

//   union {
//     __IOM uint8_t IPR5;                         /*!< Interrupt Priority Register 5                                             */

//     struct {
//       __IOM uint8_t PRI_05      : 8;            /*!< PRI_05                                                                    */
//     } IPR5_b;
//   } ;

//   union {
//     __IOM uint8_t IPR6;                         /*!< Interrupt Priority Register 6                                             */

//     struct {
//       __IOM uint8_t PRI_06      : 8;            /*!< PRI_06                                                                    */
//     } IPR6_b;
//   } ;

//   union {
//     __IOM uint8_t IPR7;                         /*!< Interrupt Priority Register 7                                             */

//     struct {
//       __IOM uint8_t PRI_07      : 8;            /*!< PRI_07                                                                    */
//     } IPR7_b;
//   } ;

//   union {
//     __IOM uint8_t IPR8;                         /*!< Interrupt Priority Register 8                                             */

//     struct {
//       __IOM uint8_t PRI_08      : 8;            /*!< PRI_08                                                                    */
//     } IPR8_b;
//   } ;

//   union {
//     __IOM uint8_t IPR9;                         /*!< Interrupt Priority Register 9                                             */

//     struct {
//       __IOM uint8_t PRI_09      : 8;            /*!< PRI_09                                                                    */
//     } IPR9_b;
//   } ;

//   union {
//     __IOM uint8_t IPR10;                        /*!< Interrupt Priority Register 10                                            */

//     struct {
//       __IOM uint8_t PRI_10      : 8;            /*!< PRI_10                                                                    */
//     } IPR10_b;
//   } ;

//   union {
//     __IOM uint8_t IPR11;                        /*!< Interrupt Priority Register 11                                            */

//     struct {
//       __IOM uint8_t PRI_11      : 8;            /*!< PRI_11                                                                    */
//     } IPR11_b;
//   } ;

//   union {
//     __IOM uint8_t IPR12;                        /*!< Interrupt Priority Register 12                                            */

//     struct {
//       __IOM uint8_t PRI_12      : 8;            /*!< PRI_12                                                                    */
//     } IPR12_b;
//   } ;

//   union {
//     __IOM uint8_t IPR13;                        /*!< Interrupt Priority Register 13                                            */

//     struct {
//       __IOM uint8_t PRI_13      : 8;            /*!< PRI_13                                                                    */
//     } IPR13_b;
//   } ;

//   union {
//     __IOM uint8_t IPR14;                        /*!< Interrupt Priority Register 14                                            */

//     struct {
//       __IOM uint8_t PRI_14      : 8;            /*!< PRI_14                                                                    */
//     } IPR14_b;
//   } ;

//   union {
//     __IOM uint8_t IPR15;                        /*!< Interrupt Priority Register 15                                            */

//     struct {
//       __IOM uint8_t PRI_15      : 8;            /*!< PRI_15                                                                    */
//     } IPR15_b;
//   } ;

//   union {
//     __IOM uint8_t IPR16;                        /*!< Interrupt Priority Register 16                                            */

//     struct {
//       __IOM uint8_t PRI_16      : 8;            /*!< PRI_16                                                                    */
//     } IPR16_b;
//   } ;

//   union {
//     __IOM uint8_t IPR17;                        /*!< Interrupt Priority Register 17                                            */

//     struct {
//       __IOM uint8_t PRI_17      : 8;            /*!< PRI_17                                                                    */
//     } IPR17_b;
//   } ;

//   union {
//     __IOM uint8_t IPR18;                        /*!< Interrupt Priority Register 18                                            */

//     struct {
//       __IOM uint8_t PRI_18      : 8;            /*!< PRI_18                                                                    */
//     } IPR18_b;
//   } ;

//   union {
//     __IOM uint8_t IPR19;                        /*!< Interrupt Priority Register 19                                            */

//     struct {
//       __IOM uint8_t PRI_19      : 8;            /*!< PRI_19                                                                    */
//     } IPR19_b;
//   } ;

//   union {
//     __IOM uint8_t IPR20;                        /*!< Interrupt Priority Register 20                                            */

//     struct {
//       __IOM uint8_t PRI_20      : 8;            /*!< PRI_20                                                                    */
//     } IPR20_b;
//   } ;

//   union {
//     __IOM uint8_t IPR21;                        /*!< Interrupt Priority Register 21                                            */

//     struct {
//       __IOM uint8_t PRI_21      : 8;            /*!< PRI_21                                                                    */
//     } IPR21_b;
//   } ;

//   union {
//     __IOM uint8_t IPR22;                        /*!< Interrupt Priority Register 22                                            */

//     struct {
//       __IOM uint8_t PRI_22      : 8;            /*!< PRI_22                                                                    */
//     } IPR22_b;
//   } ;

//   union {
//     __IOM uint8_t IPR23;                        /*!< Interrupt Priority Register 23                                            */

//     struct {
//       __IOM uint8_t PRI_23      : 8;            /*!< PRI_23                                                                    */
//     } IPR23_b;
//   } ;

//   union {
//     __IOM uint8_t IPR24;                        /*!< Interrupt Priority Register 24                                            */

//     struct {
//       __IOM uint8_t PRI_24      : 8;            /*!< PRI_24                                                                    */
//     } IPR24_b;
//   } ;

//   union {
//     __IOM uint8_t IPR25;                        /*!< Interrupt Priority Register 25                                            */

//     struct {
//       __IOM uint8_t PRI_25      : 8;            /*!< PRI_25                                                                    */
//     } IPR25_b;
//   } ;

//   union {
//     __IOM uint8_t IPR26;                        /*!< Interrupt Priority Register 26                                            */

//     struct {
//       __IOM uint8_t PRI_26      : 8;            /*!< PRI_26                                                                    */
//     } IPR26_b;
//   } ;

//   union {
//     __IOM uint8_t IPR27;                        /*!< Interrupt Priority Register 27                                            */

//     struct {
//       __IOM uint8_t PRI_27      : 8;            /*!< PRI_27                                                                    */
//     } IPR27_b;
//   } ;

//   union {
//     __IOM uint8_t IPR28;                        /*!< Interrupt Priority Register 28                                            */

//     struct {
//       __IOM uint8_t PRI_28      : 8;            /*!< PRI_28                                                                    */
//     } IPR28_b;
//   } ;

//   union {
//     __IOM uint8_t IPR29;                        /*!< Interrupt Priority Register 29                                            */

//     struct {
//       __IOM uint8_t PRI_29      : 8;            /*!< PRI_29                                                                    */
//     } IPR29_b;
//   } ;

//   union {
//     __IOM uint8_t IPR30;                        /*!< Interrupt Priority Register 30                                            */

//     struct {
//       __IOM uint8_t PRI_30      : 8;            /*!< PRI_30                                                                    */
//     } IPR30_b;
//   } ;

//   union {
//     __IOM uint8_t IPR31;                        /*!< Interrupt Priority Register 31                                            */

//     struct {
//       __IOM uint8_t PRI_31      : 8;            /*!< PRI_31                                                                    */
//     } IPR31_b;
//   } ;
// } NVIC_Type;                                    /*!< Size = 800 (0x320)                                                        */



/* =========================================================================================================================== */
/* ================                                            PMU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Power management unit (PMU)
  */

typedef struct {                                /*!< PMU Structure                                                             */

  union {
    __IOM uint32_t CTL;                         /*!< power control register                                                    */

    struct {
      __IOM uint32_t LDOLP      : 1;            /*!< LDO Low Power Mode                                                        */
      __IOM uint32_t STBMOD     : 1;            /*!< Standby Mode                                                              */
      __IOM uint32_t WURST      : 1;            /*!< Wakeup Flag Reset                                                         */
      __IOM uint32_t STBRST     : 1;            /*!< Standby Flag Reset                                                        */
      __IOM uint32_t LVDEN      : 1;            /*!< Low Voltage Detector Enable                                               */
      __IOM uint32_t LVDT       : 3;            /*!< Low Voltage Detector Threshold                                            */
      __IOM uint32_t BKPWEN     : 1;            /*!< Backup Domain Write Enable                                                */
            uint32_t            : 5;
      __IOM uint32_t LDOVS      : 2;            /*!< LDO output voltage select                                                 */
            uint32_t            : 16;
    } CTL_b;
  } ;

  union {
    __IOM uint32_t CS;                          /*!< power control/status register                                             */

    struct {
      __IM  uint32_t WUF        : 1;            /*!< Wakeup flag                                                               */
      __IM  uint32_t STBF       : 1;            /*!< Standby flag                                                              */
      __IM  uint32_t LVDF       : 1;            /*!< Low Voltage Detector Status Flag                                          */
            uint32_t            : 5;
      __IOM uint32_t WUPEN0     : 1;            /*!< WKUP pin0 Enable                                                          */
      __IOM uint32_t WUPEN1     : 1;            /*!< WKUP pin1 Enable                                                          */
            uint32_t            : 3;
      __IOM uint32_t WUPEN5     : 1;            /*!< WKUP pin5 Enable                                                          */
      __IOM uint32_t WUPEN6     : 1;            /*!< WKUP pin6 Enable                                                          */
            uint32_t            : 17;
    } CS_b;
  } ;
} PMU_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            RCU                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Reset and clock unit (RCU)
  */

typedef struct {                                /*!< RCU Structure                                                             */

  union {
    __IOM uint32_t CTL0;                        /*!< Control register 0                                                        */

    struct {
      __IOM uint32_t IRC8MEN    : 1;            /*!< Internal High Speed oscillator Enable                                     */
      __IM  uint32_t IRC8MSTB   : 1;            /*!< IRC8M High Speed Internal Oscillator stabilization Flag                   */
            uint32_t            : 1;
      __IOM uint32_t IRC8MADJ   : 5;            /*!< High Speed Internal Oscillator clock trim adjust value                    */
      __IM  uint32_t IRC8MCALIB : 8;            /*!< High Speed Internal Oscillator calibration value register                 */
      __IOM uint32_t HXTALEN    : 1;            /*!< External High Speed oscillator Enable                                     */
      __IM  uint32_t HXTALSTB   : 1;            /*!< External crystal oscillator (HXTAL) clock stabilization flag              */
      __IOM uint32_t HXTALBPS   : 1;            /*!< External crystal oscillator (HXTAL) clock bypass mode enable              */
      __IOM uint32_t CKMEN      : 1;            /*!< HXTAL Clock Monitor Enable                                                */
            uint32_t            : 4;
      __IOM uint32_t PLLEN      : 1;            /*!< PLL enable                                                                */
      __IM  uint32_t PLLSTB     : 1;            /*!< PLL Clock Stabilization Flag                                              */
            uint32_t            : 6;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CFG0;                        /*!< Clock configuration register 0 (RCU_CFG0)                                 */

    struct {
      __IOM uint32_t SCS        : 2;            /*!< System clock switch                                                       */
      __IM  uint32_t SCSS       : 2;            /*!< System clock switch status                                                */
      __IOM uint32_t AHBPSC     : 4;            /*!< AHB prescaler selection                                                   */
      __IOM uint32_t APB1PSC    : 3;            /*!< APB1 prescaler selection                                                  */
      __IOM uint32_t APB2PSC    : 3;            /*!< APB2 prescaler selection                                                  */
      __IOM uint32_t ADCPSC     : 2;            /*!< ADC clock prescaler selection                                             */
      __IOM uint32_t PLLSEL     : 1;            /*!< PLL Clock Source Selection                                                */
      __IOM uint32_t PLLPREDV   : 1;            /*!< HXTAL divider for PLL source clock selection.                             */
      __IOM uint32_t PLLMF      : 4;            /*!< PLL multiply factor                                                       */
            uint32_t            : 2;
      __IOM uint32_t CKOUTSEL   : 3;            /*!< CK_OUT Clock Source Selection                                             */
      __IOM uint32_t PLLMF_MSB  : 1;            /*!< Bit 4 of PLLMF register                                                   */
      __IOM uint32_t CKOUTDIV   : 3;            /*!< The CK_OUT divider which the CK_OUT frequency can be reduced              */
      __IOM uint32_t PLLDV      : 1;            /*!< The CK_PLL divide by 1 or 2 for CK_OUT                                    */
    } CFG0_b;
  } ;

  union {
    __IOM uint32_t INT;                         /*!< Clock interrupt register (RCU_INT)                                        */

    struct {
      __IM  uint32_t IRC40KSTBIF : 1;           /*!< IRC40K stabilization interrupt flag                                       */
      __IM  uint32_t LXTALSTBIF : 1;            /*!< LXTAL stabilization interrupt flag                                        */
      __IM  uint32_t IRC8MSTBIF : 1;            /*!< IRC8M stabilization interrupt flag                                        */
      __IM  uint32_t HXTALSTBIF : 1;            /*!< HXTAL stabilization interrupt flag                                        */
      __IM  uint32_t PLLSTBIF   : 1;            /*!< PLL stabilization interrupt flag                                          */
      __IM  uint32_t IRC28MSTBIF : 1;           /*!< IRC28M stabilization interrupt flag                                       */
            uint32_t            : 1;
      __IM  uint32_t CKMIF      : 1;            /*!< HXTAL Clock Stuck Interrupt Flag                                          */
      __IOM uint32_t IRC40KSTBIE : 1;           /*!< IRC40K Stabilization interrupt enable                                     */
      __IOM uint32_t LXTALSTBIE : 1;            /*!< LXTAL Stabilization Interrupt Enable                                      */
      __IOM uint32_t IRC8MSTBIE : 1;            /*!< IRC8M Stabilization Interrupt Enable                                      */
      __IOM uint32_t HXTALSTBIE : 1;            /*!< HXTAL Stabilization Interrupt Enable                                      */
      __IOM uint32_t PLLSTBIE   : 1;            /*!< PLL Stabilization Interrupt Enable                                        */
      __IOM uint32_t IRC28MSTBIE : 1;           /*!< IRC28M Stabilization Interrupt Enable                                     */
            uint32_t            : 2;
      __OM  uint32_t IRC40KSTBIC : 1;           /*!< IRC40K Stabilization Interrupt Clear                                      */
      __OM  uint32_t LXTALSTBIC : 1;            /*!< LXTAL Stabilization Interrupt Clear                                       */
      __OM  uint32_t IRC8MSTBIC : 1;            /*!< IRC8M Stabilization Interrupt Clear                                       */
      __OM  uint32_t HXTALSTBIC : 1;            /*!< HXTAL Stabilization Interrupt Clear                                       */
      __OM  uint32_t PLLSTBIC   : 1;            /*!< PLL stabilization Interrupt Clear                                         */
      __OM  uint32_t IRC28MSTBIC : 1;           /*!< IRC28M stabilization Interrupt Clear                                      */
            uint32_t            : 1;
      __OM  uint32_t CKMIC      : 1;            /*!< HXTAL Clock Stuck Interrupt Clear                                         */
            uint32_t            : 8;
    } INT_b;
  } ;

  union {
    __IOM uint32_t APB2RST;                     /*!< APB2 reset register (RCU_APB2RST)                                         */

    struct {
      __IOM uint32_t CFGCMPRST  : 1;            /*!< System configuration and comparator reset                                 */
            uint32_t            : 8;
      __IOM uint32_t ADCRST     : 1;            /*!< ADC reset                                                                 */
            uint32_t            : 1;
      __IOM uint32_t TIMER0RST  : 1;            /*!< TIMER0 reset                                                              */
      __IOM uint32_t SPI0RST    : 1;            /*!< SPI0 Reset                                                                */
            uint32_t            : 1;
      __IOM uint32_t USART0RST  : 1;            /*!< USART0 Reset                                                              */
            uint32_t            : 1;
      __IOM uint32_t TIMER14RST : 1;            /*!< TIMER14 reset                                                             */
      __IOM uint32_t TIMER15RST : 1;            /*!< TIMER15 reset                                                             */
      __IOM uint32_t TIMER16RST : 1;            /*!< TIMER16 reset                                                             */
            uint32_t            : 13;
    } APB2RST_b;
  } ;

  union {
    __IOM uint32_t APB1RST;                     /*!< APB1 reset register (RCU_APB1RST)                                         */

    struct {
            uint32_t            : 1;
      __IOM uint32_t TIMER2RST  : 1;            /*!< TIMER2 timer reset                                                        */
            uint32_t            : 2;
      __IOM uint32_t TIMER5RST  : 1;            /*!< TIMER5 timer reset                                                        */
            uint32_t            : 3;
      __IOM uint32_t TIMER13RST : 1;            /*!< TIMER13 timer reset                                                       */
            uint32_t            : 2;
      __IOM uint32_t WWDGTRST   : 1;            /*!< Window watchdog timer reset                                               */
            uint32_t            : 2;
      __IOM uint32_t SPI1RST    : 1;            /*!< SPI1 reset                                                                */
            uint32_t            : 2;
      __IOM uint32_t USART1RST  : 1;            /*!< USART1 reset                                                              */
            uint32_t            : 3;
      __IOM uint32_t I2C0RST    : 1;            /*!< I2C0 reset                                                                */
      __IOM uint32_t I2C1RST    : 1;            /*!< I2C1 reset                                                                */
            uint32_t            : 5;
      __IOM uint32_t PMURST     : 1;            /*!< Power control reset                                                       */
            uint32_t            : 3;
    } APB1RST_b;
  } ;

  union {
    __IOM uint32_t AHBEN;                       /*!< AHB enable register (RCU_AHBEN)                                           */

    struct {
      __IOM uint32_t DMAEN      : 1;            /*!< DMA clock enable                                                          */
            uint32_t            : 1;
      __IOM uint32_t SRAMSPEN   : 1;            /*!< SRAM interface clock during sleep mode enable                             */
            uint32_t            : 1;
      __IOM uint32_t FMCSPEN    : 1;            /*!< FMC clock during sleep mode enable                                        */
            uint32_t            : 1;
      __IOM uint32_t CRCEN      : 1;            /*!< CRC clock enable                                                          */
            uint32_t            : 10;
      __IOM uint32_t PAEN       : 1;            /*!< GPIO port A clock enable                                                  */
      __IOM uint32_t PBEN       : 1;            /*!< GPIO port B clock enable                                                  */
      __IOM uint32_t PCEN       : 1;            /*!< GPIO port C clock enable                                                  */
            uint32_t            : 2;
      __IOM uint32_t PFEN       : 1;            /*!< GPIO port F clock enable                                                  */
            uint32_t            : 9;
    } AHBEN_b;
  } ;

  union {
    __IOM uint32_t APB2EN;                      /*!< APB2 enable register (RCU_APB2EN)                                         */

    struct {
      __IOM uint32_t CFGCMPEN   : 1;            /*!< System configuration and comparator clock enable                          */
            uint32_t            : 8;
      __IOM uint32_t ADCEN      : 1;            /*!< ADC interface clock enable                                                */
            uint32_t            : 1;
      __IOM uint32_t TIMER0EN   : 1;            /*!< TIMER0 timer clock enable                                                 */
      __IOM uint32_t SPI0EN     : 1;            /*!< SPI0 clock enable                                                         */
            uint32_t            : 1;
      __IOM uint32_t USART0EN   : 1;            /*!< USART0 clock enable                                                       */
            uint32_t            : 1;
      __IOM uint32_t TIMER14EN  : 1;            /*!< TIMER14 timer clock enable                                                */
      __IOM uint32_t TIMER15EN  : 1;            /*!< TIMER15 timer clock enable                                                */
      __IOM uint32_t TIMER16EN  : 1;            /*!< TIMER16 timer clock enable                                                */
            uint32_t            : 3;
      __IOM uint32_t DBGMCUEN   : 1;            /*!< DBGMCU clock enable                                                       */
            uint32_t            : 9;
    } APB2EN_b;
  } ;

  union {
    __IOM uint32_t APB1EN;                      /*!< APB1 enable register (RCU_APB1EN)                                         */

    struct {
            uint32_t            : 1;
      __IOM uint32_t TIMER2EN   : 1;            /*!< TIMER2 timer clock enable                                                 */
            uint32_t            : 2;
      __IOM uint32_t TIMER5EN   : 1;            /*!< TIMER5 timer clock enable                                                 */
            uint32_t            : 3;
      __IOM uint32_t TIMER13EN  : 1;            /*!< TIMER13 timer clock enable                                                */
            uint32_t            : 2;
      __IOM uint32_t WWDGTEN    : 1;            /*!< Window watchdog timer clock enable                                        */
            uint32_t            : 2;
      __IOM uint32_t SPI1EN     : 1;            /*!< SPI1 clock enable                                                         */
            uint32_t            : 2;
      __IOM uint32_t USART1EN   : 1;            /*!< USART1 clock enable                                                       */
            uint32_t            : 3;
      __IOM uint32_t I2C0EN     : 1;            /*!< I2C0 clock enable                                                         */
      __IOM uint32_t I2C1EN     : 1;            /*!< I2C1 clock enable                                                         */
            uint32_t            : 5;
      __IOM uint32_t PMUEN      : 1;            /*!< Power interface clock enable                                              */
            uint32_t            : 3;
    } APB1EN_b;
  } ;

  union {
    __IOM uint32_t BDCTL;                       /*!< Backup domain control register (RCU_BDCTL)                                */

    struct {
      __IOM uint32_t LXTALEN    : 1;            /*!< LXTAL enable                                                              */
      __IM  uint32_t LXTALSTB   : 1;            /*!< External low-speed oscillator stabilization                               */
      __IOM uint32_t LXTALBPS   : 1;            /*!< LXTAL bypass mode enable                                                  */
      __IOM uint32_t LXTALDRI   : 2;            /*!< LXTAL drive capability                                                    */
            uint32_t            : 3;
      __IOM uint32_t RTCSRC     : 2;            /*!< RTC clock entry selection                                                 */
            uint32_t            : 5;
      __IOM uint32_t RTCEN      : 1;            /*!< RTC clock enable                                                          */
      __IOM uint32_t BKPRST     : 1;            /*!< Backup domain reset                                                       */
            uint32_t            : 15;
    } BDCTL_b;
  } ;

  union {
    __IOM uint32_t RSTSCK;                      /*!< Reset source /clock register (RCU_RSTSCK)                                 */

    struct {
      __IOM uint32_t IRC40KEN   : 1;            /*!< IRC40K enable                                                             */
      __IM  uint32_t IRC40KSTB  : 1;            /*!< IRC40K stabilization                                                      */
            uint32_t            : 21;
      __IOM uint32_t V12RSTF    : 1;            /*!< V12 domain Power reset flag                                               */
      __IOM uint32_t RSTFC      : 1;            /*!< Reset flag clear                                                          */
      __IOM uint32_t OBLRSTF    : 1;            /*!< Option byte loader reset flag                                             */
      __IOM uint32_t EPRSTF     : 1;            /*!< External PIN reset flag                                                   */
      __IOM uint32_t PORRSTF    : 1;            /*!< Power reset flag                                                          */
      __IOM uint32_t SWRSTF     : 1;            /*!< Software reset flag                                                       */
      __IOM uint32_t FWDGTRSTF  : 1;            /*!< Free Watchdog timer reset flag                                            */
      __IOM uint32_t WWDGTRSTF  : 1;            /*!< Window watchdog timer reset flag                                          */
      __IOM uint32_t LPRSTF     : 1;            /*!< Low-power reset flag                                                      */
    } RSTSCK_b;
  } ;

  union {
    __IOM uint32_t AHBRST;                      /*!< AHB reset register                                                        */

    struct {
            uint32_t            : 17;
      __IOM uint32_t PARST      : 1;            /*!< GPIO port A reset                                                         */
      __IOM uint32_t PBRST      : 1;            /*!< GPIO port B reset                                                         */
      __IOM uint32_t PCRST      : 1;            /*!< GPIO port C reset                                                         */
            uint32_t            : 2;
      __IOM uint32_t PFRST      : 1;            /*!< GPIO port F reset                                                         */
            uint32_t            : 9;
    } AHBRST_b;
  } ;

  union {
    __IOM uint32_t CFG1;                        /*!< Configuration register 1                                                  */

    struct {
      __IOM uint32_t PREDV      : 4;            /*!< CK_HXTAL or CK_IRC48M divider previous PLL                                */
            uint32_t            : 28;
    } CFG1_b;
  } ;

  union {
    __IOM uint32_t CFG2;                        /*!< Configuration register 2                                                  */

    struct {
      __IOM uint32_t USART0SEL  : 2;            /*!< CK_USART0 clock source selection                                          */
            uint32_t            : 6;
      __IOM uint32_t ADCSEL     : 1;            /*!< CK_ADC clock source selection                                             */
            uint32_t            : 7;
      __IOM uint32_t IRC28MDIV  : 1;            /*!< CK_IRC28M divider 2 or not                                                */
            uint32_t            : 14;
      __IOM uint32_t ADCPSC     : 1;            /*!< Bit 2 of ADCPSC                                                           */
    } CFG2_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< Control register 1                                                        */

    struct {
      __IOM uint32_t IRC28MEN   : 1;            /*!< IRC28M Internal 28M RC oscillator Enable                                  */
      __IM  uint32_t IRC28MSTB  : 1;            /*!< IRC28M Internal 28M RC Oscillator stabilization Flag                      */
            uint32_t            : 1;
      __IOM uint32_t IRC28MADJ  : 5;            /*!< Internal 28M RC Oscillator clock trim adjust value                        */
      __IM  uint32_t IRC28MCALIB : 8;           /*!< Internal 28M RC Oscillator calibration value register                     */
            uint32_t            : 16;
    } CTL1_b;
  } ;
  __IM  uint32_t  RESERVED[50];

  union {
    __IOM uint32_t VKEY;                        /*!< Voltage key register                                                      */

    struct {
      __OM  uint32_t KEY        : 32;           /*!< The key of RCU_DSV register                                               */
    } VKEY_b;
  } ;
  __IM  uint32_t  RESERVED1[12];

  union {
    __IOM uint32_t DSV;                         /*!< Deep-sleep mode voltage register                                          */

    struct {
      __IOM uint32_t DSLPVS     : 2;            /*!< Deep-sleep mode voltage select                                            */
            uint32_t            : 30;
    } DSV_b;
  } ;
} RCU_Type;                                     /*!< Size = 312 (0x138)                                                        */



/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Real-time clock (RTC)
  */

typedef struct {                                /*!< RTC Structure                                                             */

  union {
    __IOM uint32_t TIME;                        /*!< time register                                                             */

    struct {
      __IOM uint32_t SCU        : 4;            /*!< Second units in BCD code                                                  */
      __IOM uint32_t SCT        : 3;            /*!< Second tens in BCD code                                                   */
            uint32_t            : 1;
      __IOM uint32_t MNU        : 4;            /*!< Minute units in BCD code                                                  */
      __IOM uint32_t MNT        : 3;            /*!< Minute tens in BCD code                                                   */
            uint32_t            : 1;
      __IOM uint32_t HRU        : 4;            /*!< Hour units in BCD format                                                  */
      __IOM uint32_t HRT        : 2;            /*!< Hour tens in BCD code                                                     */
      __IOM uint32_t PM         : 1;            /*!< AM/PM mark                                                                */
            uint32_t            : 9;
    } TIME_b;
  } ;

  union {
    __IOM uint32_t DATE;                        /*!< date register                                                             */

    struct {
      __IOM uint32_t DAYU       : 4;            /*!< Date units in BCD code                                                    */
      __IOM uint32_t DAYT       : 2;            /*!< Date tens in BCD code                                                     */
            uint32_t            : 2;
      __IOM uint32_t MONU       : 4;            /*!< Month units in BCD code                                                   */
      __IOM uint32_t MONT       : 1;            /*!< Month tens in BCD code                                                    */
      __IOM uint32_t DOW        : 3;            /*!< Days of the week                                                          */
      __IOM uint32_t YRU        : 4;            /*!< Year units in BCD code                                                    */
      __IOM uint32_t YRT        : 4;            /*!< Year tens in BCD code                                                     */
            uint32_t            : 8;
    } DATE_b;
  } ;

  union {
    __IOM uint32_t CTL;                         /*!< control register                                                          */

    struct {
            uint32_t            : 3;
      __IOM uint32_t TSEG       : 1;            /*!< Time-stamp event active edge                                              */
      __IOM uint32_t REFEN      : 1;            /*!< RTC_REFIN reference clock detection enable (50 or 60 Hz)                  */
      __IOM uint32_t BPSHAD     : 1;            /*!< Bypass the shadow registers                                               */
      __IOM uint32_t CS         : 1;            /*!< Hour format                                                               */
            uint32_t            : 1;
      __IOM uint32_t ALRM0EN    : 1;            /*!< Alarm A enable                                                            */
            uint32_t            : 2;
      __IOM uint32_t TSEN       : 1;            /*!< timestamp enable                                                          */
      __IOM uint32_t ALRM0IE    : 1;            /*!< Alarm A interrupt enable                                                  */
            uint32_t            : 2;
      __IOM uint32_t TSIE       : 1;            /*!< Time-stamp interrupt enable                                               */
      __OM  uint32_t A1H        : 1;            /*!< Add 1 hour (summer time change)                                           */
      __OM  uint32_t S1H        : 1;            /*!< Subtract 1 hour (winter time change)                                      */
      __IOM uint32_t DSM        : 1;            /*!< Backup                                                                    */
      __IOM uint32_t COS        : 1;            /*!< Calibration output selection                                              */
      __IOM uint32_t OPOL       : 1;            /*!< Output polarity                                                           */
      __IOM uint32_t OS         : 2;            /*!< Output selection                                                          */
      __IOM uint32_t COEN       : 1;            /*!< Calibration output enable                                                 */
            uint32_t            : 8;
    } CTL_b;
  } ;

  union {
    __IOM uint32_t STAT;                        /*!< initialization and status register                                        */

    struct {
      __IM  uint32_t ALRM0WF    : 1;            /*!< Alarm A write flag                                                        */
            uint32_t            : 2;
      __IM  uint32_t SOPF       : 1;            /*!< Shift operation pending                                                   */
      __IM  uint32_t YCM        : 1;            /*!< Initialization status flag                                                */
      __IOM uint32_t RSYNF      : 1;            /*!< Registers synchronization flag                                            */
      __IM  uint32_t INITF      : 1;            /*!< Initialization flag                                                       */
      __IOM uint32_t INITM      : 1;            /*!< Initialization mode                                                       */
      __IOM uint32_t ALRM0F     : 1;            /*!< Alarm A flag                                                              */
            uint32_t            : 2;
      __IOM uint32_t TSF        : 1;            /*!< Time-stamp flag                                                           */
      __IOM uint32_t TSOVRF     : 1;            /*!< Time-stamp overflow flag                                                  */
      __IOM uint32_t TP0F       : 1;            /*!< RTC_TAMP0 detection flag                                                  */
      __IOM uint32_t TP1F       : 1;            /*!< RTC_TAMP1 detection flag                                                  */
            uint32_t            : 1;
      __IM  uint32_t SCPF       : 1;            /*!< Recalibration pending Flag                                                */
            uint32_t            : 15;
    } STAT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler register                                                        */

    struct {
      __IOM uint32_t FACTOR_S   : 15;           /*!< Synchronous prescaler factor                                              */
            uint32_t            : 1;
      __IOM uint32_t FACTOR_A   : 7;            /*!< Asynchronous prescaler factor                                             */
            uint32_t            : 9;
    } PSC_b;
  } ;
  __IM  uint32_t  RESERVED[2];

  union {
    __IOM uint32_t ALRM0TD;                     /*!< alarm A register                                                          */

    struct {
      __IOM uint32_t SCU        : 4;            /*!< Second units in BCD format.                                               */
      __IOM uint32_t SCT        : 3;            /*!< Second tens in BCD format.                                                */
      __IOM uint32_t MSKS       : 1;            /*!< Alarm seconds mask                                                        */
      __IOM uint32_t MNU        : 4;            /*!< Minute units in BCD format.                                               */
      __IOM uint32_t MNT        : 3;            /*!< Minute tens in BCD format.                                                */
      __IOM uint32_t MSKM       : 1;            /*!< Alarm minutes mask                                                        */
      __IOM uint32_t HRU        : 4;            /*!< Hour units in BCD format.                                                 */
      __IOM uint32_t HRT        : 2;            /*!< Hour tens in BCD format.                                                  */
      __IOM uint32_t PM         : 1;            /*!< AM/PM notation                                                            */
      __IOM uint32_t MSKH       : 1;            /*!< Alarm hours mask                                                          */
      __IOM uint32_t DAYU       : 4;            /*!< Date units or day in BCD format.                                          */
      __IOM uint32_t DAYT       : 2;            /*!< Date tens in BCD format.                                                  */
      __IOM uint32_t DOWS       : 1;            /*!< Week day selection                                                        */
      __IOM uint32_t MSKD       : 1;            /*!< Alarm date mask                                                           */
    } ALRM0TD_b;
  } ;
  __IM  uint32_t  RESERVED1;

  union {
    __OM  uint32_t WPK;                         /*!< write protection register                                                 */

    struct {
      __OM  uint32_t WPK        : 8;            /*!< Write protection key                                                      */
            uint32_t            : 24;
    } WPK_b;
  } ;

  union {
    __IM  uint32_t SS;                          /*!< sub second register                                                       */

    struct {
      __IM  uint32_t SSC        : 16;           /*!< Sub second value                                                          */
            uint32_t            : 16;
    } SS_b;
  } ;

  union {
    __OM  uint32_t SHIFTCTL;                    /*!< shift control register                                                    */

    struct {
      __OM  uint32_t SFS        : 15;           /*!< Subtract a fraction of a second                                           */
            uint32_t            : 16;
      __OM  uint32_t A1S        : 1;            /*!< One second add                                                            */
    } SHIFTCTL_b;
  } ;

  union {
    __IM  uint32_t TTS;                         /*!< timestamp time register                                                   */

    struct {
      __IM  uint32_t SCU        : 4;            /*!< Second units in BCD code                                                  */
      __IM  uint32_t SCT        : 3;            /*!< Second tens in BCD code                                                   */
            uint32_t            : 1;
      __IM  uint32_t MNU        : 4;            /*!< Minute units in BCD code                                                  */
      __IM  uint32_t MNT        : 3;            /*!< Minute tens in BCD code                                                   */
            uint32_t            : 1;
      __IM  uint32_t HRU        : 4;            /*!< Hour units in BCD code                                                    */
      __IM  uint32_t HRT        : 2;            /*!< Hour tens in BCD code                                                     */
      __IM  uint32_t PM         : 1;            /*!< AM/PM mark                                                                */
            uint32_t            : 9;
    } TTS_b;
  } ;

  union {
    __IM  uint32_t DTS;                         /*!< Date of time stamp register                                               */

    struct {
      __IM  uint32_t DAYU       : 5;            /*!< Date units in BCD code                                                    */
      __IM  uint32_t DAYT       : 2;            /*!< Date tens in BCD code                                                     */
            uint32_t            : 1;
      __IM  uint32_t MONU       : 4;            /*!< Month units in BCD code                                                   */
      __IM  uint32_t MONT       : 1;            /*!< Month tens in BCD code                                                    */
      __IM  uint32_t DOW        : 3;            /*!< Week day units                                                            */
            uint32_t            : 16;
    } DTS_b;
  } ;

  union {
    __IM  uint32_t SSTS;                        /*!< time-stamp sub second register                                            */

    struct {
      __IM  uint32_t SSC        : 16;           /*!< Sub second value                                                          */
            uint32_t            : 16;
    } SSTS_b;
  } ;

  union {
    __IOM uint32_t HRFC;                        /*!< High resolution frequency compensation register                           */

    struct {
      __IOM uint32_t CMSK       : 9;            /*!< Calibration mask number                                                   */
            uint32_t            : 4;
      __IOM uint32_t CWND16     : 1;            /*!< Frequency compensation window 16 second selected                          */
      __IOM uint32_t CWND8      : 1;            /*!< Frequency compensation window 8 second selected                           */
      __IOM uint32_t FREQI      : 1;            /*!< Increase RTC frequency by 488.5PPM                                        */
            uint32_t            : 16;
    } HRFC_b;
  } ;

  union {
    __IOM uint32_t TAMP;                        /*!< tamper and alternate function configuration register                      */

    struct {
      __IOM uint32_t TP0EN      : 1;            /*!< Tamper 0 event trigger edge                                               */
      __IOM uint32_t TP0EG      : 1;            /*!< Active level for RTC_TAMP1 input                                          */
      __IOM uint32_t TPIE       : 1;            /*!< Tamper detection interrupt enable                                         */
      __IOM uint32_t TP1EN      : 1;            /*!< Tamper 1 detection enable                                                 */
      __IOM uint32_t TP1EG      : 1;            /*!< Tamper 1 event trigger edge                                               */
            uint32_t            : 2;
      __IOM uint32_t TPTS       : 1;            /*!< Activate timestamp on tamper detection event                              */
      __IOM uint32_t FREQ       : 3;            /*!< Tamper sampling frequency                                                 */
      __IOM uint32_t FLT        : 2;            /*!< RTC_TAMPx filter count                                                    */
      __IOM uint32_t PRCH       : 2;            /*!< RTC_TAMPx precharge duration                                              */
      __IOM uint32_t DISPU      : 1;            /*!< RTC_TAMPx pull-up disable                                                 */
            uint32_t            : 2;
      __IOM uint32_t PC13VAL    : 1;            /*!< RTC_ALARM output type/PC13 value                                          */
      __IOM uint32_t PC13MDE    : 1;            /*!< PC13 mode                                                                 */
      __IOM uint32_t PC14VAL    : 1;            /*!< PC14 value                                                                */
      __IOM uint32_t PC14MDE    : 1;            /*!< PC14 mode                                                                 */
      __IOM uint32_t PC15VAL    : 1;            /*!< PC15 value                                                                */
      __IOM uint32_t PC15MDE    : 1;            /*!< PC15 mode                                                                 */
            uint32_t            : 8;
    } TAMP_b;
  } ;

  union {
    __IOM uint32_t ALRM0SS;                     /*!< alarm 0 sub second register                                               */

    struct {
      __IOM uint32_t SSC        : 15;           /*!< Alarm sub second value                                                    */
            uint32_t            : 9;
      __IOM uint32_t MSKSSC     : 4;            /*!< Mask control bit of SSC                                                   */
            uint32_t            : 4;
    } ALRM0SS_b;
  } ;
  __IM  uint32_t  RESERVED2[2];

  union {
    __IOM uint32_t BKP0;                        /*!< backup register                                                           */

    struct {
      __IOM uint32_t DATA       : 32;           /*!< BKP data                                                                  */
    } BKP0_b;
  } ;

  union {
    __IOM uint32_t BKP1;                        /*!< backup register                                                           */

    struct {
      __IOM uint32_t DATA       : 32;           /*!< BKP data                                                                  */
    } BKP1_b;
  } ;

  union {
    __IOM uint32_t BKP2;                        /*!< backup register                                                           */

    struct {
      __IOM uint32_t DATA       : 32;           /*!< BKP data                                                                  */
    } BKP2_b;
  } ;

  union {
    __IOM uint32_t BKP3;                        /*!< backup register                                                           */

    struct {
      __IOM uint32_t DATA       : 32;           /*!< BKP data                                                                  */
    } BKP3_b;
  } ;

  union {
    __IOM uint32_t BKP4;                        /*!< backup register                                                           */

    struct {
      __IOM uint32_t DATA       : 32;           /*!< BKP data                                                                  */
    } BKP4_b;
  } ;
} RTC_Type;                                     /*!< Size = 100 (0x64)                                                         */



/* =========================================================================================================================== */
/* ================                                           SPI0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial peripheral interface (SPI0)
  */

typedef struct {                                /*!< SPI0 Structure                                                            */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CKPH       : 1;            /*!< Clock Phase Selection                                                     */
      __IOM uint32_t CKPL       : 1;            /*!< Clock Polarity Selection                                                  */
      __IOM uint32_t MSTMOD     : 1;            /*!< Master Mode Enable                                                        */
      __IOM uint32_t PSC        : 3;            /*!< Master Clock Prescaler Selection                                          */
      __IOM uint32_t SPIEN      : 1;            /*!< SPI enable                                                                */
      __IOM uint32_t LF         : 1;            /*!< LSB First Mode                                                            */
      __IOM uint32_t SWNSS      : 1;            /*!< NSS Pin Selection In NSS Software Mode                                    */
      __IOM uint32_t SWNSSEN    : 1;            /*!< NSS Software Mode Selection                                               */
      __IOM uint32_t RO         : 1;            /*!< Receive only                                                              */
      __IOM uint32_t FF16       : 1;            /*!< Data frame format                                                         */
      __IOM uint32_t CRCNT      : 1;            /*!< CRC transfer next                                                         */
      __IOM uint32_t CRCEN      : 1;            /*!< Hardware CRC calculation enable                                           */
      __IOM uint32_t BDOEN      : 1;            /*!< Bidirectional Transmit output enable                                      */
      __IOM uint32_t BDEN       : 1;            /*!< Bidirectional enable                                                      */
            uint32_t            : 16;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t DMAREN     : 1;            /*!< Rx buffer DMA enable                                                      */
      __IOM uint32_t DMATEN     : 1;            /*!< Tx buffer DMA enable                                                      */
      __IOM uint32_t NSSDRV     : 1;            /*!< NSS output enable                                                         */
      __IOM uint32_t NSSP       : 1;            /*!< SPI NSS Pulse Mode Enable                                                 */
      __IOM uint32_t TMOD       : 1;            /*!< SPI TI Mode Enable                                                        */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t RBNEIE     : 1;            /*!< Receive Buffer Not Empty Interrupt Enable                                 */
      __IOM uint32_t TBEIE      : 1;            /*!< Transmit Buffer Empty Interrupt Enable                                    */
            uint32_t            : 24;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t STAT;                        /*!< status register                                                           */

    struct {
      __IM  uint32_t RBNE       : 1;            /*!< Receive Buffer Not Empty                                                  */
      __IM  uint32_t TBE        : 1;            /*!< Transmit Buffer Empty                                                     */
      __IM  uint32_t I2SCH      : 1;            /*!< I2S channel side                                                          */
      __IM  uint32_t TXURERR    : 1;            /*!< Transmission underrun error bit                                           */
      __IOM uint32_t CRCERR     : 1;            /*!< SPI CRC Error Bit                                                         */
      __IM  uint32_t CONFERR    : 1;            /*!< SPI Configuration error                                                   */
      __IM  uint32_t RXORERR    : 1;            /*!< Reception Overrun Error Bit                                               */
      __IM  uint32_t TRANS      : 1;            /*!< Transmitting On-going Bit                                                 */
      __IOM uint32_t FERR       : 1;            /*!< Format Error                                                              */
            uint32_t            : 23;
    } STAT_b;
  } ;

  union {
    __IOM uint32_t DATA;                        /*!< data register                                                             */

    struct {
      __IOM uint32_t DATA       : 16;           /*!< Data register                                                             */
            uint32_t            : 16;
    } DATA_b;
  } ;

  union {
    __IOM uint32_t CPCPOLY;                     /*!< CRC polynomial register                                                   */

    struct {
      __IOM uint32_t CRCPOLY    : 16;           /*!< CRC polynomial register                                                   */
            uint32_t            : 16;
    } CPCPOLY_b;
  } ;

  union {
    __IM  uint32_t RCRC;                        /*!< RX CRC register                                                           */

    struct {
      __IM  uint32_t RCRC       : 16;           /*!< RX RCR register                                                           */
            uint32_t            : 16;
    } RCRC_b;
  } ;

  union {
    __IM  uint32_t TCRC;                        /*!< TX CRC register                                                           */

    struct {
      __IM  uint32_t TCRC       : 16;           /*!< Tx CRC register                                                           */
            uint32_t            : 16;
    } TCRC_b;
  } ;

  union {
    __IOM uint32_t I2SCTL;                      /*!< I2S configuration register                                                */

    struct {
      __IOM uint32_t CHLEN      : 1;            /*!< Channel length (number of bits per audio channel)                         */
      __IOM uint32_t DTLEN      : 2;            /*!< Data length to be transferred                                             */
      __IOM uint32_t CKPL       : 1;            /*!< Idle state clock polarity                                                 */
      __IOM uint32_t I2SSTD     : 2;            /*!< I2S standard selection                                                    */
            uint32_t            : 1;
      __IOM uint32_t PCMSMOD    : 1;            /*!< PCM frame synchronization                                                 */
      __IOM uint32_t I2SOPMOD   : 2;            /*!< I2S configuration mode                                                    */
      __IOM uint32_t I2SEN      : 1;            /*!< I2S Enable                                                                */
      __IOM uint32_t I2SSEL     : 1;            /*!< I2S mode selection                                                        */
            uint32_t            : 20;
    } I2SCTL_b;
  } ;

  union {
    __IOM uint32_t I2SPSC;                      /*!< I2S prescaler register                                                    */

    struct {
      __IOM uint32_t DIV        : 8;            /*!< Dividing factor for the prescaler                                         */
      __IOM uint32_t OF         : 1;            /*!< Odd factor for the prescaler                                              */
      __IOM uint32_t MCKOEN     : 1;            /*!< I2S_MCK output enable                                                     */
            uint32_t            : 22;
    } I2SPSC_b;
  } ;
} SPI_Type;                                     /*!< Size = 36 (0x24)                                                          */



/* =========================================================================================================================== */
/* ================                                           SPI1                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Serial Peripheral Interface 1 (SPI1)
  */

typedef struct {                                /*!< SPI1 Structure                                                            */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CKPH       : 1;            /*!< Clock Phase Selection                                                     */
      __IOM uint32_t CKPL       : 1;            /*!< Clock Polarity Selection                                                  */
      __IOM uint32_t MSTMOD     : 1;            /*!< Master Mode Enable                                                        */
      __IOM uint32_t PSC        : 3;            /*!< Master Clock Prescaler Selection                                          */
      __IOM uint32_t SPIEN      : 1;            /*!< SPI enable                                                                */
      __IOM uint32_t LF         : 1;            /*!< LSB First Mode                                                            */
      __IOM uint32_t SWNSS      : 1;            /*!< NSS Pin Selection In NSS Software Mode                                    */
      __IOM uint32_t SWNSSEN    : 1;            /*!< NSS Software Mode Selection                                               */
      __IOM uint32_t RO         : 1;            /*!< Receive only                                                              */
      __IOM uint32_t CRCL       : 1;            /*!< CRC length                                                                */
      __IOM uint32_t CRCNT      : 1;            /*!< CRC transfer next                                                         */
      __IOM uint32_t CRCEN      : 1;            /*!< Hardware CRC calculation enable                                           */
      __IOM uint32_t BDOEN      : 1;            /*!< Bidirectional Transmit output enable                                      */
      __IOM uint32_t BDEN       : 1;            /*!< Bidirectional enable                                                      */
            uint32_t            : 16;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t DMAREN     : 1;            /*!< Rx buffer DMA enable                                                      */
      __IOM uint32_t DMATEN     : 1;            /*!< Tx buffer DMA enable                                                      */
      __IOM uint32_t NSSDRV     : 1;            /*!< NSS output enable                                                         */
      __IOM uint32_t NSSP       : 1;            /*!< SPI NSS Pulse Mode Enable                                                 */
      __IOM uint32_t TMOD       : 1;            /*!< SPI TI Mode Enable                                                        */
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t RBNEIE     : 1;            /*!< Receive Buffer Not Empty Interrupt Enable                                 */
      __IOM uint32_t TBEIE      : 1;            /*!< Transmit Buffer Empty Interrupt Enable                                    */
      __IOM uint32_t DZ         : 4;            /*!< Date size                                                                 */
      __IOM uint32_t BYTEN      : 1;            /*!< Byte access enable                                                        */
      __IOM uint32_t RXDMA_ODD  : 1;            /*!< Odd bytes in RX DMA channel                                               */
      __IOM uint32_t TXDMA_ODD  : 1;            /*!< Odd bytes in TX DMA channel                                               */
            uint32_t            : 17;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t STAT;                        /*!< status register                                                           */

    struct {
      __IM  uint32_t RBNE       : 1;            /*!< Receive Buffer Not Empty                                                  */
      __IM  uint32_t TBE        : 1;            /*!< Transmit Buffer Empty                                                     */
            uint32_t            : 2;
      __IOM uint32_t CRCERR     : 1;            /*!< SPI CRC Error Bit                                                         */
      __IM  uint32_t CONFERR    : 1;            /*!< SPI Configuration error                                                   */
      __IM  uint32_t RXORERR    : 1;            /*!< Reception Overrun Error Bit                                               */
      __IM  uint32_t TRANS      : 1;            /*!< Transmitting On-going Bit                                                 */
      __IOM uint32_t FERR       : 1;            /*!< Format Error                                                              */
      __IM  uint32_t RXLVL      : 2;            /*!< Rx FIFO level                                                             */
      __IM  uint32_t TXLVL      : 2;            /*!< Tx FIFO level                                                             */
            uint32_t            : 19;
    } STAT_b;
  } ;

  union {
    __IOM uint32_t DATA;                        /*!< data register                                                             */

    struct {
      __IOM uint32_t DATA       : 16;           /*!< Data register                                                             */
            uint32_t            : 16;
    } DATA_b;
  } ;

  union {
    __IOM uint32_t CPCPOLY;                     /*!< CRC polynomial register                                                   */

    struct {
      __IOM uint32_t CRCPOLY    : 16;           /*!< CRC polynomial register                                                   */
            uint32_t            : 16;
    } CPCPOLY_b;
  } ;

  union {
    __IM  uint32_t RCRC;                        /*!< RX CRC register                                                           */

    struct {
      __IM  uint32_t RCRC       : 16;           /*!< RX RCR register                                                           */
            uint32_t            : 16;
    } RCRC_b;
  } ;

  union {
    __IM  uint32_t TCRC;                        /*!< TX CRC register                                                           */

    struct {
      __IM  uint32_t TCRC       : 16;           /*!< Tx CRC register                                                           */
            uint32_t            : 16;
    } TCRC_b;
  } ;

  union {
    __IOM uint32_t I2SCTL;                      /*!< I2S configuration register                                                */

    struct {
      __IOM uint32_t CHLEN      : 1;            /*!< Channel length (number of bits per audio channel)                         */
      __IOM uint32_t DTLEN      : 2;            /*!< Data length to be transferred                                             */
      __IOM uint32_t CKPL       : 1;            /*!< Idle state clock polarity                                                 */
      __IOM uint32_t I2SSTD     : 2;            /*!< I2S standard selection                                                    */
            uint32_t            : 1;
      __IOM uint32_t PCMSMOD    : 1;            /*!< PCM frame synchronization                                                 */
      __IOM uint32_t I2SOPMOD   : 2;            /*!< I2S configuration mode                                                    */
      __IOM uint32_t I2SEN      : 1;            /*!< I2S Enable                                                                */
      __IOM uint32_t I2SSEL     : 1;            /*!< I2S mode selection                                                        */
            uint32_t            : 20;
    } I2SCTL_b;
  } ;

  union {
    __IOM uint32_t I2SPSC;                      /*!< I2S prescaler register                                                    */

    struct {
      __IOM uint32_t DIV        : 8;            /*!< Dividing factor for the prescaler                                         */
      __IOM uint32_t OF         : 1;            /*!< Odd factor for the prescaler                                              */
      __IOM uint32_t MCKOEN     : 1;            /*!< I2S_MCK output enable                                                     */
            uint32_t            : 22;
    } I2SPSC_b;
  } ;
  __IM  uint32_t  RESERVED[23];

  union {
    __IOM uint32_t QCTL;                        /*!< SPI quad wird control register                                            */

    struct {
      __IOM uint32_t QMOD       : 1;            /*!< Quad wire mode enable                                                     */
      __IOM uint32_t QRD        : 1;            /*!< Quad wire read select                                                     */
      __IOM uint32_t IO23_DRV   : 1;            /*!< Drive IO2 and IO3 enable                                                  */
            uint32_t            : 29;
    } QCTL_b;
  } ;
} SPI1_Type;                                    /*!< Size = 132 (0x84)                                                         */



/* =========================================================================================================================== */
/* ================                                          SYSCFG                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief System configuration controller (SYSCFG)
  */

typedef struct {                                /*!< SYSCFG Structure                                                          */

  union {
    __IOM uint32_t CFG0;                        /*!< System configuration register 0                                           */

    struct {
      __IM  uint32_t BOOT_MODE  : 2;            /*!< Boot mode                                                                 */
            uint32_t            : 2;
      __IOM uint32_t PA11_PA12_RMP : 1;         /*!< PA11 and PA12 remapping bit for small packages                            */
            uint32_t            : 3;
      __IOM uint32_t ADC_DMA_RMP : 1;           /*!< ADC DMA request remapping enable                                          */
      __IOM uint32_t USART0_TX_DMA_RMP : 1;     /*!< USART0_TX DMA request remapping enable                                    */
      __IOM uint32_t USART0_RX_DMA_RMP : 1;     /*!< USART0_RX DMA request remapping enable                                    */
      __IOM uint32_t TIMER15_DMA_RMP : 1;       /*!< Timer 15 DMA request remapping enable                                     */
      __IOM uint32_t TIMER16_DMA_RMP : 1;       /*!< Timer 16 DMA request remapping enable                                     */
            uint32_t            : 6;
      __IOM uint32_t PB9_HCCE   : 1;            /*!< PB9 pin high current capability enable                                    */
            uint32_t            : 12;
    } CFG0_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t EXTISS0;                     /*!< EXTI sources selection register 0                                         */

    struct {
      __IOM uint32_t EXTI0_SS   : 4;            /*!< EXTI 0 sources selection                                                  */
      __IOM uint32_t EXTI1_SS   : 4;            /*!< EXTI 1 sources selection                                                  */
      __IOM uint32_t EXTI2_SS   : 4;            /*!< EXTI 2 sources selection                                                  */
      __IOM uint32_t EXTI3_SS   : 4;            /*!< EXTI 3 sources selection                                                  */
            uint32_t            : 16;
    } EXTISS0_b;
  } ;

  union {
    __IOM uint32_t EXTISS1;                     /*!< EXTI sources selection register 1                                         */

    struct {
      __IOM uint32_t EXTI4_SS   : 4;            /*!< EXTI 4 sources selection                                                  */
      __IOM uint32_t EXTI5_SS   : 4;            /*!< EXTI 5 sources selection                                                  */
      __IOM uint32_t EXTI6_SS   : 4;            /*!< EXTI 6 sources selection                                                  */
      __IOM uint32_t EXTI7_SS   : 4;            /*!< EXTI 7 sources selection                                                  */
            uint32_t            : 16;
    } EXTISS1_b;
  } ;

  union {
    __IOM uint32_t EXTISS2;                     /*!< EXTI sources selection register 2                                         */

    struct {
      __IOM uint32_t EXTI8_SS   : 4;            /*!< EXTI 8 sources selection                                                  */
      __IOM uint32_t EXTI9_SS   : 4;            /*!< EXTI 9 sources selection                                                  */
      __IOM uint32_t EXTI10_SS  : 4;            /*!< EXTI 10 sources selection                                                 */
      __IOM uint32_t EXTI11_SS  : 4;            /*!< EXTI 11 sources selection                                                 */
            uint32_t            : 16;
    } EXTISS2_b;
  } ;

  union {
    __IOM uint32_t EXTISS3;                     /*!< EXTI sources selection register 3                                         */

    struct {
      __IOM uint32_t EXTI12_SS  : 4;            /*!< EXTI 12 sources selection                                                 */
      __IOM uint32_t EXTI13_SS  : 4;            /*!< EXTI 13 sources selection                                                 */
      __IOM uint32_t EXTI14_SS  : 4;            /*!< EXTI 14 sources selection                                                 */
      __IOM uint32_t EXTI15_SS  : 4;            /*!< EXTI 15 sources selection                                                 */
            uint32_t            : 16;
    } EXTISS3_b;
  } ;

  union {
    __IOM uint32_t CFG2;                        /*!< System configuration register 2                                           */

    struct {
      __IOM uint32_t LOCKUP_LOCK : 1;           /*!< Cortex-M4 LOCKUP output lock                                              */
      __IOM uint32_t SRAM_PARITY_ERROR_LOCK : 1;/*!< SRAM parity check error lock                                              */
      __IOM uint32_t LVD_LOCK   : 1;            /*!< LVD lock                                                                  */
            uint32_t            : 5;
      __IOM uint32_t SRAM_PCEF  : 1;            /*!< SRAM parity check error flag                                              */
            uint32_t            : 23;
    } CFG2_b;
  } ;
  __IM  uint32_t  RESERVED1[57];

  union {
    __IOM uint32_t CPU_IRQ_LAT;                 /*!< IRQ Latency register                                                      */

    struct {
      __IOM uint32_t IRQ_LATENCY : 8;           /*!< specifies the minimum number of cycles between an interrupt               */
            uint32_t            : 24;
    } CPU_IRQ_LAT_b;
  } ;
} SYSCFG_Type;                                  /*!< Size = 260 (0x104)                                                        */



/* =========================================================================================================================== */
/* ================                                          TIMER0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Advanced-timers (TIMER0)
  */

typedef struct {                                /*!< TIMER0 Structure                                                          */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CEN        : 1;            /*!< Counter enable                                                            */
      __IOM uint32_t UPDIS      : 1;            /*!< Update disable                                                            */
      __IOM uint32_t UPS        : 1;            /*!< Update request source                                                     */
      __IOM uint32_t SPM        : 1;            /*!< One-pulse mode                                                            */
      __IOM uint32_t DIR        : 1;            /*!< Direction                                                                 */
      __IOM uint32_t CAM        : 2;            /*!< Center-aligned mode selection                                             */
      __IOM uint32_t ARSE       : 1;            /*!< Auto-reload preload enable                                                */
      __IOM uint32_t CKDIV      : 2;            /*!< Clock division                                                            */
            uint32_t            : 22;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t CCSE       : 1;            /*!< Commutation control shadow enable                                         */
            uint32_t            : 1;
      __IOM uint32_t CCUC       : 1;            /*!< Commutation control shadow register update control                        */
      __IOM uint32_t DMAS       : 1;            /*!< DMA request source selection                                              */
      __IOM uint32_t MMC        : 3;            /*!< Master mode control                                                       */
      __IOM uint32_t TI0S       : 1;            /*!< Channel 0 trigger input selection                                         */
      __IOM uint32_t ISO0       : 1;            /*!< Idle state of channel 0 output                                            */
      __IOM uint32_t ISO0N      : 1;            /*!< Idle state of channel 0 complementary output                              */
      __IOM uint32_t ISO1       : 1;            /*!< Idle state of channel 1 output                                            */
      __IOM uint32_t ISO1N      : 1;            /*!< Idle state of channel 1 complementary output                              */
      __IOM uint32_t ISO2       : 1;            /*!< Idle state of channel 2 output                                            */
      __IOM uint32_t ISO2N      : 1;            /*!< Idle state of channel 2 complementary output                              */
      __IOM uint32_t ISO3       : 1;            /*!< Idle state of channel 3 output                                            */
            uint32_t            : 17;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t SMCFG;                       /*!< slave mode configuration register                                         */

    struct {
      __IOM uint32_t SMC        : 3;            /*!< Slave mode selection                                                      */
      __IOM uint32_t OCRC       : 1;            /*!< Trigger selection                                                         */
      __IOM uint32_t TRGS       : 3;            /*!< Trigger selection                                                         */
      __IOM uint32_t MSM        : 1;            /*!< Master/Slave mode                                                         */
      __IOM uint32_t ETFC       : 4;            /*!< External trigger filter                                                   */
      __IOM uint32_t ETPSC      : 2;            /*!< External trigger prescaler                                                */
      __IOM uint32_t SCM1       : 1;            /*!< Part of SMC for enable External clock mode1                               */
      __IOM uint32_t ETP        : 1;            /*!< External trigger polarity                                                 */
            uint32_t            : 16;
    } SMCFG_b;
  } ;

  union {
    __IOM uint32_t DMAINTEN;                    /*!< DMA/Interrupt enable register                                             */

    struct {
      __IOM uint32_t UPIE       : 1;            /*!< Update interrupt enable                                                   */
      __IOM uint32_t CH0IE      : 1;            /*!< Capture/Compare 0 interrupt enable                                        */
      __IOM uint32_t CH1IE      : 1;            /*!< Capture/Compare 1 interrupt enable                                        */
      __IOM uint32_t CH2IE      : 1;            /*!< Capture/Compare 2 interrupt enable                                        */
      __IOM uint32_t CH3IE      : 1;            /*!< Capture/Compare 3 interrupt enable                                        */
      __IOM uint32_t CMTIE      : 1;            /*!< COM interrupt enable                                                      */
      __IOM uint32_t TRGIE      : 1;            /*!< Trigger interrupt enable                                                  */
      __IOM uint32_t BRKIE      : 1;            /*!< Break interrupt enable                                                    */
      __IOM uint32_t UPDEN      : 1;            /*!< Update DMA request enable                                                 */
      __IOM uint32_t CH0DEN     : 1;            /*!< Capture/Compare 0 DMA request enable                                      */
      __IOM uint32_t CH1DEN     : 1;            /*!< Capture/Compare 1 DMA request enable                                      */
      __IOM uint32_t CH2DEN     : 1;            /*!< Capture/Compare 2 DMA request enable                                      */
      __IOM uint32_t CH3DEN     : 1;            /*!< Capture/Compare 3 DMA request enable                                      */
      __IOM uint32_t CMTDEN     : 1;            /*!< Reserved                                                                  */
      __IOM uint32_t TRGDEN     : 1;            /*!< Trigger DMA request enable                                                */
            uint32_t            : 17;
    } DMAINTEN_b;
  } ;

  union {
    __IOM uint32_t INTF;                        /*!< status register                                                           */

    struct {
      __IOM uint32_t UPIF       : 1;            /*!< Update interrupt flag                                                     */
      __IOM uint32_t CH0IF      : 1;            /*!< Capture/compare 0 interrupt flag                                          */
      __IOM uint32_t CH1IF      : 1;            /*!< Capture/Compare 1 interrupt flag                                          */
      __IOM uint32_t CH2IF      : 1;            /*!< Capture/Compare 2 interrupt flag                                          */
      __IOM uint32_t CH3IF      : 1;            /*!< Capture/Compare 3 interrupt flag                                          */
      __IOM uint32_t CMTIF      : 1;            /*!< COM interrupt flag                                                        */
      __IOM uint32_t TRGIF      : 1;            /*!< Trigger interrupt flag                                                    */
      __IOM uint32_t BRKIF      : 1;            /*!< Break interrupt flag                                                      */
            uint32_t            : 1;
      __IOM uint32_t CH0OF      : 1;            /*!< Channel 0 over capture flag                                               */
      __IOM uint32_t CH1OF      : 1;            /*!< Channel 1 over capture flag                                               */
      __IOM uint32_t CH2OF      : 1;            /*!< Channel 2 over capture flag                                               */
      __IOM uint32_t CH3OF      : 1;            /*!< Channel 3 over capture flag                                               */
            uint32_t            : 19;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t SWEVG;                       /*!< Software event generation register                                        */

    struct {
      __OM  uint32_t UPG        : 1;            /*!< Update event generation                                                   */
      __OM  uint32_t CH0G       : 1;            /*!< Channel 0's capture or compare event generation                           */
      __OM  uint32_t CH1G       : 1;            /*!< Channel 1's capture or compare event generation                           */
      __OM  uint32_t CH2G       : 1;            /*!< Channel 2's capture or compare event generation                           */
      __OM  uint32_t CH3G       : 1;            /*!< Channel 3's capture or compare event generation                           */
      __OM  uint32_t CMTG       : 1;            /*!< Channel commutation event generation                                      */
      __OM  uint32_t TRGG       : 1;            /*!< Trigger event generation                                                  */
      __OM  uint32_t BRKG       : 1;            /*!< Break event generation                                                    */
            uint32_t            : 24;
    } SWEVG_b;
  } ;

  union {
    union {
      __IOM uint32_t CHCTL0_Output;             /*!< capture/compare mode register (output mode)                               */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Channel 0 I/O mode selection                                              */
        __IOM uint32_t CH0COMFEN : 1;           /*!< Channel 0 output compare fast enable                                      */
        __IOM uint32_t CH0COMSEN : 1;           /*!< Channel 0 compare output shadow enable                                    */
        __IOM uint32_t CH0COMCTL : 3;           /*!< Channel 0 compare output control                                          */
        __IOM uint32_t CH0COMCEN : 1;           /*!< Channel 0 output compare clear enable                                     */
        __IOM uint32_t CH1MS    : 2;            /*!< Channel 1 mode selection                                                  */
        __IOM uint32_t CH1COMFEN : 1;           /*!< Channel 1 output compare fast enable                                      */
        __IOM uint32_t CH1COMSEN : 1;           /*!< Channel 1 output compare shadow enable                                    */
        __IOM uint32_t CH1COMCTL : 3;           /*!< Channel 1 compare output control                                          */
        __IOM uint32_t CH1COMCEN : 1;           /*!< Channel 1 output compare clear enable                                     */
              uint32_t          : 16;
      } CHCTL0_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL0_Input;              /*!< capture/compare mode register 0 (input mode)                              */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Channel 0 mode selection                                                  */
        __IOM uint32_t CH0CAPPSC : 2;           /*!< Channel 0 input capture prescaler                                         */
        __IOM uint32_t CH0CAPFLT : 4;           /*!< Channel 0 input capture filter control                                    */
        __IOM uint32_t CH1MS    : 2;            /*!< Channel 1 mode selection                                                  */
        __IOM uint32_t CH1CAPPSC : 2;           /*!< Channel 1 input capture prescaler                                         */
        __IOM uint32_t CH1CAPFLT : 4;           /*!< Channel 1 input capture filter control                                    */
              uint32_t          : 16;
      } CHCTL0_Input_b;
    } ;
  };

  union {
    union {
      __IOM uint32_t CHCTL1_Output;             /*!< capture/compare mode register (output mode)                               */

      struct {
        __IOM uint32_t CH2MS    : 2;            /*!< Channel 2 I/O mode selection                                              */
        __IOM uint32_t CH2COMFEN : 1;           /*!< Channel 2 output compare fast enable                                      */
        __IOM uint32_t CH2COMSEN : 1;           /*!< Channel 2 compare output shadow enable                                    */
        __IOM uint32_t CH2COMCTL : 3;           /*!< Channel 2 compare output control                                          */
        __IOM uint32_t CH2COMCEN : 1;           /*!< Channel 2 output compare clear enable                                     */
        __IOM uint32_t CH3MS    : 2;            /*!< Channel 3 mode selection                                                  */
        __IOM uint32_t CH3COMFEN : 1;           /*!< Channel 3 output compare fast enable                                      */
        __IOM uint32_t CH3COMSEN : 1;           /*!< Channel 3 output compare shadow enable                                    */
        __IOM uint32_t CH3COMCTL : 3;           /*!< Channel 3 compare output control                                          */
        __IOM uint32_t CH3COMCEN : 1;           /*!< Channel 3 output compare clear enable                                     */
              uint32_t          : 16;
      } CHCTL1_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL1_Input;              /*!< capture/compare mode register 1 (input mode)                              */

      struct {
        __IOM uint32_t CH2MS    : 2;            /*!< Capture/compare 2 selection                                               */
        __IOM uint32_t CH2CAPPSC : 2;           /*!< Input capture 2 prescaler                                                 */
        __IOM uint32_t CH2CAPFLT : 4;           /*!< Input capture 2 filter                                                    */
        __IOM uint32_t CH3MS    : 2;            /*!< Channel 3 mode selection                                                  */
        __IOM uint32_t CH3CAPPSC : 2;           /*!< Channel 3 input capture prescaler                                         */
        __IOM uint32_t CH3CAPFLT : 4;           /*!< Channel 3 input capture filter control                                    */
              uint32_t          : 16;
      } CHCTL1_Input_b;
    } ;
  };

  union {
    __IOM uint32_t CHCTL2;                      /*!< capture/compare enable register                                           */

    struct {
      __IOM uint32_t CH0EN      : 1;            /*!< Capture/Compare 0 output enable                                           */
      __IOM uint32_t CH0P       : 1;            /*!< Capture/Compare 0 output Polarity                                         */
      __IOM uint32_t CH0NEN     : 1;            /*!< Capture/Compare 0 complementary output enable                             */
      __IOM uint32_t CH0NP      : 1;            /*!< Capture/Compare 0 complementary output Polarity                                         */
      __IOM uint32_t CH1EN      : 1;            /*!< Capture/Compare 1 output enable                                           */
      __IOM uint32_t CH1P       : 1;            /*!< Capture/Compare 1 output Polarity                                         */
      __IOM uint32_t CH1NEN     : 1;            /*!< Capture/Compare 1 complementary output enable                             */
      __IOM uint32_t CH1NP      : 1;            /*!< Capture/Compare 1 complementary output Polarity                                         */
      __IOM uint32_t CH2EN      : 1;            /*!< Capture/Compare 2 output enable                                           */
      __IOM uint32_t CH2P       : 1;            /*!< Capture/Compare 2 output Polarity                                         */
      __IOM uint32_t CH2NEN     : 1;            /*!< Capture/Compare 2 complementary output enable                             */
      __IOM uint32_t CH2NP      : 1;            /*!< Capture/Compare 2 complementary output Polarity                                         */
      __IOM uint32_t CH3EN      : 1;            /*!< Capture/Compare 3 output enable                                           */
      __IOM uint32_t CH3P       : 1;            /*!< Capture/Compare 3 output Polarity                                         */
            uint32_t            : 18;
    } CHCTL2_b;
  } ;

  union {
    __IOM uint32_t CNT;                         /*!< counter                                                                   */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< counter value                                                             */
            uint32_t            : 16;
    } CNT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler                                                                 */

    struct {
      __IOM uint32_t PSC        : 16;           /*!< Prescaler value                                                           */
            uint32_t            : 16;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t CAR;                         /*!< auto-reload register                                                      */

    struct {
      __IOM uint32_t CARL       : 16;           /*!< Counter auto reload value                                                 */
            uint32_t            : 16;
    } CAR_b;
  } ;

  union {
    __IOM uint32_t CREP;                        /*!< repetition counter register                                               */

    struct {
      __IOM uint32_t CREP       : 8;            /*!< Repetition counter value                                                  */
            uint32_t            : 24;
    } CREP_b;
  } ;

  union {
    __IOM uint32_t CH0CV;                       /*!< capture/compare register 0                                                */

    struct {
      __IOM uint32_t CH0VAL     : 16;           /*!< Capture/Compare 0 value                                                   */
            uint32_t            : 16;
    } CH0CV_b;
  } ;

  union {
    __IOM uint32_t CH1CV;                       /*!< capture/compare register 1                                                */

    struct {
      __IOM uint32_t CH1VAL     : 16;           /*!< Capture/Compare 1 value                                                   */
            uint32_t            : 16;
    } CH1CV_b;
  } ;

  union {
    __IOM uint32_t CH2CV;                       /*!< capture/compare register 2                                                */

    struct {
      __IOM uint32_t CH2VAL     : 16;           /*!< Capture/Compare 2 value                                                   */
            uint32_t            : 16;
    } CH2CV_b;
  } ;

  union {
    __IOM uint32_t CH3CV;                       /*!< capture/compare register 3                                                */

    struct {
      __IOM uint32_t CH3VAL     : 16;           /*!< Capture/Compare 3 value                                                   */
            uint32_t            : 16;
    } CH3CV_b;
  } ;

  union {
    __IOM uint32_t CCHP;                        /*!< channel complementary protection register                                 */

    struct {
      __IOM uint32_t DTCFG      : 8;            /*!< Dead-time generator setup                                                 */
      __IOM uint32_t PROT       : 2;            /*!< Lock configuration                                                        */
      __IOM uint32_t IOS        : 1;            /*!< Off-state selection for Idle mode                                         */
      __IOM uint32_t ROS        : 1;            /*!< Off-state selection for Run mode                                          */
      __IOM uint32_t BRKEN      : 1;            /*!< Break enable                                                              */
      __IOM uint32_t BRKP       : 1;            /*!< Break polarity                                                            */
      __IOM uint32_t OAEN       : 1;            /*!< Automatic output enable                                                   */
      __IOM uint32_t POEN       : 1;            /*!< Main output enable                                                        */
            uint32_t            : 16;
    } CCHP_b;
  } ;

  union {
    __IOM uint32_t DMACFG;                      /*!< DMA configuration register                                                */

    struct {
      __IOM uint32_t DMATA      : 5;            /*!< DMA transfer access start address                                         */
            uint32_t            : 3;
      __IOM uint32_t DMATC      : 5;            /*!< DMA transfer count                                                        */
            uint32_t            : 19;
    } DMACFG_b;
  } ;

  union {
    __IOM uint32_t DMATB;                       /*!< DMA address for full transfer                                             */

    struct {
      __IOM uint32_t DMATB      : 16;           /*!< DMA register for burst accesses                                           */
            uint32_t            : 16;
    } DMATB_b;
  } ;
  __IM  uint32_t  RESERVED[43];

  union {
    __IOM uint32_t CFG;                         /*!< Configuration register                                                    */

    struct {
      __IOM uint32_t OUTSEL     : 1;            /*!< The output value selection                                                */
      __IOM uint32_t CHVSEL     : 1;            /*!< Write CHxVAL register selection                                           */
            uint32_t            : 30;
    } CFG_b;
  } ;
} TIMER_Type;                                  /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          TIMER2                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose-timers (TIMER2)
  */

typedef struct {                                /*!< TIMER2 Structure                                                          */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CEN        : 1;            /*!< Counter enable                                                            */
      __IOM uint32_t UPDIS      : 1;            /*!< Update disable                                                            */
      __IOM uint32_t UPS        : 1;            /*!< Update request source                                                     */
      __IOM uint32_t SPM        : 1;            /*!< One-pulse mode                                                            */
      __IOM uint32_t DIR        : 1;            /*!< Direction                                                                 */
      __IOM uint32_t CAM        : 2;            /*!< Center-aligned mode selection                                             */
      __IOM uint32_t ARSE       : 1;            /*!< Auto-reload preload enable                                                */
      __IOM uint32_t CKDIV      : 2;            /*!< Clock division                                                            */
            uint32_t            : 22;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
            uint32_t            : 3;
      __IOM uint32_t DMAS       : 1;            /*!< Capture/compare DMA selection                                             */
      __IOM uint32_t MMC        : 3;            /*!< Master mode selection                                                     */
      __IOM uint32_t TI0S       : 1;            /*!< TI0 selection                                                             */
            uint32_t            : 24;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t SMCFG;                       /*!< slave mode control register                                               */

    struct {
      __IOM uint32_t SMC        : 3;            /*!< Slave mode selection                                                      */
      __IOM uint32_t OCRC       : 1;            /*!< OCREF clear source selection                                              */
      __IOM uint32_t TRGS       : 3;            /*!< Trigger selection                                                         */
      __IOM uint32_t MSM        : 1;            /*!< Master/Slave mode                                                         */
      __IOM uint32_t ETFC       : 4;            /*!< External trigger filter                                                   */
      __IOM uint32_t ETPSC      : 2;            /*!< External trigger prescaler                                                */
      __IOM uint32_t SMC1       : 1;            /*!< External clock enable                                                     */
      __IOM uint32_t ETP        : 1;            /*!< External trigger polarity                                                 */
            uint32_t            : 16;
    } SMCFG_b;
  } ;

  union {
    __IOM uint32_t DMAINTEN;                    /*!< DMA/Interrupt enable register                                             */

    struct {
      __IOM uint32_t UPIE       : 1;            /*!< Update interrupt enable                                                   */
      __IOM uint32_t CH0IE      : 1;            /*!< Capture/Compare 0 interrupt enable                                        */
      __IOM uint32_t CH1IE      : 1;            /*!< Capture/Compare 1 interrupt enable                                        */
      __IOM uint32_t CH2IE      : 1;            /*!< Capture/Compare 2 interrupt enable                                        */
      __IOM uint32_t CH3IE      : 1;            /*!< Capture/Compare 3 interrupt enable                                        */
            uint32_t            : 1;
      __IOM uint32_t TRGIE      : 1;            /*!< Trigger interrupt enable                                                  */
            uint32_t            : 1;
      __IOM uint32_t UPDEN      : 1;            /*!< Update DMA request enable                                                 */
      __IOM uint32_t CH0DEN     : 1;            /*!< Capture/Compare 1 DMA request enable                                      */
      __IOM uint32_t CH1DEN     : 1;            /*!< Capture/Compare 1 DMA request enable                                      */
      __IOM uint32_t CH2DEN     : 1;            /*!< Capture/Compare 2 DMA request enable                                      */
      __IOM uint32_t CH3DEN     : 1;            /*!< Capture/Compare 3 DMA request enable                                      */
            uint32_t            : 1;
      __IOM uint32_t TRGDEN     : 1;            /*!< Trigger DMA request enable                                                */
            uint32_t            : 17;
    } DMAINTEN_b;
  } ;

  union {
    __IOM uint32_t INTF;                        /*!< interrupt flag register                                                   */

    struct {
      __IOM uint32_t UPIF       : 1;            /*!< Update interrupt flag                                                     */
      __IOM uint32_t CH0IF      : 1;            /*!< Capture/compare 0 interrupt flag                                          */
      __IOM uint32_t CH1IF      : 1;            /*!< Capture/Compare 1 interrupt flag                                          */
      __IOM uint32_t CH2IF      : 1;            /*!< Capture/Compare 2 interrupt flag                                          */
      __IOM uint32_t CH3IF      : 1;            /*!< Capture/Compare 3 interrupt flag                                          */
            uint32_t            : 1;
      __IOM uint32_t TRGIF      : 1;            /*!< Trigger interrupt flag                                                    */
            uint32_t            : 2;
      __IOM uint32_t CH0OF      : 1;            /*!< Capture/Compare 0 overcapture flag                                        */
      __IOM uint32_t CH1OF      : 1;            /*!< Capture/compare 1 overcapture flag                                        */
      __IOM uint32_t CH2OF      : 1;            /*!< Capture/Compare 2 overcapture flag                                        */
      __IOM uint32_t CH3OF      : 1;            /*!< Capture/Compare 3 overcapture flag                                        */
            uint32_t            : 19;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t SWEVG;                       /*!< event generation register                                                 */

    struct {
      __OM  uint32_t UPG        : 1;            /*!< Update generation                                                         */
      __OM  uint32_t CH0G       : 1;            /*!< Capture/compare 0 generation                                              */
      __OM  uint32_t CH1G       : 1;            /*!< Capture/compare 1 generation                                              */
      __OM  uint32_t CH2G       : 1;            /*!< Capture/compare 2 generation                                              */
      __OM  uint32_t CH3G       : 1;            /*!< Capture/compare 3 generation                                              */
            uint32_t            : 1;
      __OM  uint32_t TRGG       : 1;            /*!< Trigger generation                                                        */
            uint32_t            : 25;
    } SWEVG_b;
  } ;

  union {
    union {
      __IOM uint32_t CHCTL0_Output;             /*!< capture/compare mode register 0 (output mode)                             */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0COMFEN : 1;           /*!< Output compare 0 fast enable                                              */
        __IOM uint32_t CH0COMSEN : 1;           /*!< Output compare 0 preload enable                                           */
        __IOM uint32_t CH0COMCTL : 3;           /*!< Output compare 0 mode                                                     */
        __IOM uint32_t CH0COMCEN : 1;           /*!< Output compare 0 clear enable                                             */
        __IOM uint32_t CH1MS    : 2;            /*!< Capture/Compare 1 selection                                               */
        __IOM uint32_t CH1COMFEN : 1;           /*!< Output compare 1 fast enable                                              */
        __IOM uint32_t CH1COMSEN : 1;           /*!< Output compare 1 preload enable                                           */
        __IOM uint32_t CH1COMCTL : 3;           /*!< Output compare 1 mode                                                     */
        __IOM uint32_t CH1COMCEN : 1;           /*!< Output compare 1 clear enable                                             */
              uint32_t          : 16;
      } CHCTL0_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL0_Input;              /*!< capture/compare mode register 0 (input mode)                              */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0CAPPSC : 2;           /*!< Input capture 0 prescaler                                                 */
        __IOM uint32_t CH0CAPFLT : 4;           /*!< Input capture 0 filter                                                    */
        __IOM uint32_t CH1MS    : 2;            /*!< Capture/compare 1 selection                                               */
        __IOM uint32_t CH1CAPPSC : 2;           /*!< Input capture 1 prescaler                                                 */
        __IOM uint32_t CH1CAPFLT : 4;           /*!< Input capture 1 filter                                                    */
              uint32_t          : 16;
      } CHCTL0_Input_b;
    } ;
  };

  union {
    union {
      __IOM uint32_t CHCTL1_Output;             /*!< capture/compare mode register 1 (output mode)                             */

      struct {
        __IOM uint32_t CH2MS    : 2;            /*!< Capture/Compare 2 selection                                               */
        __IOM uint32_t CH2COMFEN : 1;           /*!< Output compare 2 fast enable                                              */
        __IOM uint32_t CH2COMSEN : 1;           /*!< Output compare 2 preload enable                                           */
        __IOM uint32_t CH2COMCTL : 3;           /*!< Output compare 2 mode                                                     */
        __IOM uint32_t CH2COMCEN : 1;           /*!< Output compare 2 clear enable                                             */
        __IOM uint32_t CH3MS    : 2;            /*!< Capture/Compare 3 selection                                               */
        __IOM uint32_t CH3COMFEN : 1;           /*!< Output compare 3 fast enable                                              */
        __IOM uint32_t CH3COMSEN : 1;           /*!< Output compare 3 preload enable                                           */
        __IOM uint32_t CH3COMCTL : 3;           /*!< Output compare 3 mode                                                     */
        __IOM uint32_t CH3COMCEN : 1;           /*!< Output compare 3 clear enable                                             */
              uint32_t          : 16;
      } CHCTL1_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL1_Input;              /*!< capture/compare mode register 1 (input mode)                              */

      struct {
        __IOM uint32_t CH2MS    : 2;            /*!< Capture/Compare 2 selection                                               */
        __IOM uint32_t CH2CAPPSC : 2;           /*!< Input capture 2 prescaler                                                 */
        __IOM uint32_t CH2CAPFLT : 4;           /*!< Input capture 2 filter                                                    */
        __IOM uint32_t CH3MS    : 2;            /*!< Capture/Compare 3 selection                                               */
        __IOM uint32_t CH3CAPPSC : 2;           /*!< Input capture 3 prescaler                                                 */
        __IOM uint32_t CH3CAPFLT : 4;           /*!< Input capture 3 filter                                                    */
              uint32_t          : 16;
      } CHCTL1_Input_b;
    } ;
  };

  union {
    __IOM uint32_t CHCTL2;                      /*!< capture/compare enable register                                           */

    struct {
      __IOM uint32_t CH0EN      : 1;            /*!< Capture/Compare 0 output enable                                           */
      __IOM uint32_t CH0P       : 1;            /*!< Capture/Compare 0 output Polarity                                         */
            uint32_t            : 1;
      __IOM uint32_t CH0NP      : 1;            /*!< Capture/Compare 0 output Polarity                                         */
      __IOM uint32_t CH1EN      : 1;            /*!< Capture/Compare 1 output enable                                           */
      __IOM uint32_t CH1P       : 1;            /*!< Capture/Compare 1 output Polarity                                         */
            uint32_t            : 1;
      __IOM uint32_t CH1NP      : 1;            /*!< Capture/Compare 1 output Polarity                                         */
      __IOM uint32_t CH2EN      : 1;            /*!< Capture/Compare 2 output enable                                           */
      __IOM uint32_t CH2P       : 1;            /*!< Capture/Compare 2 output Polarity                                         */
            uint32_t            : 1;
      __IOM uint32_t CH2NP      : 1;            /*!< Capture/Compare 2 output Polarity                                         */
      __IOM uint32_t CH3EN      : 1;            /*!< Capture/Compare 3 output enable                                           */
      __IOM uint32_t CH3P       : 1;            /*!< Capture/Compare 3 output Polarity                                         */
            uint32_t            : 1;
      __IOM uint32_t CH3NP      : 1;            /*!< Capture/Compare 3 output Polarity                                         */
            uint32_t            : 16;
    } CHCTL2_b;
  } ;

  union {
    __IOM uint32_t CNT;                         /*!< counter                                                                   */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< counter value                                                             */
            uint32_t            : 16;
    } CNT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler                                                                 */

    struct {
      __IOM uint32_t PSC        : 16;           /*!< Prescaler value                                                           */
            uint32_t            : 16;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t CAR;                         /*!< auto-reload register                                                      */

    struct {
      __IOM uint32_t CARL       : 16;           /*!< Low Auto-reload value                                                     */
            uint32_t            : 16;
    } CAR_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t CH0CV;                       /*!< capture/compare register 1                                                */

    struct {
      __IOM uint32_t CH0VAL     : 16;           /*!< Low Capture/Compare 1 value                                               */
            uint32_t            : 16;
    } CH0CV_b;
  } ;

  union {
    __IOM uint32_t CH1CV;                       /*!< capture/compare register 2                                                */

    struct {
      __IOM uint32_t CH1VAL     : 16;           /*!< Low Capture/Compare 2 value                                               */
            uint32_t            : 16;
    } CH1CV_b;
  } ;

  union {
    __IOM uint32_t CH2CV;                       /*!< capture/compare register 2                                                */

    struct {
      __IOM uint32_t CH2VAL     : 16;           /*!< High Capture/Compare value (TIM2 only)                                    */
            uint32_t            : 16;
    } CH2CV_b;
  } ;

  union {
    __IOM uint32_t CH3CV;                       /*!< capture/compare register 3                                                */

    struct {
      __IOM uint32_t CH3VAL     : 16;           /*!< High Capture/Compare value (TIM2 only)                                    */
            uint32_t            : 16;
    } CH3CV_b;
  } ;
  __IM  uint32_t  RESERVED1;

  union {
    __IOM uint32_t DMACFG;                      /*!< DMA control register                                                      */

    struct {
      __IOM uint32_t DMATA      : 5;            /*!< DMA base address                                                          */
            uint32_t            : 3;
      __IOM uint32_t DMATC      : 5;            /*!< DMA burst length                                                          */
            uint32_t            : 19;
    } DMACFG_b;
  } ;

  union {
    __IOM uint32_t DMATB;                       /*!< DMA address for full transfer                                             */

    struct {
      __IOM uint32_t DMATB      : 16;           /*!< DMA register for burst accesses                                           */
            uint32_t            : 16;
    } DMATB_b;
  } ;
  __IM  uint32_t  RESERVED2[43];

  union {
    __IOM uint32_t CFG;                         /*!< Configuration                                                             */

    struct {
            uint32_t            : 1;
      __IOM uint32_t CHVSEL     : 1;            /*!< Write CHxVAL register selection                                           */
            uint32_t            : 30;
    } CFG_b;
  } ;
} TIMER2_Type;                                  /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          TIMER5                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Basic-timers (TIMER5)
  */

typedef struct {                                /*!< TIMER5 Structure                                                          */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CEN        : 1;            /*!< Counter enable                                                            */
      __IOM uint32_t UPDIS      : 1;            /*!< Update disable                                                            */
      __IOM uint32_t UPS        : 1;            /*!< Update request source                                                     */
      __IOM uint32_t SPM        : 1;            /*!< One-pulse mode                                                            */
            uint32_t            : 3;
      __IOM uint32_t ARSE       : 1;            /*!< Auto-reload preload enable                                                */
            uint32_t            : 24;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
            uint32_t            : 4;
      __IOM uint32_t MMC        : 3;            /*!< Master mode selection                                                     */
            uint32_t            : 25;
    } CTL1_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t DMAINTEN;                    /*!< DMA/Interrupt enable register                                             */

    struct {
      __IOM uint32_t UPIE       : 1;            /*!< Update interrupt enable                                                   */
            uint32_t            : 7;
      __IOM uint32_t UPDEN      : 1;            /*!< Update DMA request enable                                                 */
            uint32_t            : 23;
    } DMAINTEN_b;
  } ;

  union {
    __IOM uint32_t INTF;                        /*!< status register                                                           */

    struct {
      __IOM uint32_t UPIF       : 1;            /*!< Update interrupt flag                                                     */
            uint32_t            : 31;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t SWEVG;                       /*!< event generation register                                                 */

    struct {
      __OM  uint32_t UPG        : 1;            /*!< Update generation                                                         */
            uint32_t            : 31;
    } SWEVG_b;
  } ;
  __IM  uint32_t  RESERVED1[3];

  union {
    __IOM uint32_t CNT;                         /*!< counter                                                                   */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< Low counter value                                                         */
            uint32_t            : 16;
    } CNT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler                                                                 */

    struct {
      __IOM uint32_t PSC        : 16;           /*!< Prescaler value                                                           */
            uint32_t            : 16;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t CAR;                         /*!< auto-reload register                                                      */

    struct {
      __IOM uint32_t CARL       : 16;           /*!< Low Auto-reload value                                                     */
            uint32_t            : 16;
    } CAR_b;
  } ;
} TIMER5_Type;                                  /*!< Size = 48 (0x30)                                                          */



/* =========================================================================================================================== */
/* ================                                          TIMER13                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose-timers (TIMER13)
  */

typedef struct {                                /*!< TIMER13 Structure                                                         */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t CEN        : 1;            /*!< Counter enable                                                            */
      __IOM uint32_t UPDIS      : 1;            /*!< Update disable                                                            */
      __IOM uint32_t UPS        : 1;            /*!< Update request source                                                     */
            uint32_t            : 4;
      __IOM uint32_t ARSE       : 1;            /*!< Auto-reload preload enable                                                */
      __IOM uint32_t CKDIV      : 2;            /*!< Clock division                                                            */
            uint32_t            : 22;
    } CTL0_b;
  } ;
  __IM  uint32_t  RESERVED[2];

  union {
    __IOM uint32_t DMAINTEN;                    /*!< DMA/Interrupt enable register                                             */

    struct {
      __IOM uint32_t UPIE       : 1;            /*!< Update interrupt enable                                                   */
      __IOM uint32_t CH0IE      : 1;            /*!< Capture/Compare 0 interrupt enable                                        */
            uint32_t            : 30;
    } DMAINTEN_b;
  } ;

  union {
    __IOM uint32_t INTF;                        /*!< interrupt flag register                                                   */

    struct {
      __IOM uint32_t UPIF       : 1;            /*!< Update interrupt flag                                                     */
      __IOM uint32_t CH0IF      : 1;            /*!< Capture/compare 0 interrupt flag                                          */
            uint32_t            : 7;
      __IOM uint32_t CH0OF      : 1;            /*!< Capture/Compare 0 overcapture flag                                        */
            uint32_t            : 22;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t SWEVG;                       /*!< event generation register                                                 */

    struct {
      __OM  uint32_t UPG        : 1;            /*!< Update generation                                                         */
      __OM  uint32_t CH0G       : 1;            /*!< Capture/compare 0 generation                                              */
            uint32_t            : 30;
    } SWEVG_b;
  } ;

  union {
    union {
      __IOM uint32_t CHCTL0_Output;             /*!< capture/compare mode register (output mode)                               */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0COMFEN : 1;           /*!< Output compare 0 fast enable                                              */
        __IOM uint32_t CH0COMSEN : 1;           /*!< Output Compare 0 preload enable                                           */
        __IOM uint32_t CH0COMCTL : 3;           /*!< Output Compare 0 mode                                                     */
              uint32_t          : 25;
      } CHCTL0_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL0_Input;              /*!< capture/compare mode register (input mode)                                */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0CAPPSC : 2;           /*!< Input capture 0 prescaler                                                 */
        __IOM uint32_t CH0CAPFLT : 4;           /*!< Input capture 0 filter                                                    */
              uint32_t          : 24;
      } CHCTL0_Input_b;
    } ;
  };
  __IM  uint32_t  RESERVED1;

  union {
    __IOM uint32_t CHCTL2;                      /*!< capture/compare enable register                                           */

    struct {
      __IOM uint32_t CH0EN      : 1;            /*!< Capture/Compare 1 output enable                                           */
      __IOM uint32_t CH0P       : 1;            /*!< Capture/Compare 0 output Polarity                                         */
            uint32_t            : 1;
      __IOM uint32_t CH0NP      : 1;            /*!< Capture/Compare 0 output Polarity                                         */
            uint32_t            : 28;
    } CHCTL2_b;
  } ;

  union {
    __IOM uint32_t CNT;                         /*!< counter                                                                   */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< counter value                                                             */
            uint32_t            : 16;
    } CNT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler                                                                 */

    struct {
      __IOM uint32_t PSC        : 16;           /*!< Prescaler value                                                           */
            uint32_t            : 16;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t CAR;                         /*!< auto-reload register                                                      */

    struct {
      __IOM uint32_t CARL       : 16;           /*!< Auto-reload value                                                         */
            uint32_t            : 16;
    } CAR_b;
  } ;
  __IM  uint32_t  RESERVED2;

  union {
    __IOM uint32_t CH0CV;                       /*!< capture/compare register 0                                                */

    struct {
      __IOM uint32_t CH0VAL     : 16;           /*!< Capture/Compare 1 value                                                   */
            uint32_t            : 16;
    } CH0CV_b;
  } ;
  __IM  uint32_t  RESERVED3[6];

  union {
    __IOM uint32_t IRMP;                        /*!< channel input remap register                                              */

    struct {
      __IOM uint32_t CI0_RMP    : 2;            /*!< Timer input 0 remap                                                       */
            uint32_t            : 30;
    } IRMP_b;
  } ;
  __IM  uint32_t  RESERVED4[42];

  union {
    __IOM uint32_t CFG;                         /*!< configuration register                                                    */

    struct {
            uint32_t            : 1;
      __IOM uint32_t CHVSEL     : 1;            /*!< Write CHxVAL register selection                                           */
            uint32_t            : 30;
    } CFG_b;
  } ;
} TIMER13_Type;                                 /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          TIMER14                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose-timers (TIMER14)
  */

typedef struct {                                /*!< TIMER14 Structure                                                         */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CEN        : 1;            /*!< Counter enable                                                            */
      __IOM uint32_t UPDIS      : 1;            /*!< Update disable                                                            */
      __IOM uint32_t UPS        : 1;            /*!< Update request source                                                     */
      __IOM uint32_t SPM        : 1;            /*!< One-pulse mode                                                            */
            uint32_t            : 3;
      __IOM uint32_t ARSE       : 1;            /*!< Auto-reload preload enable                                                */
      __IOM uint32_t CKDIV      : 2;            /*!< Clock division                                                            */
            uint32_t            : 22;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t CCSE       : 1;            /*!< Capture/compare preloaded control                                         */
            uint32_t            : 1;
      __IOM uint32_t CCUC       : 1;            /*!< Capture/compare control update selection                                  */
      __IOM uint32_t DMAS       : 1;            /*!< Capture/compare DMA selection                                             */
      __IOM uint32_t MMC        : 3;            /*!< Master mode selection                                                     */
            uint32_t            : 1;
      __IOM uint32_t ISO0       : 1;            /*!< Output Idle state 0                                                       */
      __IOM uint32_t ISO0N      : 1;            /*!< Output Idle state 0                                                       */
      __IOM uint32_t ISO1       : 1;            /*!< Output Idle state 1                                                       */
            uint32_t            : 21;
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t SMCFG;                       /*!< slave mode configuration register                                         */

    struct {
      __IOM uint32_t SMC        : 3;            /*!< Slave mode selection                                                      */
            uint32_t            : 1;
      __IOM uint32_t TRGS       : 3;            /*!< Trigger selection                                                         */
      __IOM uint32_t MSM        : 1;            /*!< Master/Slave mode                                                         */
            uint32_t            : 24;
    } SMCFG_b;
  } ;

  union {
    __IOM uint32_t DMAINTEN;                    /*!< DMA/Interrupt enable register                                             */

    struct {
      __IOM uint32_t UPIE       : 1;            /*!< Update interrupt enable                                                   */
      __IOM uint32_t CH0IE      : 1;            /*!< Capture/Compare 1 interrupt enable                                        */
      __IOM uint32_t CH1IE      : 1;            /*!< Capture/Compare 2 interrupt enable                                        */
            uint32_t            : 2;
      __IOM uint32_t CMTIE      : 1;            /*!< COM interrupt enable                                                      */
      __IOM uint32_t TRGIE      : 1;            /*!< Trigger interrupt enable                                                  */
      __IOM uint32_t BRKIE      : 1;            /*!< Break interrupt enable                                                    */
      __IOM uint32_t UPDEN      : 1;            /*!< Update DMA request enable                                                 */
      __IOM uint32_t CH0DEN     : 1;            /*!< Capture/Compare 0 DMA request enable                                      */
      __IOM uint32_t CH1DEN     : 1;            /*!< Capture/Compare 1 DMA request enable                                      */
            uint32_t            : 2;
      __IOM uint32_t CMTDEN     : 1;            /*!< Commutation DMA request enable                                            */
      __IOM uint32_t TRGDEN     : 1;            /*!< Trigger DMA request enable                                                */
            uint32_t            : 17;
    } DMAINTEN_b;
  } ;

  union {
    __IOM uint32_t INTF;                        /*!< interrupt flag register                                                   */

    struct {
      __IOM uint32_t UPIF       : 1;            /*!< Update interrupt flag                                                     */
      __IOM uint32_t CH0IF      : 1;            /*!< Capture/compare 0 interrupt flag                                          */
      __IOM uint32_t CH1IF      : 1;            /*!< Capture/Compare 1 interrupt flag                                          */
            uint32_t            : 2;
      __IOM uint32_t CMTIF      : 1;            /*!< COM interrupt flag                                                        */
      __IOM uint32_t TRGIF      : 1;            /*!< Trigger interrupt flag                                                    */
      __IOM uint32_t BRKIF      : 1;            /*!< Break interrupt flag                                                      */
            uint32_t            : 1;
      __IOM uint32_t CH0OF      : 1;            /*!< Capture/Compare 0 overcapture flag                                        */
      __IOM uint32_t CH1OF      : 1;            /*!< Capture/compare 1 overcapture flag                                        */
            uint32_t            : 21;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t SWEVG;                       /*!< event generation register                                                 */

    struct {
      __OM  uint32_t UPG        : 1;            /*!< Update generation                                                         */
      __OM  uint32_t CH0G       : 1;            /*!< Capture/compare 0 generation                                              */
      __OM  uint32_t CH1G       : 1;            /*!< Capture/compare 1 generation                                              */
            uint32_t            : 2;
      __OM  uint32_t CMTG       : 1;            /*!< Capture/Compare control update generation                                 */
      __OM  uint32_t TRGG       : 1;            /*!< Trigger generation                                                        */
      __OM  uint32_t BRKG       : 1;            /*!< Break generation                                                          */
            uint32_t            : 24;
    } SWEVG_b;
  } ;

  union {
    union {
      __IOM uint32_t CHCTL0_Output;             /*!< capture/compare mode register (output mode)                               */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0COMFEN : 1;           /*!< Output Compare 0 fast enable                                              */
        __IOM uint32_t CH0COMSEN : 1;           /*!< Output Compare 0 preload enable                                           */
        __IOM uint32_t CH0COMCTL : 3;           /*!< Output Compare 0 mode                                                     */
              uint32_t          : 1;
        __IOM uint32_t CH1MS    : 2;            /*!< Capture/Compare 1 selection                                               */
        __IOM uint32_t CH1COMFEN : 1;           /*!< Output Compare 1 fast enable                                              */
        __IOM uint32_t CH1COMSEN : 1;           /*!< Output Compare 1 preload enable                                           */
        __IOM uint32_t CH1COMCTL : 3;           /*!< Output Compare 1 mode                                                     */
              uint32_t          : 17;
      } CHCTL0_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL0_Input;              /*!< capture/compare mode register 0 (input mode)                              */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0CAPPSC : 2;           /*!< Input capture 0 prescaler                                                 */
        __IOM uint32_t CH0CAPFLT : 4;           /*!< Input capture 0 filter                                                    */
        __IOM uint32_t CH1MS    : 2;            /*!< Capture/Compare 1 selection                                               */
        __IOM uint32_t CH1CAPPSC : 2;           /*!< Input capture 1 prescaler                                                 */
        __IOM uint32_t CH1CAPFLT : 4;           /*!< Input capture 1 filter                                                    */
              uint32_t          : 16;
      } CHCTL0_Input_b;
    } ;
  };
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t CHCTL2;                      /*!< capture/compare enable register                                           */

    struct {
      __IOM uint32_t CH0EN      : 1;            /*!< Capture/Compare 0 output enable                                           */
      __IOM uint32_t CH0P       : 1;            /*!< Capture/Compare 0 output Polarity                                         */
      __IOM uint32_t CH0NEN     : 1;            /*!< Capture/Compare 0 complementary output enable                             */
      __IOM uint32_t CH0NP      : 1;            /*!< Capture/Compare 0 output Polarity                                         */
      __IOM uint32_t CH1EN      : 1;            /*!< Capture/Compare 1 output enable                                           */
      __IOM uint32_t CH1P       : 1;            /*!< Capture/Compare 1 output Polarity                                         */
            uint32_t            : 1;
      __IOM uint32_t CH1NP      : 1;            /*!< Capture/Compare 1 output Polarity                                         */
            uint32_t            : 24;
    } CHCTL2_b;
  } ;

  union {
    __IOM uint32_t CNT;                         /*!< counter                                                                   */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< counter value                                                             */
            uint32_t            : 16;
    } CNT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler                                                                 */

    struct {
      __IOM uint32_t PSC        : 16;           /*!< Prescaler value                                                           */
            uint32_t            : 16;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t CAR;                         /*!< auto-reload register                                                      */

    struct {
      __IOM uint32_t CARL       : 16;           /*!< Auto-reload value                                                         */
            uint32_t            : 16;
    } CAR_b;
  } ;

  union {
    __IOM uint32_t CREP;                        /*!< repetition counter register                                               */

    struct {
      __IOM uint32_t CREP       : 8;            /*!< Repetition counter value                                                  */
            uint32_t            : 24;
    } CREP_b;
  } ;

  union {
    __IOM uint32_t CH0CV;                       /*!< capture/compare register 0                                                */

    struct {
      __IOM uint32_t CH0VAL     : 16;           /*!< Capture/Compare 0 value                                                   */
            uint32_t            : 16;
    } CH0CV_b;
  } ;

  union {
    __IOM uint32_t CH1CV;                       /*!< capture/compare register 1                                                */

    struct {
      __IOM uint32_t CH1VAL     : 16;           /*!< Capture/Compare 1 value                                                   */
            uint32_t            : 16;
    } CH1CV_b;
  } ;
  __IM  uint32_t  RESERVED1[2];

  union {
    __IOM uint32_t CCHP;                        /*!< break and dead-time register                                              */

    struct {
      __IOM uint32_t DTCFG      : 8;            /*!< Dead-time generator configure                                             */
      __IOM uint32_t PROT       : 2;            /*!< complementary register protect control                                    */
      __IOM uint32_t IOS        : 1;            /*!< Off-state selection for Idle mode                                         */
      __IOM uint32_t ROS        : 1;            /*!< Off-state selection for Run mode                                          */
      __IOM uint32_t BRKEN      : 1;            /*!< Break enable                                                              */
      __IOM uint32_t BRKP       : 1;            /*!< Break polarity                                                            */
      __IOM uint32_t OAEN       : 1;            /*!< Automatic output enable                                                   */
      __IOM uint32_t POEN       : 1;            /*!< Main output enable                                                        */
            uint32_t            : 16;
    } CCHP_b;
  } ;

  union {
    __IOM uint32_t DMACFG;                      /*!< DMA configuration register                                                */

    struct {
      __IOM uint32_t DMATA      : 5;            /*!< DMA base address                                                          */
            uint32_t            : 3;
      __IOM uint32_t DMATC      : 5;            /*!< DMA burst length                                                          */
            uint32_t            : 19;
    } DMACFG_b;
  } ;

  union {
    __IOM uint32_t DMATB;                       /*!< DMA transfer buffer register                                              */

    struct {
      __IOM uint32_t DMATB      : 16;           /*!< DMA register for burst accesses                                           */
            uint32_t            : 16;
    } DMATB_b;
  } ;
  __IM  uint32_t  RESERVED2[43];

  union {
    __IOM uint32_t CFG;                         /*!< configuration register                                                    */

    struct {
      __IOM uint32_t OUTSEL     : 1;            /*!< The output value selection                                                */
      __IOM uint32_t CHVSEL     : 1;            /*!< Write CHxVAL register selection                                           */
            uint32_t            : 30;
    } CFG_b;
  } ;
} TIMER14_Type;                                 /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          TIMER15                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief General-purpose-timers (TIMER15)
  */

typedef struct {                                /*!< TIMER15 Structure                                                         */

  union {
    __IOM uint32_t CTL0;                        /*!< control register 0                                                        */

    struct {
      __IOM uint32_t CEN        : 1;            /*!< Counter enable                                                            */
      __IOM uint32_t UPDIS      : 1;            /*!< Update disable                                                            */
      __IOM uint32_t UPS        : 1;            /*!< Update request source                                                     */
      __IOM uint32_t SPM        : 1;            /*!< One-pulse mode                                                            */
            uint32_t            : 3;
      __IOM uint32_t ARSE       : 1;            /*!< Auto-reload preload enable                                                */
      __IOM uint32_t CKDIV      : 2;            /*!< Clock division                                                            */
            uint32_t            : 22;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< control register 1                                                        */

    struct {
      __IOM uint32_t CCSE       : 1;            /*!< Capture/compare preloaded control                                         */
            uint32_t            : 1;
      __IOM uint32_t CCUC       : 1;            /*!< Capture/compare control update selection                                  */
      __IOM uint32_t DMAS       : 1;            /*!< Capture/compare DMA selection                                             */
            uint32_t            : 4;
      __IOM uint32_t ISO0       : 1;            /*!< Output Idle state 0                                                       */
      __IOM uint32_t ISO0N      : 1;            /*!< Output Idle state 0                                                       */
            uint32_t            : 22;
    } CTL1_b;
  } ;
  __IM  uint32_t  RESERVED;

  union {
    __IOM uint32_t DMAINTEN;                    /*!< DMA/Interrupt enable register                                             */

    struct {
      __IOM uint32_t UPIE       : 1;            /*!< Update interrupt enable                                                   */
      __IOM uint32_t CH0IE      : 1;            /*!< Capture/Compare 0 interrupt enable                                        */
            uint32_t            : 3;
      __IOM uint32_t CMTIE      : 1;            /*!< COM interrupt enable                                                      */
            uint32_t            : 1;
      __IOM uint32_t BRKIE      : 1;            /*!< Break interrupt enable                                                    */
      __IOM uint32_t UPDEN      : 1;            /*!< Update DMA request enable                                                 */
      __IOM uint32_t CH0DEN     : 1;            /*!< Capture/Compare 0 DMA request enable                                      */
            uint32_t            : 22;
    } DMAINTEN_b;
  } ;

  union {
    __IOM uint32_t INTF;                        /*!< interrupt flag register                                                   */

    struct {
      __IOM uint32_t UPIF       : 1;            /*!< Update interrupt flag                                                     */
      __IOM uint32_t CH0IF      : 1;            /*!< Capture/compare 0 interrupt flag                                          */
            uint32_t            : 3;
      __IOM uint32_t CMTIF      : 1;            /*!< COM interrupt flag                                                        */
            uint32_t            : 1;
      __IOM uint32_t BRKIF      : 1;            /*!< Break interrupt flag                                                      */
            uint32_t            : 1;
      __IOM uint32_t CH0OF      : 1;            /*!< Capture/Compare 0 overcapture flag                                        */
            uint32_t            : 22;
    } INTF_b;
  } ;

  union {
    __OM  uint32_t SWEVG;                       /*!< event generation register                                                 */

    struct {
      __OM  uint32_t UPG        : 1;            /*!< Update generation                                                         */
      __OM  uint32_t CH0G       : 1;            /*!< Capture/compare 0 generation                                              */
            uint32_t            : 3;
      __OM  uint32_t CMTG       : 1;            /*!< Capture/Compare control update generation                                 */
            uint32_t            : 1;
      __OM  uint32_t BRKG       : 1;            /*!< Break generation                                                          */
            uint32_t            : 24;
    } SWEVG_b;
  } ;

  union {
    union {
      __IOM uint32_t CHCTL0_Output;             /*!< capture/compare mode register (output mode)                               */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0COMFEN : 1;           /*!< Output Compare 0 fast enable                                              */
        __IOM uint32_t CH0COMSEN : 1;           /*!< Output Compare 0 preload enable                                           */
        __IOM uint32_t CH0COMCTL : 3;           /*!< Output Compare 0 mode                                                     */
              uint32_t          : 25;
      } CHCTL0_Output_b;
    } ;

    union {
      __IOM uint32_t CHCTL0_Input;              /*!< capture/compare mode register 0 (input mode)                              */

      struct {
        __IOM uint32_t CH0MS    : 2;            /*!< Capture/Compare 0 selection                                               */
        __IOM uint32_t CH0CAPPSC : 2;           /*!< Input capture 0 prescaler                                                 */
        __IOM uint32_t CH0CAPFLT : 4;           /*!< Input capture 0 filter                                                    */
              uint32_t          : 24;
      } CHCTL0_Input_b;
    } ;
  };
  __IM  uint32_t  RESERVED1;

  union {
    __IOM uint32_t CHCTL2;                      /*!< capture/compare enable register                                           */

    struct {
      __IOM uint32_t CH0EN      : 1;            /*!< Capture/Compare 0 output enable                                           */
      __IOM uint32_t CH0P       : 1;            /*!< Capture/Compare 0 output Polarity                                         */
      __IOM uint32_t CH0NEN     : 1;            /*!< Capture/Compare 0 complementary output enable                             */
      __IOM uint32_t CH0NP      : 1;            /*!< Capture/Compare 0 output Polarity                                         */
            uint32_t            : 28;
    } CHCTL2_b;
  } ;

  union {
    __IOM uint32_t CNT;                         /*!< counter                                                                   */

    struct {
      __IOM uint32_t CNT        : 16;           /*!< counter value                                                             */
            uint32_t            : 16;
    } CNT_b;
  } ;

  union {
    __IOM uint32_t PSC;                         /*!< prescaler                                                                 */

    struct {
      __IOM uint32_t PSC        : 16;           /*!< Prescaler value                                                           */
            uint32_t            : 16;
    } PSC_b;
  } ;

  union {
    __IOM uint32_t CAR;                         /*!< auto-reload register                                                      */

    struct {
      __IOM uint32_t CARL       : 16;           /*!< Auto-reload value                                                         */
            uint32_t            : 16;
    } CAR_b;
  } ;

  union {
    __IOM uint32_t CREP;                        /*!< repetition counter register                                               */

    struct {
      __IOM uint32_t CREP       : 8;            /*!< Repetition counter value                                                  */
            uint32_t            : 24;
    } CREP_b;
  } ;

  union {
    __IOM uint32_t CH0CV;                       /*!< capture/compare register 0                                                */

    struct {
      __IOM uint32_t CH0VAL     : 16;           /*!< Capture/Compare 0 value                                                   */
            uint32_t            : 16;
    } CH0CV_b;
  } ;
  __IM  uint32_t  RESERVED2[3];

  union {
    __IOM uint32_t CCHP;                        /*!< break and dead-time register                                              */

    struct {
      __IOM uint32_t DTCFG      : 8;            /*!< Dead-time generator setup                                                 */
      __IOM uint32_t PROT       : 2;            /*!< complementary register protect control                                    */
      __IOM uint32_t IOS        : 1;            /*!< Off-state selection for Idle mode                                         */
      __IOM uint32_t ROS        : 1;            /*!< Off-state selection for Run mode                                          */
      __IOM uint32_t BRKEN      : 1;            /*!< Break enable                                                              */
      __IOM uint32_t BRKP       : 1;            /*!< Break polarity                                                            */
      __IOM uint32_t OAEN       : 1;            /*!< Automatic output enable                                                   */
      __IOM uint32_t POEN       : 1;            /*!< Main output enable                                                        */
            uint32_t            : 16;
    } CCHP_b;
  } ;

  union {
    __IOM uint32_t DMACFG;                      /*!< DMA configuration register                                                */

    struct {
      __IOM uint32_t DMATA      : 5;            /*!< DMA transfer access start address                                         */
            uint32_t            : 3;
      __IOM uint32_t DMATC      : 5;            /*!< DMA transfer count                                                        */
            uint32_t            : 19;
    } DMACFG_b;
  } ;

  union {
    __IOM uint32_t DMATB;                       /*!< DMA transfer buffer register                                              */

    struct {
      __IOM uint32_t DMATB      : 16;           /*!< DMA register for burst accesses                                           */
            uint32_t            : 16;
    } DMATB_b;
  } ;
  __IM  uint32_t  RESERVED3[43];

  union {
    __IOM uint32_t CFG;                         /*!< configuration register                                                    */

    struct {
      __IOM uint32_t OUTSEL     : 1;            /*!< The output value selection                                                */
      __IOM uint32_t CHVSEL     : 1;            /*!< Write CHxVAL register selection                                           */
            uint32_t            : 30;
    } CFG_b;
  } ;
} TIMER15_Type;                                 /*!< Size = 256 (0x100)                                                        */



/* =========================================================================================================================== */
/* ================                                          USART0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Universal synchronous asynchronous receiver
      transmitter (USART0)
  */

typedef struct {                                /*!< USART0 Structure                                                          */

  union {
    __IOM uint32_t CTL0;                        /*!< Control register 0                                                        */

    struct {
      __IOM uint32_t UEN        : 1;            /*!< USART enable                                                              */
      __IOM uint32_t UESM       : 1;            /*!< USART enable in Stop mode                                                 */
      __IOM uint32_t REN        : 1;            /*!< Receiver enable                                                           */
      __IOM uint32_t TEN        : 1;            /*!< Transmitter enable                                                        */
      __IOM uint32_t IDLEIE     : 1;            /*!< IDLE interrupt enable                                                     */
      __IOM uint32_t RBNEIE     : 1;            /*!< RXNE interrupt enable                                                     */
      __IOM uint32_t TCIE       : 1;            /*!< Transmission complete interrupt enable                                    */
      __IOM uint32_t TBEIE      : 1;            /*!< interrupt enable                                                          */
      __IOM uint32_t PERRIE     : 1;            /*!< PE interrupt enable                                                       */
      __IOM uint32_t PM         : 1;            /*!< Parity selection                                                          */
      __IOM uint32_t PCEN       : 1;            /*!< Parity control enable                                                     */
      __IOM uint32_t WM         : 1;            /*!< Receiver wakeup method                                                    */
      __IOM uint32_t WL         : 1;            /*!< Word length                                                               */
      __IOM uint32_t MEN        : 1;            /*!< Mute mode enable                                                          */
      __IOM uint32_t AMIE       : 1;            /*!< Character match interrupt enable                                          */
      __IOM uint32_t OVSMOD     : 1;            /*!< Oversampling mode                                                         */
      __IOM uint32_t DED        : 5;            /*!< Driver Enable deassertion time                                            */
      __IOM uint32_t DEA        : 5;            /*!< Driver Enable assertion time                                              */
      __IOM uint32_t RTIE       : 1;            /*!< Receiver timeout interrupt enable                                         */
      __IOM uint32_t EBIE       : 1;            /*!< End of Block interrupt enable                                             */
            uint32_t            : 4;
    } CTL0_b;
  } ;

  union {
    __IOM uint32_t CTL1;                        /*!< Control register 1                                                        */

    struct {
            uint32_t            : 4;
      __IOM uint32_t ADDM       : 1;            /*!< 7-bit Address Detection/4-bit Address Detection                           */
      __IOM uint32_t LBLEN      : 1;            /*!< LIN break detection length                                                */
      __IOM uint32_t LBDIE      : 1;            /*!< LIN break detection interrupt enable                                      */
            uint32_t            : 1;
      __IOM uint32_t CLEN       : 1;            /*!< Last bit clock pulse                                                      */
      __IOM uint32_t CPH        : 1;            /*!< Clock phase                                                               */
      __IOM uint32_t CPL        : 1;            /*!< Clock polarity                                                            */
      __IOM uint32_t CKEN       : 1;            /*!< Clock enable                                                              */
      __IOM uint32_t STB        : 2;            /*!< STOP bits                                                                 */
      __IOM uint32_t LMEN       : 1;            /*!< LIN mode enable                                                           */
      __IOM uint32_t STRP       : 1;            /*!< Swap TX/RX pins                                                           */
      __IOM uint32_t RINV       : 1;            /*!< RX pin active level inversion                                             */
      __IOM uint32_t TINV       : 1;            /*!< TX pin active level inversion                                             */
      __IOM uint32_t DINV       : 1;            /*!< Binary data inversion                                                     */
      __IOM uint32_t MSBF       : 1;            /*!< Most significant bit first                                                */
      __IOM uint32_t ABDEN      : 1;            /*!< Auto baud rate enable                                                     */
      __IOM uint32_t ABDM       : 2;            /*!< Auto baud rate mode                                                       */
      __IOM uint32_t RTEN       : 1;            /*!< Receiver timeout enable                                                   */
      __IOM uint32_t ADDR       : 8;            /*!< Address of the USART node                                                 */
    } CTL1_b;
  } ;

  union {
    __IOM uint32_t CTL2;                        /*!< Control register 2                                                        */

    struct {
      __IOM uint32_t ERRIE      : 1;            /*!< Error interrupt enable                                                    */
      __IOM uint32_t IREN       : 1;            /*!< IrDA mode enable                                                          */
      __IOM uint32_t IRLP       : 1;            /*!< IrDA low-power                                                            */
      __IOM uint32_t HDEN       : 1;            /*!< Half-duplex selection                                                     */
      __IOM uint32_t NKEN       : 1;            /*!< Smartcard NACK enable                                                     */
      __IOM uint32_t SCEN       : 1;            /*!< Smartcard mode enable                                                     */
      __IOM uint32_t DENR       : 1;            /*!< DMA enable receiver                                                       */
      __IOM uint32_t DENT       : 1;            /*!< DMA enable transmitter                                                    */
      __IOM uint32_t RTSEN      : 1;            /*!< RTS enable                                                                */
      __IOM uint32_t CTSEN      : 1;            /*!< CTS enable                                                                */
      __IOM uint32_t CTSIE      : 1;            /*!< CTS interrupt enable                                                      */
      __IOM uint32_t OSB        : 1;            /*!< One sample bit method enable                                              */
      __IOM uint32_t OVRD       : 1;            /*!< Overrun Disable                                                           */
      __IOM uint32_t DDRE       : 1;            /*!< DMA Disable on Reception Error                                            */
      __IOM uint32_t DEM        : 1;            /*!< Driver enable mode                                                        */
      __IOM uint32_t DEP        : 1;            /*!< Driver enable polarity selection                                          */
            uint32_t            : 1;
      __IOM uint32_t SCRTNUM    : 3;            /*!< Smartcard auto-retry count                                                */
      __IOM uint32_t WUM        : 2;            /*!< Wakeup from Stop mode interrupt flag selection                            */
      __IOM uint32_t WUIE       : 1;            /*!< Wakeup from Stop mode interrupt enable                                    */
            uint32_t            : 9;
    } CTL2_b;
  } ;

  union {
    __IOM uint32_t BAUD;                        /*!< Baud rate register                                                        */

    struct {
      __IOM uint32_t BRR_FRA    : 4;            /*!< integer of baud-rate divider                                              */
      __IOM uint32_t BRR_INT    : 12;           /*!< integer of baud-rate divider                                              */
            uint32_t            : 16;
    } BAUD_b;
  } ;

  union {
    __IOM uint32_t GP;                          /*!< Guard time and prescaler register                                         */

    struct {
      __IOM uint32_t PSC        : 8;            /*!< Prescaler value                                                           */
      __IOM uint32_t GUAT       : 8;            /*!< Guard time value                                                          */
            uint32_t            : 16;
    } GP_b;
  } ;

  union {
    __IOM uint32_t RT;                          /*!< Receiver timeout register                                                 */

    struct {
      __IOM uint32_t RT         : 24;           /*!< Receiver timeout value                                                    */
      __IOM uint32_t BL         : 8;            /*!< Block Length                                                              */
    } RT_b;
  } ;

  union {
    __OM  uint32_t CMD;                         /*!< Request register                                                          */

    struct {
      __OM  uint32_t ABDCMD     : 1;            /*!< Auto baud rate request                                                    */
      __OM  uint32_t SBKCMD     : 1;            /*!< Send break request                                                        */
      __OM  uint32_t MMCMD      : 1;            /*!< Mute mode request                                                         */
      __OM  uint32_t RXFCMD     : 1;            /*!< Receive data flush request                                                */
      __OM  uint32_t TXFCMD     : 1;            /*!< Transmit data flush request                                               */
            uint32_t            : 27;
    } CMD_b;
  } ;

  union {
    __IM  uint32_t STAT;                        /*!< Interrupt & status register                                               */

    struct {
      __IM  uint32_t PERR       : 1;            /*!< Parity error                                                              */
      __IM  uint32_t FERR       : 1;            /*!< Framing error                                                             */
      __IM  uint32_t NERR       : 1;            /*!< Noise detected flag                                                       */
      __IM  uint32_t ORERR      : 1;            /*!< Overrun error                                                             */
      __IM  uint32_t IDLEF      : 1;            /*!< Idle line detected                                                        */
      __IM  uint32_t RBNE       : 1;            /*!< Read data register not empty                                              */
      __IM  uint32_t TC         : 1;            /*!< Transmission complete                                                     */
      __IM  uint32_t TBE        : 1;            /*!< Transmit data register empty                                              */
      __IM  uint32_t LBDF       : 1;            /*!< LIN break detection flag                                                  */
      __IM  uint32_t CTSF       : 1;            /*!< CTS interrupt flag                                                        */
      __IM  uint32_t CTS        : 1;            /*!< CTS flag                                                                  */
      __IM  uint32_t RTF        : 1;            /*!< Receiver timeout                                                          */
      __IM  uint32_t EBF        : 1;            /*!< End of block flag                                                         */
            uint32_t            : 1;
      __IM  uint32_t ABDE       : 1;            /*!< Auto baud rate error                                                      */
      __IM  uint32_t ABDF       : 1;            /*!< Auto baud rate flag                                                       */
      __IM  uint32_t BSY        : 1;            /*!< Busy flag                                                                 */
      __IM  uint32_t AMF        : 1;            /*!< character match flag                                                      */
      __IM  uint32_t SBF        : 1;            /*!< Send break flag                                                           */
      __IM  uint32_t RWU        : 1;            /*!< Receiver wakeup from Mute mode                                            */
      __IM  uint32_t WUF        : 1;            /*!< Wakeup from Stop mode flag                                                */
      __IM  uint32_t TEA        : 1;            /*!< Transmit enable acknowledge flag                                          */
      __IM  uint32_t REA        : 1;            /*!< Receive enable acknowledge flag                                           */
            uint32_t            : 9;
    } STAT_b;
  } ;

  union {
    __OM  uint32_t INTC;                        /*!< Interrupt flag clear register                                             */

    struct {
      __OM  uint32_t PEC        : 1;            /*!< Parity error clear flag                                                   */
      __OM  uint32_t FEC        : 1;            /*!< Framing error clear flag                                                  */
      __OM  uint32_t NEC        : 1;            /*!< Noise detected clear flag                                                 */
      __OM  uint32_t OREC       : 1;            /*!< Overrun error clear flag                                                  */
      __OM  uint32_t IDLEC      : 1;            /*!< Idle line detected clear flag                                             */
            uint32_t            : 1;
      __OM  uint32_t TCC        : 1;            /*!< Transmission complete clear flag                                          */
            uint32_t            : 1;
      __OM  uint32_t LBDC       : 1;            /*!< LIN break detection clear flag                                            */
      __OM  uint32_t CTSC       : 1;            /*!< CTS clear flag                                                            */
            uint32_t            : 1;
      __OM  uint32_t RTC        : 1;            /*!< Receiver timeout clear flag                                               */
      __OM  uint32_t EBC        : 1;            /*!< End of timeout clear flag                                                 */
            uint32_t            : 4;
      __OM  uint32_t AMC        : 1;            /*!< Character match clear flag                                                */
            uint32_t            : 2;
      __OM  uint32_t WUC        : 1;            /*!< Wakeup from Stop mode clear flag                                          */
            uint32_t            : 11;
    } INTC_b;
  } ;

  union {
    __IM  uint32_t RDATA;                       /*!< Receive data register                                                     */

    struct {
      __IM  uint32_t RDATA      : 9;            /*!< Receive data value                                                        */
            uint32_t            : 23;
    } RDATA_b;
  } ;

  union {
    __IOM uint32_t TDATA;                       /*!< Transmit data register                                                    */

    struct {
      __IOM uint32_t TDATA      : 9;            /*!< Transmit data value                                                       */
            uint32_t            : 23;
    } TDATA_b;
  } ;
  __IM  uint32_t  RESERVED[37];

  union {
    __IOM uint32_t CHC;                         /*!< coherence control register                                                */

    struct {
      __IOM uint32_t HCM        : 1;            /*!< Hardware flow control coherence mode                                      */
            uint32_t            : 7;
      __IOM uint32_t EPERR      : 1;            /*!< Early parity error flag                                                   */
            uint32_t            : 23;
    } CHC_b;
  } ;
  __IM  uint32_t  RESERVED1[3];

  union {
    __IOM uint32_t RFCS;                        /*!< USART receive FIFO control and status register                            */

    struct {
      __IOM uint32_t ELNACK     : 1;            /*!< Early NKEN when smartcard mode is selected                                */
            uint32_t            : 7;
      __IOM uint32_t RFEN       : 1;            /*!< Receive FIFO enable                                                       */
      __IOM uint32_t RFFIE      : 1;            /*!< Receive FIFO full interrupt enable                                        */
      __IM  uint32_t RFE        : 1;            /*!< Receive FIFO empty flag                                                   */
      __IM  uint32_t RFF        : 1;            /*!< Receive FIFO full flag                                                    */
      __IM  uint32_t RFCNT      : 3;            /*!< Receive FIFO count number                                                 */
      __IOM uint32_t RFFINT     : 1;            /*!< Receive FIFO full interrupt flag                                          */
            uint32_t            : 16;
    } RFCS_b;
  } ;
} USART_Type;                                  /*!< Size = 212 (0xd4)                                                         */



/* =========================================================================================================================== */
/* ================                                           WWDGT                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief Window watchdog timer (WWDGT)
  */

typedef struct {                                /*!< WWDGT Structure                                                           */

  union {
    __IOM uint32_t CTL;                         /*!< Control register                                                          */

    struct {
      __IOM uint32_t CNT        : 7;            /*!< 7-bit counter                                                             */
      __IOM uint32_t WDGTEN     : 1;            /*!< Activation bit                                                            */
            uint32_t            : 24;
    } CTL_b;
  } ;

  union {
    __IOM uint32_t CFG;                         /*!< Configuration register                                                    */

    struct {
      __IOM uint32_t WIN        : 7;            /*!< 7-bit window value                                                        */
      __IOM uint32_t PSC        : 2;            /*!< Prescaler                                                                 */
      __IOM uint32_t EWIE       : 1;            /*!< Early wakeup interrupt                                                    */
            uint32_t            : 22;
    } CFG_b;
  } ;

  union {
    __IOM uint32_t STAT;                        /*!< Status register                                                           */

    struct {
      __IOM uint32_t EWIF       : 1;            /*!< Early wakeup interrupt flag                                               */
            uint32_t            : 31;
    } STAT_b;
  } ;
} WWDGT_Type;                                   /*!< Size = 12 (0xc)                                                           */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

// #define ADC_BASE                    0x40012400UL
// #define CMP_BASE                    0x4001001CUL
// #define CRC_BASE                    0x40023000UL
// #define DBGMCU_BASE                 0x40015800UL
// #define DMA_BASE                    0x40020000UL
// #define EXTI_BASE                   0x40010400UL
// #define FMC_BASE                    0x40022000UL
// #define FWDGT_BASE                  0x40003000UL
// #define GPIOA_BASE                  0x48000000UL
// #define GPIOB_BASE                  0x48000400UL
// #define GPIOC_BASE                  0x48000800UL
// #define GPIOF_BASE                  0x48001400UL
#define I2C0_BASE                   0x40005400UL
#define I2C1_BASE                   0x40005800UL
// #define NVIC_BASE                   0xE000E100UL
// #define PMU_BASE                    0x40007000UL
// #define RCU_BASE                    0x40021000UL
// #define RTC_BASE                    0x40002800UL
#define SPI0_BASE                   0x40013000UL
#define SPI1_BASE                   0x40003800UL
// #define SYSCFG_BASE                 0x40010000UL
#define TIMER0_BASE                 0x40012C00UL
#define TIMER2_BASE                 0x40000400UL
#define TIMER5_BASE                 0x40001000UL
#define TIMER13_BASE                0x40002000UL
#define TIMER14_BASE                0x40014000UL
#define TIMER15_BASE                0x40014400UL
#define TIMER16_BASE                0x40014800UL
#define USART0_BASE                 0x40013800UL
#define USART1_BASE                 0x40004400UL
// #define WWDGT_BASE                  0x40002C00UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define ADC                         ((ADC_Type*)               ADC_BASE)
#define CMP                         ((CMP_Type*)               CMP_BASE)
#define CRC                         ((CRC_Type*)               CRC_BASE)
#define DBGMCU                      ((DBGMCU_Type*)            DBGMCU_BASE)
#define DMA                         ((DMA_Type*)               DMA_BASE)
#define EXTI                        ((EXTI_Type*)              EXTI_BASE)
#define FMC                         ((FMC_Type*)               FMC_BASE)
#define FWDGT                       ((FWDGT_Type*)             FWDGT_BASE)
#define GPIOA                       ((GPIO_Type*)              GPIOA_BASE)
#define GPIOB                       ((GPIO_Type*)              GPIOB_BASE)
#define GPIOC                       ((GPIO_Type*)              GPIOC_BASE)
#define GPIOF                       ((GPIO_Type*)              GPIOF_BASE)
#define I2C0                        ((I2C_Type*)               I2C0_BASE)
#define I2C1                        ((I2C_Type*)               I2C1_BASE)
// #define NVIC                        ((NVIC_Type*)              NVIC_BASE)
#define PMU                         ((PMU_Type*)               PMU_BASE)
#define RCU                         ((RCU_Type*)               RCU_BASE)
#define RTC                         ((RTC_Type*)               RTC_BASE)
#define SPI0                        ((SPI_Type*)               SPI0_BASE)
#define SPI1                        ((SPI_Type*)               SPI1_BASE)
#define SYSCFG                      ((SYSCFG_Type*)            SYSCFG_BASE)
#define TIMER0                      ((TIMER_Type*)             TIMER0_BASE)
#define TIMER2                      ((TIMER_Type*)             TIMER2_BASE)
#define TIMER5                      ((TIMER_Type*)             TIMER5_BASE)
#define TIMER13                     ((TIMER_Type*)             TIMER13_BASE)
#define TIMER14                     ((TIMER_Type*)             TIMER14_BASE)
#define TIMER15                     ((TIMER_Type*)             TIMER15_BASE)
#define TIMER16                     ((TIMER_Type*)             TIMER16_BASE)
#define USART0                      ((USART_Type*)             USART0_BASE)
#define USART1                      ((USART_Type*)             USART1_BASE)
#define WWDGT                       ((WWDGT_Type*)             WWDGT_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================  End of section using anonymous unions  ========================================= */
#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  STAT  ========================================================== */
#define ADC_STAT_STRC_Pos                 (4UL)                     /*!< STRC (Bit 4)                                          */
#define ADC_STAT_STRC_Msk                 (0x10UL)                  /*!< STRC (Bitfield-Mask: 0x01)                            */
#define ADC_STAT_STIC_Pos                 (3UL)                     /*!< STIC (Bit 3)                                          */
#define ADC_STAT_STIC_Msk                 (0x8UL)                   /*!< STIC (Bitfield-Mask: 0x01)                            */
#define ADC_STAT_EOIC_Pos                 (2UL)                     /*!< EOIC (Bit 2)                                          */
#define ADC_STAT_EOIC_Msk                 (0x4UL)                   /*!< EOIC (Bitfield-Mask: 0x01)                            */
#define ADC_STAT_EOC_Pos                  (1UL)                     /*!< EOC (Bit 1)                                           */
#define ADC_STAT_EOC_Msk                  (0x2UL)                   /*!< EOC (Bitfield-Mask: 0x01)                             */
#define ADC_STAT_WDE_Pos                  (0UL)                     /*!< WDE (Bit 0)                                           */
#define ADC_STAT_WDE_Msk                  (0x1UL)                   /*!< WDE (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL0  ========================================================== */
#define ADC_CTL0_DRES_Pos                 (24UL)                    /*!< DRES (Bit 24)                                         */
#define ADC_CTL0_DRES_Msk                 (0x3000000UL)             /*!< DRES (Bitfield-Mask: 0x03)                            */
#define ADC_CTL0_RWDEN_Pos                (23UL)                    /*!< RWDEN (Bit 23)                                        */
#define ADC_CTL0_RWDEN_Msk                (0x800000UL)              /*!< RWDEN (Bitfield-Mask: 0x01)                           */
#define ADC_CTL0_IWDEN_Pos                (22UL)                    /*!< IWDEN (Bit 22)                                        */
#define ADC_CTL0_IWDEN_Msk                (0x400000UL)              /*!< IWDEN (Bitfield-Mask: 0x01)                           */
#define ADC_CTL0_DISNUM_Pos               (13UL)                    /*!< DISNUM (Bit 13)                                       */
#define ADC_CTL0_DISNUM_Msk               (0xe000UL)                /*!< DISNUM (Bitfield-Mask: 0x07)                          */
#define ADC_CTL0_DISIC_Pos                (12UL)                    /*!< DISIC (Bit 12)                                        */
#define ADC_CTL0_DISIC_Msk                (0x1000UL)                /*!< DISIC (Bitfield-Mask: 0x01)                           */
#define ADC_CTL0_DISRC_Pos                (11UL)                    /*!< DISRC (Bit 11)                                        */
#define ADC_CTL0_DISRC_Msk                (0x800UL)                 /*!< DISRC (Bitfield-Mask: 0x01)                           */
#define ADC_CTL0_ICA_Pos                  (10UL)                    /*!< ICA (Bit 10)                                          */
#define ADC_CTL0_ICA_Msk                  (0x400UL)                 /*!< ICA (Bitfield-Mask: 0x01)                             */
#define ADC_CTL0_WDSC_Pos                 (9UL)                     /*!< WDSC (Bit 9)                                          */
#define ADC_CTL0_WDSC_Msk                 (0x200UL)                 /*!< WDSC (Bitfield-Mask: 0x01)                            */
#define ADC_CTL0_SM_Pos                   (8UL)                     /*!< SM (Bit 8)                                            */
#define ADC_CTL0_SM_Msk                   (0x100UL)                 /*!< SM (Bitfield-Mask: 0x01)                              */
#define ADC_CTL0_EOICIE_Pos               (7UL)                     /*!< EOICIE (Bit 7)                                        */
#define ADC_CTL0_EOICIE_Msk               (0x80UL)                  /*!< EOICIE (Bitfield-Mask: 0x01)                          */
#define ADC_CTL0_WDEIE_Pos                (6UL)                     /*!< WDEIE (Bit 6)                                         */
#define ADC_CTL0_WDEIE_Msk                (0x40UL)                  /*!< WDEIE (Bitfield-Mask: 0x01)                           */
#define ADC_CTL0_EOCIE_Pos                (5UL)                     /*!< EOCIE (Bit 5)                                         */
#define ADC_CTL0_EOCIE_Msk                (0x20UL)                  /*!< EOCIE (Bitfield-Mask: 0x01)                           */
#define ADC_CTL0_WDCHSEL_Pos              (0UL)                     /*!< WDCHSEL (Bit 0)                                       */
#define ADC_CTL0_WDCHSEL_Msk              (0x1fUL)                  /*!< WDCHSEL (Bitfield-Mask: 0x1f)                         */
/* =========================================================  CTL1  ========================================================== */
#define ADC_CTL1_TSVREN_Pos               (23UL)                    /*!< TSVREN (Bit 23)                                       */
#define ADC_CTL1_TSVREN_Msk               (0x800000UL)              /*!< TSVREN (Bitfield-Mask: 0x01)                          */
#define ADC_CTL1_SWRCST_Pos               (22UL)                    /*!< SWRCST (Bit 22)                                       */
#define ADC_CTL1_SWRCST_Msk               (0x400000UL)              /*!< SWRCST (Bitfield-Mask: 0x01)                          */
#define ADC_CTL1_SWICST_Pos               (21UL)                    /*!< SWICST (Bit 21)                                       */
#define ADC_CTL1_SWICST_Msk               (0x200000UL)              /*!< SWICST (Bitfield-Mask: 0x01)                          */
#define ADC_CTL1_ETERC_Pos                (20UL)                    /*!< ETERC (Bit 20)                                        */
#define ADC_CTL1_ETERC_Msk                (0x100000UL)              /*!< ETERC (Bitfield-Mask: 0x01)                           */
#define ADC_CTL1_ETSRC_Pos                (17UL)                    /*!< ETSRC (Bit 17)                                        */
#define ADC_CTL1_ETSRC_Msk                (0xe0000UL)               /*!< ETSRC (Bitfield-Mask: 0x07)                           */
#define ADC_CTL1_ETEIC_Pos                (15UL)                    /*!< ETEIC (Bit 15)                                        */
#define ADC_CTL1_ETEIC_Msk                (0x8000UL)                /*!< ETEIC (Bitfield-Mask: 0x01)                           */
#define ADC_CTL1_ETSIC_Pos                (12UL)                    /*!< ETSIC (Bit 12)                                        */
#define ADC_CTL1_ETSIC_Msk                (0x7000UL)                /*!< ETSIC (Bitfield-Mask: 0x07)                           */
#define ADC_CTL1_DAL_Pos                  (11UL)                    /*!< DAL (Bit 11)                                          */
#define ADC_CTL1_DAL_Msk                  (0x800UL)                 /*!< DAL (Bitfield-Mask: 0x01)                             */
#define ADC_CTL1_DMA_Pos                  (8UL)                     /*!< DMA (Bit 8)                                           */
#define ADC_CTL1_DMA_Msk                  (0x100UL)                 /*!< DMA (Bitfield-Mask: 0x01)                             */
#define ADC_CTL1_RSTCLB_Pos               (3UL)                     /*!< RSTCLB (Bit 3)                                        */
#define ADC_CTL1_RSTCLB_Msk               (0x8UL)                   /*!< RSTCLB (Bitfield-Mask: 0x01)                          */
#define ADC_CTL1_CLB_Pos                  (2UL)                     /*!< CLB (Bit 2)                                           */
#define ADC_CTL1_CLB_Msk                  (0x4UL)                   /*!< CLB (Bitfield-Mask: 0x01)                             */
#define ADC_CTL1_CTN_Pos                  (1UL)                     /*!< CTN (Bit 1)                                           */
#define ADC_CTL1_CTN_Msk                  (0x2UL)                   /*!< CTN (Bitfield-Mask: 0x01)                             */
#define ADC_CTL1_ADCON_Pos                (0UL)                     /*!< ADCON (Bit 0)                                         */
#define ADC_CTL1_ADCON_Msk                (0x1UL)                   /*!< ADCON (Bitfield-Mask: 0x01)                           */
/* ========================================================  SAMPT0  ========================================================= */
#define ADC_SAMPT0_SPT16_Pos              (18UL)                    /*!< SPT16 (Bit 18)                                        */
#define ADC_SAMPT0_SPT16_Msk              (0x1c0000UL)              /*!< SPT16 (Bitfield-Mask: 0x07)                           */
#define ADC_SAMPT0_SPT17_Pos              (21UL)                    /*!< SPT17 (Bit 21)                                        */
#define ADC_SAMPT0_SPT17_Msk              (0xe00000UL)              /*!< SPT17 (Bitfield-Mask: 0x07)                           */
/* ========================================================  SAMPT1  ========================================================= */
#define ADC_SAMPT1_SPT0_Pos               (0UL)                     /*!< SPT0 (Bit 0)                                          */
#define ADC_SAMPT1_SPT0_Msk               (0x7UL)                   /*!< SPT0 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT1_Pos               (3UL)                     /*!< SPT1 (Bit 3)                                          */
#define ADC_SAMPT1_SPT1_Msk               (0x38UL)                  /*!< SPT1 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT2_Pos               (6UL)                     /*!< SPT2 (Bit 6)                                          */
#define ADC_SAMPT1_SPT2_Msk               (0x1c0UL)                 /*!< SPT2 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT3_Pos               (9UL)                     /*!< SPT3 (Bit 9)                                          */
#define ADC_SAMPT1_SPT3_Msk               (0xe00UL)                 /*!< SPT3 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT4_Pos               (12UL)                    /*!< SPT4 (Bit 12)                                         */
#define ADC_SAMPT1_SPT4_Msk               (0x7000UL)                /*!< SPT4 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT5_Pos               (15UL)                    /*!< SPT5 (Bit 15)                                         */
#define ADC_SAMPT1_SPT5_Msk               (0x38000UL)               /*!< SPT5 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT6_Pos               (18UL)                    /*!< SPT6 (Bit 18)                                         */
#define ADC_SAMPT1_SPT6_Msk               (0x1c0000UL)              /*!< SPT6 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT7_Pos               (21UL)                    /*!< SPT7 (Bit 21)                                         */
#define ADC_SAMPT1_SPT7_Msk               (0xe00000UL)              /*!< SPT7 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT8_Pos               (24UL)                    /*!< SPT8 (Bit 24)                                         */
#define ADC_SAMPT1_SPT8_Msk               (0x7000000UL)             /*!< SPT8 (Bitfield-Mask: 0x07)                            */
#define ADC_SAMPT1_SPT9_Pos               (27UL)                    /*!< SPT9 (Bit 27)                                         */
#define ADC_SAMPT1_SPT9_Msk               (0x38000000UL)            /*!< SPT9 (Bitfield-Mask: 0x07)                            */
/* =========================================================  IOFF0  ========================================================= */
#define ADC_IOFF0_IOFF_Pos                (0UL)                     /*!< IOFF (Bit 0)                                          */
#define ADC_IOFF0_IOFF_Msk                (0xfffUL)                 /*!< IOFF (Bitfield-Mask: 0xfff)                           */
/* =========================================================  IOFF1  ========================================================= */
#define ADC_IOFF1_IOFF_Pos                (0UL)                     /*!< IOFF (Bit 0)                                          */
#define ADC_IOFF1_IOFF_Msk                (0xfffUL)                 /*!< IOFF (Bitfield-Mask: 0xfff)                           */
/* =========================================================  IOFF2  ========================================================= */
#define ADC_IOFF2_IOFF_Pos                (0UL)                     /*!< IOFF (Bit 0)                                          */
#define ADC_IOFF2_IOFF_Msk                (0xfffUL)                 /*!< IOFF (Bitfield-Mask: 0xfff)                           */
/* =========================================================  IOFF3  ========================================================= */
#define ADC_IOFF3_IOFF_Pos                (0UL)                     /*!< IOFF (Bit 0)                                          */
#define ADC_IOFF3_IOFF_Msk                (0xfffUL)                 /*!< IOFF (Bitfield-Mask: 0xfff)                           */
/* =========================================================  WDHT  ========================================================== */
#define ADC_WDHT_WDHT_Pos                 (0UL)                     /*!< WDHT (Bit 0)                                          */
#define ADC_WDHT_WDHT_Msk                 (0xfffUL)                 /*!< WDHT (Bitfield-Mask: 0xfff)                           */
/* =========================================================  WDLT  ========================================================== */
#define ADC_WDLT_WDLT_Pos                 (0UL)                     /*!< WDLT (Bit 0)                                          */
#define ADC_WDLT_WDLT_Msk                 (0xfffUL)                 /*!< WDLT (Bitfield-Mask: 0xfff)                           */
/* =========================================================  RSQ0  ========================================================== */
#define ADC_RSQ0_RL_Pos                   (20UL)                    /*!< RL (Bit 20)                                           */
#define ADC_RSQ0_RL_Msk                   (0xf00000UL)              /*!< RL (Bitfield-Mask: 0x0f)                              */
#define ADC_RSQ0_RSQ15_Pos                (15UL)                    /*!< RSQ15 (Bit 15)                                        */
#define ADC_RSQ0_RSQ15_Msk                (0xf8000UL)               /*!< RSQ15 (Bitfield-Mask: 0x1f)                           */
#define ADC_RSQ0_RSQ14_Pos                (10UL)                    /*!< RSQ14 (Bit 10)                                        */
#define ADC_RSQ0_RSQ14_Msk                (0x7c00UL)                /*!< RSQ14 (Bitfield-Mask: 0x1f)                           */
#define ADC_RSQ0_RSQ13_Pos                (5UL)                     /*!< RSQ13 (Bit 5)                                         */
#define ADC_RSQ0_RSQ13_Msk                (0x3e0UL)                 /*!< RSQ13 (Bitfield-Mask: 0x1f)                           */
#define ADC_RSQ0_RSQ12_Pos                (0UL)                     /*!< RSQ12 (Bit 0)                                         */
#define ADC_RSQ0_RSQ12_Msk                (0x1fUL)                  /*!< RSQ12 (Bitfield-Mask: 0x1f)                           */
/* =========================================================  RSQ1  ========================================================== */
#define ADC_RSQ1_RSQ11_Pos                (25UL)                    /*!< RSQ11 (Bit 25)                                        */
#define ADC_RSQ1_RSQ11_Msk                (0x3e000000UL)            /*!< RSQ11 (Bitfield-Mask: 0x1f)                           */
#define ADC_RSQ1_RSQ10_Pos                (20UL)                    /*!< RSQ10 (Bit 20)                                        */
#define ADC_RSQ1_RSQ10_Msk                (0x1f00000UL)             /*!< RSQ10 (Bitfield-Mask: 0x1f)                           */
#define ADC_RSQ1_RSQ9_Pos                 (15UL)                    /*!< RSQ9 (Bit 15)                                         */
#define ADC_RSQ1_RSQ9_Msk                 (0xf8000UL)               /*!< RSQ9 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ1_RSQ8_Pos                 (10UL)                    /*!< RSQ8 (Bit 10)                                         */
#define ADC_RSQ1_RSQ8_Msk                 (0x7c00UL)                /*!< RSQ8 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ1_RSQ7_Pos                 (5UL)                     /*!< RSQ7 (Bit 5)                                          */
#define ADC_RSQ1_RSQ7_Msk                 (0x3e0UL)                 /*!< RSQ7 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ1_RSQ6_Pos                 (0UL)                     /*!< RSQ6 (Bit 0)                                          */
#define ADC_RSQ1_RSQ6_Msk                 (0x1fUL)                  /*!< RSQ6 (Bitfield-Mask: 0x1f)                            */
/* =========================================================  RSQ2  ========================================================== */
#define ADC_RSQ2_RSQ5_Pos                 (25UL)                    /*!< RSQ5 (Bit 25)                                         */
#define ADC_RSQ2_RSQ5_Msk                 (0x3e000000UL)            /*!< RSQ5 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ2_RSQ4_Pos                 (20UL)                    /*!< RSQ4 (Bit 20)                                         */
#define ADC_RSQ2_RSQ4_Msk                 (0x1f00000UL)             /*!< RSQ4 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ2_RSQ3_Pos                 (15UL)                    /*!< RSQ3 (Bit 15)                                         */
#define ADC_RSQ2_RSQ3_Msk                 (0xf8000UL)               /*!< RSQ3 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ2_RSQ2_Pos                 (10UL)                    /*!< RSQ2 (Bit 10)                                         */
#define ADC_RSQ2_RSQ2_Msk                 (0x7c00UL)                /*!< RSQ2 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ2_RSQ1_Pos                 (5UL)                     /*!< RSQ1 (Bit 5)                                          */
#define ADC_RSQ2_RSQ1_Msk                 (0x3e0UL)                 /*!< RSQ1 (Bitfield-Mask: 0x1f)                            */
#define ADC_RSQ2_RSQ0_Pos                 (0UL)                     /*!< RSQ0 (Bit 0)                                          */
#define ADC_RSQ2_RSQ0_Msk                 (0x1fUL)                  /*!< RSQ0 (Bitfield-Mask: 0x1f)                            */
/* ==========================================================  ISQ  ========================================================== */
#define ADC_ISQ_IL_Pos                    (20UL)                    /*!< IL (Bit 20)                                           */
#define ADC_ISQ_IL_Msk                    (0x300000UL)              /*!< IL (Bitfield-Mask: 0x03)                              */
#define ADC_ISQ_ISQ3_Pos                  (15UL)                    /*!< ISQ3 (Bit 15)                                         */
#define ADC_ISQ_ISQ3_Msk                  (0xf8000UL)               /*!< ISQ3 (Bitfield-Mask: 0x1f)                            */
#define ADC_ISQ_ISQ2_Pos                  (10UL)                    /*!< ISQ2 (Bit 10)                                         */
#define ADC_ISQ_ISQ2_Msk                  (0x7c00UL)                /*!< ISQ2 (Bitfield-Mask: 0x1f)                            */
#define ADC_ISQ_ISQ1_Pos                  (5UL)                     /*!< ISQ1 (Bit 5)                                          */
#define ADC_ISQ_ISQ1_Msk                  (0x3e0UL)                 /*!< ISQ1 (Bitfield-Mask: 0x1f)                            */
#define ADC_ISQ_ISQ0_Pos                  (0UL)                     /*!< ISQ0 (Bit 0)                                          */
#define ADC_ISQ_ISQ0_Msk                  (0x1fUL)                  /*!< ISQ0 (Bitfield-Mask: 0x1f)                            */
/* ========================================================  IDATA0  ========================================================= */
#define ADC_IDATA0_IDATAn_Pos             (0UL)                     /*!< IDATAn (Bit 0)                                        */
#define ADC_IDATA0_IDATAn_Msk             (0xffffUL)                /*!< IDATAn (Bitfield-Mask: 0xffff)                        */
/* ========================================================  IDATA1  ========================================================= */
#define ADC_IDATA1_IDATAn_Pos             (0UL)                     /*!< IDATAn (Bit 0)                                        */
#define ADC_IDATA1_IDATAn_Msk             (0xffffUL)                /*!< IDATAn (Bitfield-Mask: 0xffff)                        */
/* ========================================================  IDATA2  ========================================================= */
#define ADC_IDATA2_IDATAn_Pos             (0UL)                     /*!< IDATAn (Bit 0)                                        */
#define ADC_IDATA2_IDATAn_Msk             (0xffffUL)                /*!< IDATAn (Bitfield-Mask: 0xffff)                        */
/* ========================================================  IDATA3  ========================================================= */
#define ADC_IDATA3_IDATAn_Pos             (0UL)                     /*!< IDATAn (Bit 0)                                        */
#define ADC_IDATA3_IDATAn_Msk             (0xffffUL)                /*!< IDATAn (Bitfield-Mask: 0xffff)                        */
/* =========================================================  RDATA  ========================================================= */
#define ADC_RDATA_RDATA_Pos               (0UL)                     /*!< RDATA (Bit 0)                                         */
#define ADC_RDATA_RDATA_Msk               (0xffffUL)                /*!< RDATA (Bitfield-Mask: 0xffff)                         */
/* =======================================================  OVSAMPCTL  ======================================================= */
#define ADC_OVSAMPCTL_TOVS_Pos            (9UL)                     /*!< TOVS (Bit 9)                                          */
#define ADC_OVSAMPCTL_TOVS_Msk            (0x200UL)                 /*!< TOVS (Bitfield-Mask: 0x01)                            */
#define ADC_OVSAMPCTL_OVSS_Pos            (5UL)                     /*!< OVSS (Bit 5)                                          */
#define ADC_OVSAMPCTL_OVSS_Msk            (0x1e0UL)                 /*!< OVSS (Bitfield-Mask: 0x0f)                            */
#define ADC_OVSAMPCTL_OVSR_Pos            (2UL)                     /*!< OVSR (Bit 2)                                          */
#define ADC_OVSAMPCTL_OVSR_Msk            (0x1cUL)                  /*!< OVSR (Bitfield-Mask: 0x07)                            */
#define ADC_OVSAMPCTL_OVSEN_Pos           (0UL)                     /*!< OVSEN (Bit 0)                                         */
#define ADC_OVSAMPCTL_OVSEN_Msk           (0x1UL)                   /*!< OVSEN (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                            CMP                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CS  =========================================================== */
#define CMP_CS_CMPEN_Pos                  (0UL)                     /*!< CMPEN (Bit 0)                                         */
#define CMP_CS_CMPEN_Msk                  (0x1UL)                   /*!< CMPEN (Bitfield-Mask: 0x01)                           */
#define CMP_CS_CMPSW_Pos                  (1UL)                     /*!< CMPSW (Bit 1)                                         */
#define CMP_CS_CMPSW_Msk                  (0x2UL)                   /*!< CMPSW (Bitfield-Mask: 0x01)                           */
#define CMP_CS_CMPM_Pos                   (2UL)                     /*!< CMPM (Bit 2)                                          */
#define CMP_CS_CMPM_Msk                   (0xcUL)                   /*!< CMPM (Bitfield-Mask: 0x03)                            */
#define CMP_CS_CMPMSEL_Pos                (4UL)                     /*!< CMPMSEL (Bit 4)                                       */
#define CMP_CS_CMPMSEL_Msk                (0x70UL)                  /*!< CMPMSEL (Bitfield-Mask: 0x07)                         */
#define CMP_CS_CMPOSEL_Pos                (8UL)                     /*!< CMPOSEL (Bit 8)                                       */
#define CMP_CS_CMPOSEL_Msk                (0x700UL)                 /*!< CMPOSEL (Bitfield-Mask: 0x07)                         */
#define CMP_CS_CMPPL_Pos                  (11UL)                    /*!< CMPPL (Bit 11)                                        */
#define CMP_CS_CMPPL_Msk                  (0x800UL)                 /*!< CMPPL (Bitfield-Mask: 0x01)                           */
#define CMP_CS_CMPHST_Pos                 (12UL)                    /*!< CMPHST (Bit 12)                                       */
#define CMP_CS_CMPHST_Msk                 (0x3000UL)                /*!< CMPHST (Bitfield-Mask: 0x03)                          */
#define CMP_CS_CMPO_Pos                   (14UL)                    /*!< CMPO (Bit 14)                                         */
#define CMP_CS_CMPO_Msk                   (0x4000UL)                /*!< CMPO (Bitfield-Mask: 0x01)                            */
#define CMP_CS_CMPLK_Pos                  (15UL)                    /*!< CMPLK (Bit 15)                                        */
#define CMP_CS_CMPLK_Msk                  (0x8000UL)                /*!< CMPLK (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  DATA  ========================================================== */
#define CRC_DATA_DATA_Pos                 (0UL)                     /*!< DATA (Bit 0)                                          */
#define CRC_DATA_DATA_Msk                 (0xffffffffUL)            /*!< DATA (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  FDATA  ========================================================= */
#define CRC_FDATA_FDATA_Pos               (0UL)                     /*!< FDATA (Bit 0)                                         */
#define CRC_FDATA_FDATA_Msk               (0xffUL)                  /*!< FDATA (Bitfield-Mask: 0xff)                           */
/* ==========================================================  CTL  ========================================================== */
#define CRC_CTL_RST_Pos                   (0UL)                     /*!< RST (Bit 0)                                           */
#define CRC_CTL_RST_Msk                   (0x1UL)                   /*!< RST (Bitfield-Mask: 0x01)                             */
#define CRC_CTL_PS_Pos                    (3UL)                     /*!< PS (Bit 3)                                            */
#define CRC_CTL_PS_Msk                    (0x18UL)                  /*!< PS (Bitfield-Mask: 0x03)                              */
#define CRC_CTL_REV_I_Pos                 (5UL)                     /*!< REV_I (Bit 5)                                         */
#define CRC_CTL_REV_I_Msk                 (0x60UL)                  /*!< REV_I (Bitfield-Mask: 0x03)                           */
#define CRC_CTL_REV_O_Pos                 (7UL)                     /*!< REV_O (Bit 7)                                         */
#define CRC_CTL_REV_O_Msk                 (0x80UL)                  /*!< REV_O (Bitfield-Mask: 0x01)                           */
/* =========================================================  IDATA  ========================================================= */
#define CRC_IDATA_IDATA_Pos               (0UL)                     /*!< IDATA (Bit 0)                                         */
#define CRC_IDATA_IDATA_Msk               (0xffffffffUL)            /*!< IDATA (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  POLY  ========================================================== */
#define CRC_POLY_POLY_Pos                 (0UL)                     /*!< POLY (Bit 0)                                          */
#define CRC_POLY_POLY_Msk                 (0xffffffffUL)            /*!< POLY (Bitfield-Mask: 0xffffffff)                      */


/* =========================================================================================================================== */
/* ================                                          DBGMCU                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  ID  =========================================================== */
#define DBGMCU_ID_ID_CODE_Pos             (0UL)                     /*!< ID_CODE (Bit 0)                                       */
#define DBGMCU_ID_ID_CODE_Msk             (0xffffffffUL)            /*!< ID_CODE (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  CTL0  ========================================================== */
#define DBGMCU_CTL0_SLP_HOLD_Pos          (0UL)                     /*!< SLP_HOLD (Bit 0)                                      */
#define DBGMCU_CTL0_SLP_HOLD_Msk          (0x1UL)                   /*!< SLP_HOLD (Bitfield-Mask: 0x01)                        */
#define DBGMCU_CTL0_DSLP_HOLD_Pos         (1UL)                     /*!< DSLP_HOLD (Bit 1)                                     */
#define DBGMCU_CTL0_DSLP_HOLD_Msk         (0x2UL)                   /*!< DSLP_HOLD (Bitfield-Mask: 0x01)                       */
#define DBGMCU_CTL0_STB_HOLD_Pos          (2UL)                     /*!< STB_HOLD (Bit 2)                                      */
#define DBGMCU_CTL0_STB_HOLD_Msk          (0x4UL)                   /*!< STB_HOLD (Bitfield-Mask: 0x01)                        */
#define DBGMCU_CTL0_FWDGT_HOLD_Pos        (8UL)                     /*!< FWDGT_HOLD (Bit 8)                                    */
#define DBGMCU_CTL0_FWDGT_HOLD_Msk        (0x100UL)                 /*!< FWDGT_HOLD (Bitfield-Mask: 0x01)                      */
#define DBGMCU_CTL0_WWDGT_HOLD_Pos        (9UL)                     /*!< WWDGT_HOLD (Bit 9)                                    */
#define DBGMCU_CTL0_WWDGT_HOLD_Msk        (0x200UL)                 /*!< WWDGT_HOLD (Bitfield-Mask: 0x01)                      */
#define DBGMCU_CTL0_TIMER0_HOLD_Pos       (10UL)                    /*!< TIMER0_HOLD (Bit 10)                                  */
#define DBGMCU_CTL0_TIMER0_HOLD_Msk       (0x400UL)                 /*!< TIMER0_HOLD (Bitfield-Mask: 0x01)                     */
#define DBGMCU_CTL0_TIMER2_HOLD_Pos       (12UL)                    /*!< TIMER2_HOLD (Bit 12)                                  */
#define DBGMCU_CTL0_TIMER2_HOLD_Msk       (0x1000UL)                /*!< TIMER2_HOLD (Bitfield-Mask: 0x01)                     */
#define DBGMCU_CTL0_I2C0_HOLD_Pos         (15UL)                    /*!< I2C0_HOLD (Bit 15)                                    */
#define DBGMCU_CTL0_I2C0_HOLD_Msk         (0x8000UL)                /*!< I2C0_HOLD (Bitfield-Mask: 0x01)                       */
#define DBGMCU_CTL0_I2C1_HOLD_Pos         (16UL)                    /*!< I2C1_HOLD (Bit 16)                                    */
#define DBGMCU_CTL0_I2C1_HOLD_Msk         (0x10000UL)               /*!< I2C1_HOLD (Bitfield-Mask: 0x01)                       */
#define DBGMCU_CTL0_TIMER5_HOLD_Pos       (19UL)                    /*!< TIMER5_HOLD (Bit 19)                                  */
#define DBGMCU_CTL0_TIMER5_HOLD_Msk       (0x80000UL)               /*!< TIMER5_HOLD (Bitfield-Mask: 0x01)                     */
#define DBGMCU_CTL0_TIMER13_HOLD_Pos      (27UL)                    /*!< TIMER13_HOLD (Bit 27)                                 */
#define DBGMCU_CTL0_TIMER13_HOLD_Msk      (0x8000000UL)             /*!< TIMER13_HOLD (Bitfield-Mask: 0x01)                    */
/* =========================================================  CTL1  ========================================================== */
#define DBGMCU_CTL1_RTC_HOLD_Pos          (10UL)                    /*!< RTC_HOLD (Bit 10)                                     */
#define DBGMCU_CTL1_RTC_HOLD_Msk          (0x400UL)                 /*!< RTC_HOLD (Bitfield-Mask: 0x01)                        */
#define DBGMCU_CTL1_TIMER14_HOLD_Pos      (16UL)                    /*!< TIMER14_HOLD (Bit 16)                                 */
#define DBGMCU_CTL1_TIMER14_HOLD_Msk      (0x10000UL)               /*!< TIMER14_HOLD (Bitfield-Mask: 0x01)                    */
#define DBGMCU_CTL1_TIMER15_HOLD_Pos      (17UL)                    /*!< TIMER15_HOLD (Bit 17)                                 */
#define DBGMCU_CTL1_TIMER15_HOLD_Msk      (0x20000UL)               /*!< TIMER15_HOLD (Bitfield-Mask: 0x01)                    */
#define DBGMCU_CTL1_TIMER16_HOLD_Pos      (18UL)                    /*!< TIMER16_HOLD (Bit 18)                                 */
#define DBGMCU_CTL1_TIMER16_HOLD_Msk      (0x40000UL)               /*!< TIMER16_HOLD (Bitfield-Mask: 0x01)                    */


/* =========================================================================================================================== */
/* ================                                            DMA                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  INTF  ========================================================== */
#define DMA_INTF_GIF0_Pos                 (0UL)                     /*!< GIF0 (Bit 0)                                          */
#define DMA_INTF_GIF0_Msk                 (0x1UL)                   /*!< GIF0 (Bitfield-Mask: 0x01)                            */
#define DMA_INTF_FTFIF0_Pos               (1UL)                     /*!< FTFIF0 (Bit 1)                                        */
#define DMA_INTF_FTFIF0_Msk               (0x2UL)                   /*!< FTFIF0 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_HTFIF0_Pos               (2UL)                     /*!< HTFIF0 (Bit 2)                                        */
#define DMA_INTF_HTFIF0_Msk               (0x4UL)                   /*!< HTFIF0 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_ERRIF0_Pos               (3UL)                     /*!< ERRIF0 (Bit 3)                                        */
#define DMA_INTF_ERRIF0_Msk               (0x8UL)                   /*!< ERRIF0 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_GIF1_Pos                 (4UL)                     /*!< GIF1 (Bit 4)                                          */
#define DMA_INTF_GIF1_Msk                 (0x10UL)                  /*!< GIF1 (Bitfield-Mask: 0x01)                            */
#define DMA_INTF_FTFIF1_Pos               (5UL)                     /*!< FTFIF1 (Bit 5)                                        */
#define DMA_INTF_FTFIF1_Msk               (0x20UL)                  /*!< FTFIF1 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_HTFIF1_Pos               (6UL)                     /*!< HTFIF1 (Bit 6)                                        */
#define DMA_INTF_HTFIF1_Msk               (0x40UL)                  /*!< HTFIF1 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_ERRIF1_Pos               (7UL)                     /*!< ERRIF1 (Bit 7)                                        */
#define DMA_INTF_ERRIF1_Msk               (0x80UL)                  /*!< ERRIF1 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_GIF2_Pos                 (8UL)                     /*!< GIF2 (Bit 8)                                          */
#define DMA_INTF_GIF2_Msk                 (0x100UL)                 /*!< GIF2 (Bitfield-Mask: 0x01)                            */
#define DMA_INTF_FTFIF2_Pos               (9UL)                     /*!< FTFIF2 (Bit 9)                                        */
#define DMA_INTF_FTFIF2_Msk               (0x200UL)                 /*!< FTFIF2 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_HTFIF2_Pos               (10UL)                    /*!< HTFIF2 (Bit 10)                                       */
#define DMA_INTF_HTFIF2_Msk               (0x400UL)                 /*!< HTFIF2 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_ERRIF2_Pos               (11UL)                    /*!< ERRIF2 (Bit 11)                                       */
#define DMA_INTF_ERRIF2_Msk               (0x800UL)                 /*!< ERRIF2 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_GIF3_Pos                 (12UL)                    /*!< GIF3 (Bit 12)                                         */
#define DMA_INTF_GIF3_Msk                 (0x1000UL)                /*!< GIF3 (Bitfield-Mask: 0x01)                            */
#define DMA_INTF_FTFIF3_Pos               (13UL)                    /*!< FTFIF3 (Bit 13)                                       */
#define DMA_INTF_FTFIF3_Msk               (0x2000UL)                /*!< FTFIF3 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_HTFIF3_Pos               (14UL)                    /*!< HTFIF3 (Bit 14)                                       */
#define DMA_INTF_HTFIF3_Msk               (0x4000UL)                /*!< HTFIF3 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_ERRIF3_Pos               (15UL)                    /*!< ERRIF3 (Bit 15)                                       */
#define DMA_INTF_ERRIF3_Msk               (0x8000UL)                /*!< ERRIF3 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_GIF4_Pos                 (16UL)                    /*!< GIF4 (Bit 16)                                         */
#define DMA_INTF_GIF4_Msk                 (0x10000UL)               /*!< GIF4 (Bitfield-Mask: 0x01)                            */
#define DMA_INTF_FTFIF4_Pos               (17UL)                    /*!< FTFIF4 (Bit 17)                                       */
#define DMA_INTF_FTFIF4_Msk               (0x20000UL)               /*!< FTFIF4 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_HTFIF4_Pos               (18UL)                    /*!< HTFIF4 (Bit 18)                                       */
#define DMA_INTF_HTFIF4_Msk               (0x40000UL)               /*!< HTFIF4 (Bitfield-Mask: 0x01)                          */
#define DMA_INTF_ERRIF4_Pos               (19UL)                    /*!< ERRIF4 (Bit 19)                                       */
#define DMA_INTF_ERRIF4_Msk               (0x80000UL)               /*!< ERRIF4 (Bitfield-Mask: 0x01)                          */
/* =========================================================  INTC  ========================================================== */
#define DMA_INTC_GIFC0_Pos                (0UL)                     /*!< GIFC0 (Bit 0)                                         */
#define DMA_INTC_GIFC0_Msk                (0x1UL)                   /*!< GIFC0 (Bitfield-Mask: 0x01)                           */
#define DMA_INTC_GIFC1_Pos                (4UL)                     /*!< GIFC1 (Bit 4)                                         */
#define DMA_INTC_GIFC1_Msk                (0x10UL)                  /*!< GIFC1 (Bitfield-Mask: 0x01)                           */
#define DMA_INTC_GIFC2_Pos                (8UL)                     /*!< GIFC2 (Bit 8)                                         */
#define DMA_INTC_GIFC2_Msk                (0x100UL)                 /*!< GIFC2 (Bitfield-Mask: 0x01)                           */
#define DMA_INTC_GIFC3_Pos                (12UL)                    /*!< GIFC3 (Bit 12)                                        */
#define DMA_INTC_GIFC3_Msk                (0x1000UL)                /*!< GIFC3 (Bitfield-Mask: 0x01)                           */
#define DMA_INTC_GIFC4_Pos                (16UL)                    /*!< GIFC4 (Bit 16)                                        */
#define DMA_INTC_GIFC4_Msk                (0x10000UL)               /*!< GIFC4 (Bitfield-Mask: 0x01)                           */
#define DMA_INTC_FTFIFC0_Pos              (1UL)                     /*!< FTFIFC0 (Bit 1)                                       */
#define DMA_INTC_FTFIFC0_Msk              (0x2UL)                   /*!< FTFIFC0 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_FTFIFC1_Pos              (5UL)                     /*!< FTFIFC1 (Bit 5)                                       */
#define DMA_INTC_FTFIFC1_Msk              (0x20UL)                  /*!< FTFIFC1 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_FTFIFC2_Pos              (9UL)                     /*!< FTFIFC2 (Bit 9)                                       */
#define DMA_INTC_FTFIFC2_Msk              (0x200UL)                 /*!< FTFIFC2 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_FTFIFC3_Pos              (13UL)                    /*!< FTFIFC3 (Bit 13)                                      */
#define DMA_INTC_FTFIFC3_Msk              (0x2000UL)                /*!< FTFIFC3 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_FTFIFC4_Pos              (17UL)                    /*!< FTFIFC4 (Bit 17)                                      */
#define DMA_INTC_FTFIFC4_Msk              (0x20000UL)               /*!< FTFIFC4 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_HTFIFC0_Pos              (2UL)                     /*!< HTFIFC0 (Bit 2)                                       */
#define DMA_INTC_HTFIFC0_Msk              (0x4UL)                   /*!< HTFIFC0 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_HTFIFC1_Pos              (6UL)                     /*!< HTFIFC1 (Bit 6)                                       */
#define DMA_INTC_HTFIFC1_Msk              (0x40UL)                  /*!< HTFIFC1 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_HTFIFC2_Pos              (10UL)                    /*!< HTFIFC2 (Bit 10)                                      */
#define DMA_INTC_HTFIFC2_Msk              (0x400UL)                 /*!< HTFIFC2 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_HTFIFC3_Pos              (14UL)                    /*!< HTFIFC3 (Bit 14)                                      */
#define DMA_INTC_HTFIFC3_Msk              (0x4000UL)                /*!< HTFIFC3 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_HTFIFC4_Pos              (18UL)                    /*!< HTFIFC4 (Bit 18)                                      */
#define DMA_INTC_HTFIFC4_Msk              (0x40000UL)               /*!< HTFIFC4 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_ERRIFC0_Pos              (3UL)                     /*!< ERRIFC0 (Bit 3)                                       */
#define DMA_INTC_ERRIFC0_Msk              (0x8UL)                   /*!< ERRIFC0 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_ERRIFC1_Pos              (7UL)                     /*!< ERRIFC1 (Bit 7)                                       */
#define DMA_INTC_ERRIFC1_Msk              (0x80UL)                  /*!< ERRIFC1 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_ERRIFC2_Pos              (11UL)                    /*!< ERRIFC2 (Bit 11)                                      */
#define DMA_INTC_ERRIFC2_Msk              (0x800UL)                 /*!< ERRIFC2 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_ERRIFC3_Pos              (15UL)                    /*!< ERRIFC3 (Bit 15)                                      */
#define DMA_INTC_ERRIFC3_Msk              (0x8000UL)                /*!< ERRIFC3 (Bitfield-Mask: 0x01)                         */
#define DMA_INTC_ERRIFC4_Pos              (19UL)                    /*!< ERRIFC4 (Bit 19)                                      */
#define DMA_INTC_ERRIFC4_Msk              (0x80000UL)               /*!< ERRIFC4 (Bitfield-Mask: 0x01)                         */
/* ========================================================  CH0CTL  ========================================================= */
#define DMA_CH0CTL_CHEN_Pos               (0UL)                     /*!< CHEN (Bit 0)                                          */
#define DMA_CH0CTL_CHEN_Msk               (0x1UL)                   /*!< CHEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH0CTL_FTFIE_Pos              (1UL)                     /*!< FTFIE (Bit 1)                                         */
#define DMA_CH0CTL_FTFIE_Msk              (0x2UL)                   /*!< FTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH0CTL_HTFIE_Pos              (2UL)                     /*!< HTFIE (Bit 2)                                         */
#define DMA_CH0CTL_HTFIE_Msk              (0x4UL)                   /*!< HTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH0CTL_ERRIE_Pos              (3UL)                     /*!< ERRIE (Bit 3)                                         */
#define DMA_CH0CTL_ERRIE_Msk              (0x8UL)                   /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH0CTL_DIR_Pos                (4UL)                     /*!< DIR (Bit 4)                                           */
#define DMA_CH0CTL_DIR_Msk                (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define DMA_CH0CTL_CMEN_Pos               (5UL)                     /*!< CMEN (Bit 5)                                          */
#define DMA_CH0CTL_CMEN_Msk               (0x20UL)                  /*!< CMEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH0CTL_PNAGA_Pos              (6UL)                     /*!< PNAGA (Bit 6)                                         */
#define DMA_CH0CTL_PNAGA_Msk              (0x40UL)                  /*!< PNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH0CTL_MNAGA_Pos              (7UL)                     /*!< MNAGA (Bit 7)                                         */
#define DMA_CH0CTL_MNAGA_Msk              (0x80UL)                  /*!< MNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH0CTL_PWIDTH_Pos             (8UL)                     /*!< PWIDTH (Bit 8)                                        */
#define DMA_CH0CTL_PWIDTH_Msk             (0x300UL)                 /*!< PWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH0CTL_MWIDTH_Pos             (10UL)                    /*!< MWIDTH (Bit 10)                                       */
#define DMA_CH0CTL_MWIDTH_Msk             (0xc00UL)                 /*!< MWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH0CTL_PRIO_Pos               (12UL)                    /*!< PRIO (Bit 12)                                         */
#define DMA_CH0CTL_PRIO_Msk               (0x3000UL)                /*!< PRIO (Bitfield-Mask: 0x03)                            */
#define DMA_CH0CTL_M2M_Pos                (14UL)                    /*!< M2M (Bit 14)                                          */
#define DMA_CH0CTL_M2M_Msk                (0x4000UL)                /*!< M2M (Bitfield-Mask: 0x01)                             */
/* ========================================================  CH0CNT  ========================================================= */
#define DMA_CH0CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define DMA_CH0CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* =======================================================  CH0PADDR  ======================================================== */
#define DMA_CH0PADDR_PADDR_Pos            (0UL)                     /*!< PADDR (Bit 0)                                         */
#define DMA_CH0PADDR_PADDR_Msk            (0xffffffffUL)            /*!< PADDR (Bitfield-Mask: 0xffffffff)                     */
/* =======================================================  CH0MADDR  ======================================================== */
#define DMA_CH0MADDR_MADDR_Pos            (0UL)                     /*!< MADDR (Bit 0)                                         */
#define DMA_CH0MADDR_MADDR_Msk            (0xffffffffUL)            /*!< MADDR (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  CH1CTL  ========================================================= */
#define DMA_CH1CTL_CHEN_Pos               (0UL)                     /*!< CHEN (Bit 0)                                          */
#define DMA_CH1CTL_CHEN_Msk               (0x1UL)                   /*!< CHEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH1CTL_FTFIE_Pos              (1UL)                     /*!< FTFIE (Bit 1)                                         */
#define DMA_CH1CTL_FTFIE_Msk              (0x2UL)                   /*!< FTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH1CTL_HTFIE_Pos              (2UL)                     /*!< HTFIE (Bit 2)                                         */
#define DMA_CH1CTL_HTFIE_Msk              (0x4UL)                   /*!< HTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH1CTL_ERRIE_Pos              (3UL)                     /*!< ERRIE (Bit 3)                                         */
#define DMA_CH1CTL_ERRIE_Msk              (0x8UL)                   /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH1CTL_DIR_Pos                (4UL)                     /*!< DIR (Bit 4)                                           */
#define DMA_CH1CTL_DIR_Msk                (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define DMA_CH1CTL_CMEN_Pos               (5UL)                     /*!< CMEN (Bit 5)                                          */
#define DMA_CH1CTL_CMEN_Msk               (0x20UL)                  /*!< CMEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH1CTL_PNAGA_Pos              (6UL)                     /*!< PNAGA (Bit 6)                                         */
#define DMA_CH1CTL_PNAGA_Msk              (0x40UL)                  /*!< PNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH1CTL_MNAGA_Pos              (7UL)                     /*!< MNAGA (Bit 7)                                         */
#define DMA_CH1CTL_MNAGA_Msk              (0x80UL)                  /*!< MNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH1CTL_PWIDTH_Pos             (8UL)                     /*!< PWIDTH (Bit 8)                                        */
#define DMA_CH1CTL_PWIDTH_Msk             (0x300UL)                 /*!< PWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH1CTL_MWIDTH_Pos             (10UL)                    /*!< MWIDTH (Bit 10)                                       */
#define DMA_CH1CTL_MWIDTH_Msk             (0xc00UL)                 /*!< MWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH1CTL_PRIO_Pos               (12UL)                    /*!< PRIO (Bit 12)                                         */
#define DMA_CH1CTL_PRIO_Msk               (0x3000UL)                /*!< PRIO (Bitfield-Mask: 0x03)                            */
#define DMA_CH1CTL_M2M_Pos                (14UL)                    /*!< M2M (Bit 14)                                          */
#define DMA_CH1CTL_M2M_Msk                (0x4000UL)                /*!< M2M (Bitfield-Mask: 0x01)                             */
/* ========================================================  CH1CNT  ========================================================= */
#define DMA_CH1CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define DMA_CH1CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* =======================================================  CH1PADDR  ======================================================== */
#define DMA_CH1PADDR_PADDR_Pos            (0UL)                     /*!< PADDR (Bit 0)                                         */
#define DMA_CH1PADDR_PADDR_Msk            (0xffffffffUL)            /*!< PADDR (Bitfield-Mask: 0xffffffff)                     */
/* =======================================================  CH1MADDR  ======================================================== */
#define DMA_CH1MADDR_MADDR_Pos            (0UL)                     /*!< MADDR (Bit 0)                                         */
#define DMA_CH1MADDR_MADDR_Msk            (0xffffffffUL)            /*!< MADDR (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  CH2CTL  ========================================================= */
#define DMA_CH2CTL_CHEN_Pos               (0UL)                     /*!< CHEN (Bit 0)                                          */
#define DMA_CH2CTL_CHEN_Msk               (0x1UL)                   /*!< CHEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH2CTL_FTFIE_Pos              (1UL)                     /*!< FTFIE (Bit 1)                                         */
#define DMA_CH2CTL_FTFIE_Msk              (0x2UL)                   /*!< FTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH2CTL_HTFIE_Pos              (2UL)                     /*!< HTFIE (Bit 2)                                         */
#define DMA_CH2CTL_HTFIE_Msk              (0x4UL)                   /*!< HTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH2CTL_ERRIE_Pos              (3UL)                     /*!< ERRIE (Bit 3)                                         */
#define DMA_CH2CTL_ERRIE_Msk              (0x8UL)                   /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH2CTL_DIR_Pos                (4UL)                     /*!< DIR (Bit 4)                                           */
#define DMA_CH2CTL_DIR_Msk                (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define DMA_CH2CTL_CMEN_Pos               (5UL)                     /*!< CMEN (Bit 5)                                          */
#define DMA_CH2CTL_CMEN_Msk               (0x20UL)                  /*!< CMEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH2CTL_PNAGA_Pos              (6UL)                     /*!< PNAGA (Bit 6)                                         */
#define DMA_CH2CTL_PNAGA_Msk              (0x40UL)                  /*!< PNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH2CTL_MNAGA_Pos              (7UL)                     /*!< MNAGA (Bit 7)                                         */
#define DMA_CH2CTL_MNAGA_Msk              (0x80UL)                  /*!< MNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH2CTL_PWIDTH_Pos             (8UL)                     /*!< PWIDTH (Bit 8)                                        */
#define DMA_CH2CTL_PWIDTH_Msk             (0x300UL)                 /*!< PWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH2CTL_MWIDTH_Pos             (10UL)                    /*!< MWIDTH (Bit 10)                                       */
#define DMA_CH2CTL_MWIDTH_Msk             (0xc00UL)                 /*!< MWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH2CTL_PRIO_Pos               (12UL)                    /*!< PRIO (Bit 12)                                         */
#define DMA_CH2CTL_PRIO_Msk               (0x3000UL)                /*!< PRIO (Bitfield-Mask: 0x03)                            */
#define DMA_CH2CTL_M2M_Pos                (14UL)                    /*!< M2M (Bit 14)                                          */
#define DMA_CH2CTL_M2M_Msk                (0x4000UL)                /*!< M2M (Bitfield-Mask: 0x01)                             */
/* ========================================================  CH2CNT  ========================================================= */
#define DMA_CH2CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define DMA_CH2CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* =======================================================  CH2PADDR  ======================================================== */
#define DMA_CH2PADDR_PADDR_Pos            (0UL)                     /*!< PADDR (Bit 0)                                         */
#define DMA_CH2PADDR_PADDR_Msk            (0xffffffffUL)            /*!< PADDR (Bitfield-Mask: 0xffffffff)                     */
/* =======================================================  CH2MADDR  ======================================================== */
#define DMA_CH2MADDR_MADDR_Pos            (0UL)                     /*!< MADDR (Bit 0)                                         */
#define DMA_CH2MADDR_MADDR_Msk            (0xffffffffUL)            /*!< MADDR (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  CH3CTL  ========================================================= */
#define DMA_CH3CTL_CHEN_Pos               (0UL)                     /*!< CHEN (Bit 0)                                          */
#define DMA_CH3CTL_CHEN_Msk               (0x1UL)                   /*!< CHEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH3CTL_FTFIE_Pos              (1UL)                     /*!< FTFIE (Bit 1)                                         */
#define DMA_CH3CTL_FTFIE_Msk              (0x2UL)                   /*!< FTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH3CTL_HTFIE_Pos              (2UL)                     /*!< HTFIE (Bit 2)                                         */
#define DMA_CH3CTL_HTFIE_Msk              (0x4UL)                   /*!< HTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH3CTL_ERRIE_Pos              (3UL)                     /*!< ERRIE (Bit 3)                                         */
#define DMA_CH3CTL_ERRIE_Msk              (0x8UL)                   /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH3CTL_DIR_Pos                (4UL)                     /*!< DIR (Bit 4)                                           */
#define DMA_CH3CTL_DIR_Msk                (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define DMA_CH3CTL_CMEN_Pos               (5UL)                     /*!< CMEN (Bit 5)                                          */
#define DMA_CH3CTL_CMEN_Msk               (0x20UL)                  /*!< CMEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH3CTL_PNAGA_Pos              (6UL)                     /*!< PNAGA (Bit 6)                                         */
#define DMA_CH3CTL_PNAGA_Msk              (0x40UL)                  /*!< PNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH3CTL_MNAGA_Pos              (7UL)                     /*!< MNAGA (Bit 7)                                         */
#define DMA_CH3CTL_MNAGA_Msk              (0x80UL)                  /*!< MNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH3CTL_PWIDTH_Pos             (8UL)                     /*!< PWIDTH (Bit 8)                                        */
#define DMA_CH3CTL_PWIDTH_Msk             (0x300UL)                 /*!< PWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH3CTL_MWIDTH_Pos             (10UL)                    /*!< MWIDTH (Bit 10)                                       */
#define DMA_CH3CTL_MWIDTH_Msk             (0xc00UL)                 /*!< MWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH3CTL_PRIO_Pos               (12UL)                    /*!< PRIO (Bit 12)                                         */
#define DMA_CH3CTL_PRIO_Msk               (0x3000UL)                /*!< PRIO (Bitfield-Mask: 0x03)                            */
#define DMA_CH3CTL_M2M_Pos                (14UL)                    /*!< M2M (Bit 14)                                          */
#define DMA_CH3CTL_M2M_Msk                (0x4000UL)                /*!< M2M (Bitfield-Mask: 0x01)                             */
/* ========================================================  CH3CNT  ========================================================= */
#define DMA_CH3CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define DMA_CH3CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* =======================================================  CH3PADDR  ======================================================== */
#define DMA_CH3PADDR_PADDR_Pos            (0UL)                     /*!< PADDR (Bit 0)                                         */
#define DMA_CH3PADDR_PADDR_Msk            (0xffffffffUL)            /*!< PADDR (Bitfield-Mask: 0xffffffff)                     */
/* =======================================================  CH3MADDR  ======================================================== */
#define DMA_CH3MADDR_MADDR_Pos            (0UL)                     /*!< MADDR (Bit 0)                                         */
#define DMA_CH3MADDR_MADDR_Msk            (0xffffffffUL)            /*!< MADDR (Bitfield-Mask: 0xffffffff)                     */
/* ========================================================  CH4CTL  ========================================================= */
#define DMA_CH4CTL_CHEN_Pos               (0UL)                     /*!< CHEN (Bit 0)                                          */
#define DMA_CH4CTL_CHEN_Msk               (0x1UL)                   /*!< CHEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH4CTL_FTFIE_Pos              (1UL)                     /*!< FTFIE (Bit 1)                                         */
#define DMA_CH4CTL_FTFIE_Msk              (0x2UL)                   /*!< FTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH4CTL_HTFIE_Pos              (2UL)                     /*!< HTFIE (Bit 2)                                         */
#define DMA_CH4CTL_HTFIE_Msk              (0x4UL)                   /*!< HTFIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH4CTL_ERRIE_Pos              (3UL)                     /*!< ERRIE (Bit 3)                                         */
#define DMA_CH4CTL_ERRIE_Msk              (0x8UL)                   /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define DMA_CH4CTL_DIR_Pos                (4UL)                     /*!< DIR (Bit 4)                                           */
#define DMA_CH4CTL_DIR_Msk                (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define DMA_CH4CTL_CMEN_Pos               (5UL)                     /*!< CMEN (Bit 5)                                          */
#define DMA_CH4CTL_CMEN_Msk               (0x20UL)                  /*!< CMEN (Bitfield-Mask: 0x01)                            */
#define DMA_CH4CTL_PNAGA_Pos              (6UL)                     /*!< PNAGA (Bit 6)                                         */
#define DMA_CH4CTL_PNAGA_Msk              (0x40UL)                  /*!< PNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH4CTL_MNAGA_Pos              (7UL)                     /*!< MNAGA (Bit 7)                                         */
#define DMA_CH4CTL_MNAGA_Msk              (0x80UL)                  /*!< MNAGA (Bitfield-Mask: 0x01)                           */
#define DMA_CH4CTL_PWIDTH_Pos             (8UL)                     /*!< PWIDTH (Bit 8)                                        */
#define DMA_CH4CTL_PWIDTH_Msk             (0x300UL)                 /*!< PWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH4CTL_MWIDTH_Pos             (10UL)                    /*!< MWIDTH (Bit 10)                                       */
#define DMA_CH4CTL_MWIDTH_Msk             (0xc00UL)                 /*!< MWIDTH (Bitfield-Mask: 0x03)                          */
#define DMA_CH4CTL_PRIO_Pos               (12UL)                    /*!< PRIO (Bit 12)                                         */
#define DMA_CH4CTL_PRIO_Msk               (0x3000UL)                /*!< PRIO (Bitfield-Mask: 0x03)                            */
#define DMA_CH4CTL_M2M_Pos                (14UL)                    /*!< M2M (Bit 14)                                          */
#define DMA_CH4CTL_M2M_Msk                (0x4000UL)                /*!< M2M (Bitfield-Mask: 0x01)                             */
/* ========================================================  CH4CNT  ========================================================= */
#define DMA_CH4CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define DMA_CH4CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* =======================================================  CH4PADDR  ======================================================== */
#define DMA_CH4PADDR_PADDR_Pos            (0UL)                     /*!< PADDR (Bit 0)                                         */
#define DMA_CH4PADDR_PADDR_Msk            (0xffffffffUL)            /*!< PADDR (Bitfield-Mask: 0xffffffff)                     */
/* =======================================================  CH4MADDR  ======================================================== */
#define DMA_CH4MADDR_MADDR_Pos            (0UL)                     /*!< MADDR (Bit 0)                                         */
#define DMA_CH4MADDR_MADDR_Msk            (0xffffffffUL)            /*!< MADDR (Bitfield-Mask: 0xffffffff)                     */


/* =========================================================================================================================== */
/* ================                                           EXTI                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  INTEN  ========================================================= */
#define EXTI_INTEN_INTEN0_Pos             (0UL)                     /*!< INTEN0 (Bit 0)                                        */
#define EXTI_INTEN_INTEN0_Msk             (0x1UL)                   /*!< INTEN0 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN1_Pos             (1UL)                     /*!< INTEN1 (Bit 1)                                        */
#define EXTI_INTEN_INTEN1_Msk             (0x2UL)                   /*!< INTEN1 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN2_Pos             (2UL)                     /*!< INTEN2 (Bit 2)                                        */
#define EXTI_INTEN_INTEN2_Msk             (0x4UL)                   /*!< INTEN2 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN3_Pos             (3UL)                     /*!< INTEN3 (Bit 3)                                        */
#define EXTI_INTEN_INTEN3_Msk             (0x8UL)                   /*!< INTEN3 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN4_Pos             (4UL)                     /*!< INTEN4 (Bit 4)                                        */
#define EXTI_INTEN_INTEN4_Msk             (0x10UL)                  /*!< INTEN4 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN5_Pos             (5UL)                     /*!< INTEN5 (Bit 5)                                        */
#define EXTI_INTEN_INTEN5_Msk             (0x20UL)                  /*!< INTEN5 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN6_Pos             (6UL)                     /*!< INTEN6 (Bit 6)                                        */
#define EXTI_INTEN_INTEN6_Msk             (0x40UL)                  /*!< INTEN6 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN7_Pos             (7UL)                     /*!< INTEN7 (Bit 7)                                        */
#define EXTI_INTEN_INTEN7_Msk             (0x80UL)                  /*!< INTEN7 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN8_Pos             (8UL)                     /*!< INTEN8 (Bit 8)                                        */
#define EXTI_INTEN_INTEN8_Msk             (0x100UL)                 /*!< INTEN8 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN9_Pos             (9UL)                     /*!< INTEN9 (Bit 9)                                        */
#define EXTI_INTEN_INTEN9_Msk             (0x200UL)                 /*!< INTEN9 (Bitfield-Mask: 0x01)                          */
#define EXTI_INTEN_INTEN10_Pos            (10UL)                    /*!< INTEN10 (Bit 10)                                      */
#define EXTI_INTEN_INTEN10_Msk            (0x400UL)                 /*!< INTEN10 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN11_Pos            (11UL)                    /*!< INTEN11 (Bit 11)                                      */
#define EXTI_INTEN_INTEN11_Msk            (0x800UL)                 /*!< INTEN11 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN12_Pos            (12UL)                    /*!< INTEN12 (Bit 12)                                      */
#define EXTI_INTEN_INTEN12_Msk            (0x1000UL)                /*!< INTEN12 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN13_Pos            (13UL)                    /*!< INTEN13 (Bit 13)                                      */
#define EXTI_INTEN_INTEN13_Msk            (0x2000UL)                /*!< INTEN13 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN14_Pos            (14UL)                    /*!< INTEN14 (Bit 14)                                      */
#define EXTI_INTEN_INTEN14_Msk            (0x4000UL)                /*!< INTEN14 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN15_Pos            (15UL)                    /*!< INTEN15 (Bit 15)                                      */
#define EXTI_INTEN_INTEN15_Msk            (0x8000UL)                /*!< INTEN15 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN16_Pos            (16UL)                    /*!< INTEN16 (Bit 16)                                      */
#define EXTI_INTEN_INTEN16_Msk            (0x10000UL)               /*!< INTEN16 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN17_Pos            (17UL)                    /*!< INTEN17 (Bit 17)                                      */
#define EXTI_INTEN_INTEN17_Msk            (0x20000UL)               /*!< INTEN17 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN18_Pos            (18UL)                    /*!< INTEN18 (Bit 18)                                      */
#define EXTI_INTEN_INTEN18_Msk            (0x40000UL)               /*!< INTEN18 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN19_Pos            (19UL)                    /*!< INTEN19 (Bit 19)                                      */
#define EXTI_INTEN_INTEN19_Msk            (0x80000UL)               /*!< INTEN19 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN20_Pos            (20UL)                    /*!< INTEN20 (Bit 20)                                      */
#define EXTI_INTEN_INTEN20_Msk            (0x100000UL)              /*!< INTEN20 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN21_Pos            (21UL)                    /*!< INTEN21 (Bit 21)                                      */
#define EXTI_INTEN_INTEN21_Msk            (0x200000UL)              /*!< INTEN21 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN22_Pos            (22UL)                    /*!< INTEN22 (Bit 22)                                      */
#define EXTI_INTEN_INTEN22_Msk            (0x400000UL)              /*!< INTEN22 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN23_Pos            (23UL)                    /*!< INTEN23 (Bit 23)                                      */
#define EXTI_INTEN_INTEN23_Msk            (0x800000UL)              /*!< INTEN23 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN24_Pos            (24UL)                    /*!< INTEN24 (Bit 24)                                      */
#define EXTI_INTEN_INTEN24_Msk            (0x1000000UL)             /*!< INTEN24 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN25_Pos            (25UL)                    /*!< INTEN25 (Bit 25)                                      */
#define EXTI_INTEN_INTEN25_Msk            (0x2000000UL)             /*!< INTEN25 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN26_Pos            (26UL)                    /*!< INTEN26 (Bit 26)                                      */
#define EXTI_INTEN_INTEN26_Msk            (0x4000000UL)             /*!< INTEN26 (Bitfield-Mask: 0x01)                         */
#define EXTI_INTEN_INTEN27_Pos            (27UL)                    /*!< INTEN27 (Bit 27)                                      */
#define EXTI_INTEN_INTEN27_Msk            (0x8000000UL)             /*!< INTEN27 (Bitfield-Mask: 0x01)                         */
/* =========================================================  EVEN  ========================================================== */
#define EXTI_EVEN_EVEN0_Pos               (0UL)                     /*!< EVEN0 (Bit 0)                                         */
#define EXTI_EVEN_EVEN0_Msk               (0x1UL)                   /*!< EVEN0 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN1_Pos               (1UL)                     /*!< EVEN1 (Bit 1)                                         */
#define EXTI_EVEN_EVEN1_Msk               (0x2UL)                   /*!< EVEN1 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN2_Pos               (2UL)                     /*!< EVEN2 (Bit 2)                                         */
#define EXTI_EVEN_EVEN2_Msk               (0x4UL)                   /*!< EVEN2 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN3_Pos               (3UL)                     /*!< EVEN3 (Bit 3)                                         */
#define EXTI_EVEN_EVEN3_Msk               (0x8UL)                   /*!< EVEN3 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN4_Pos               (4UL)                     /*!< EVEN4 (Bit 4)                                         */
#define EXTI_EVEN_EVEN4_Msk               (0x10UL)                  /*!< EVEN4 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN5_Pos               (5UL)                     /*!< EVEN5 (Bit 5)                                         */
#define EXTI_EVEN_EVEN5_Msk               (0x20UL)                  /*!< EVEN5 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN6_Pos               (6UL)                     /*!< EVEN6 (Bit 6)                                         */
#define EXTI_EVEN_EVEN6_Msk               (0x40UL)                  /*!< EVEN6 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN7_Pos               (7UL)                     /*!< EVEN7 (Bit 7)                                         */
#define EXTI_EVEN_EVEN7_Msk               (0x80UL)                  /*!< EVEN7 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN8_Pos               (8UL)                     /*!< EVEN8 (Bit 8)                                         */
#define EXTI_EVEN_EVEN8_Msk               (0x100UL)                 /*!< EVEN8 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN9_Pos               (9UL)                     /*!< EVEN9 (Bit 9)                                         */
#define EXTI_EVEN_EVEN9_Msk               (0x200UL)                 /*!< EVEN9 (Bitfield-Mask: 0x01)                           */
#define EXTI_EVEN_EVEN10_Pos              (10UL)                    /*!< EVEN10 (Bit 10)                                       */
#define EXTI_EVEN_EVEN10_Msk              (0x400UL)                 /*!< EVEN10 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN11_Pos              (11UL)                    /*!< EVEN11 (Bit 11)                                       */
#define EXTI_EVEN_EVEN11_Msk              (0x800UL)                 /*!< EVEN11 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN12_Pos              (12UL)                    /*!< EVEN12 (Bit 12)                                       */
#define EXTI_EVEN_EVEN12_Msk              (0x1000UL)                /*!< EVEN12 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN13_Pos              (13UL)                    /*!< EVEN13 (Bit 13)                                       */
#define EXTI_EVEN_EVEN13_Msk              (0x2000UL)                /*!< EVEN13 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN14_Pos              (14UL)                    /*!< EVEN14 (Bit 14)                                       */
#define EXTI_EVEN_EVEN14_Msk              (0x4000UL)                /*!< EVEN14 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN15_Pos              (15UL)                    /*!< EVEN15 (Bit 15)                                       */
#define EXTI_EVEN_EVEN15_Msk              (0x8000UL)                /*!< EVEN15 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN16_Pos              (16UL)                    /*!< EVEN16 (Bit 16)                                       */
#define EXTI_EVEN_EVEN16_Msk              (0x10000UL)               /*!< EVEN16 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN17_Pos              (17UL)                    /*!< EVEN17 (Bit 17)                                       */
#define EXTI_EVEN_EVEN17_Msk              (0x20000UL)               /*!< EVEN17 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN18_Pos              (18UL)                    /*!< EVEN18 (Bit 18)                                       */
#define EXTI_EVEN_EVEN18_Msk              (0x40000UL)               /*!< EVEN18 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN19_Pos              (19UL)                    /*!< EVEN19 (Bit 19)                                       */
#define EXTI_EVEN_EVEN19_Msk              (0x80000UL)               /*!< EVEN19 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN20_Pos              (20UL)                    /*!< EVEN20 (Bit 20)                                       */
#define EXTI_EVEN_EVEN20_Msk              (0x100000UL)              /*!< EVEN20 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN21_Pos              (21UL)                    /*!< EVEN21 (Bit 21)                                       */
#define EXTI_EVEN_EVEN21_Msk              (0x200000UL)              /*!< EVEN21 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN22_Pos              (22UL)                    /*!< EVEN22 (Bit 22)                                       */
#define EXTI_EVEN_EVEN22_Msk              (0x400000UL)              /*!< EVEN22 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN23_Pos              (23UL)                    /*!< EVEN23 (Bit 23)                                       */
#define EXTI_EVEN_EVEN23_Msk              (0x800000UL)              /*!< EVEN23 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN24_Pos              (24UL)                    /*!< EVEN24 (Bit 24)                                       */
#define EXTI_EVEN_EVEN24_Msk              (0x1000000UL)             /*!< EVEN24 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN25_Pos              (25UL)                    /*!< EVEN25 (Bit 25)                                       */
#define EXTI_EVEN_EVEN25_Msk              (0x2000000UL)             /*!< EVEN25 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN26_Pos              (26UL)                    /*!< EVEN26 (Bit 26)                                       */
#define EXTI_EVEN_EVEN26_Msk              (0x4000000UL)             /*!< EVEN26 (Bitfield-Mask: 0x01)                          */
#define EXTI_EVEN_EVEN27_Pos              (27UL)                    /*!< EVEN27 (Bit 27)                                       */
#define EXTI_EVEN_EVEN27_Msk              (0x8000000UL)             /*!< EVEN27 (Bitfield-Mask: 0x01)                          */
/* =========================================================  RTEN  ========================================================== */
#define EXTI_RTEN_RTEN0_Pos               (0UL)                     /*!< RTEN0 (Bit 0)                                         */
#define EXTI_RTEN_RTEN0_Msk               (0x1UL)                   /*!< RTEN0 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN1_Pos               (1UL)                     /*!< RTEN1 (Bit 1)                                         */
#define EXTI_RTEN_RTEN1_Msk               (0x2UL)                   /*!< RTEN1 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN2_Pos               (2UL)                     /*!< RTEN2 (Bit 2)                                         */
#define EXTI_RTEN_RTEN2_Msk               (0x4UL)                   /*!< RTEN2 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN3_Pos               (3UL)                     /*!< RTEN3 (Bit 3)                                         */
#define EXTI_RTEN_RTEN3_Msk               (0x8UL)                   /*!< RTEN3 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN4_Pos               (4UL)                     /*!< RTEN4 (Bit 4)                                         */
#define EXTI_RTEN_RTEN4_Msk               (0x10UL)                  /*!< RTEN4 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN5_Pos               (5UL)                     /*!< RTEN5 (Bit 5)                                         */
#define EXTI_RTEN_RTEN5_Msk               (0x20UL)                  /*!< RTEN5 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN6_Pos               (6UL)                     /*!< RTEN6 (Bit 6)                                         */
#define EXTI_RTEN_RTEN6_Msk               (0x40UL)                  /*!< RTEN6 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN7_Pos               (7UL)                     /*!< RTEN7 (Bit 7)                                         */
#define EXTI_RTEN_RTEN7_Msk               (0x80UL)                  /*!< RTEN7 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN8_Pos               (8UL)                     /*!< RTEN8 (Bit 8)                                         */
#define EXTI_RTEN_RTEN8_Msk               (0x100UL)                 /*!< RTEN8 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN9_Pos               (9UL)                     /*!< RTEN9 (Bit 9)                                         */
#define EXTI_RTEN_RTEN9_Msk               (0x200UL)                 /*!< RTEN9 (Bitfield-Mask: 0x01)                           */
#define EXTI_RTEN_RTEN10_Pos              (10UL)                    /*!< RTEN10 (Bit 10)                                       */
#define EXTI_RTEN_RTEN10_Msk              (0x400UL)                 /*!< RTEN10 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN11_Pos              (11UL)                    /*!< RTEN11 (Bit 11)                                       */
#define EXTI_RTEN_RTEN11_Msk              (0x800UL)                 /*!< RTEN11 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN12_Pos              (12UL)                    /*!< RTEN12 (Bit 12)                                       */
#define EXTI_RTEN_RTEN12_Msk              (0x1000UL)                /*!< RTEN12 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN13_Pos              (13UL)                    /*!< RTEN13 (Bit 13)                                       */
#define EXTI_RTEN_RTEN13_Msk              (0x2000UL)                /*!< RTEN13 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN14_Pos              (14UL)                    /*!< RTEN14 (Bit 14)                                       */
#define EXTI_RTEN_RTEN14_Msk              (0x4000UL)                /*!< RTEN14 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN15_Pos              (15UL)                    /*!< RTEN15 (Bit 15)                                       */
#define EXTI_RTEN_RTEN15_Msk              (0x8000UL)                /*!< RTEN15 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN16_Pos              (16UL)                    /*!< RTEN16 (Bit 16)                                       */
#define EXTI_RTEN_RTEN16_Msk              (0x10000UL)               /*!< RTEN16 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN17_Pos              (17UL)                    /*!< RTEN17 (Bit 17)                                       */
#define EXTI_RTEN_RTEN17_Msk              (0x20000UL)               /*!< RTEN17 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN19_Pos              (19UL)                    /*!< RTEN19 (Bit 19)                                       */
#define EXTI_RTEN_RTEN19_Msk              (0x80000UL)               /*!< RTEN19 (Bitfield-Mask: 0x01)                          */
#define EXTI_RTEN_RTEN21_Pos              (21UL)                    /*!< RTEN21 (Bit 21)                                       */
#define EXTI_RTEN_RTEN21_Msk              (0x200000UL)              /*!< RTEN21 (Bitfield-Mask: 0x01)                          */
/* =========================================================  FTEN  ========================================================== */
#define EXTI_FTEN_FTEN0_Pos               (0UL)                     /*!< FTEN0 (Bit 0)                                         */
#define EXTI_FTEN_FTEN0_Msk               (0x1UL)                   /*!< FTEN0 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN1_Pos               (1UL)                     /*!< FTEN1 (Bit 1)                                         */
#define EXTI_FTEN_FTEN1_Msk               (0x2UL)                   /*!< FTEN1 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN2_Pos               (2UL)                     /*!< FTEN2 (Bit 2)                                         */
#define EXTI_FTEN_FTEN2_Msk               (0x4UL)                   /*!< FTEN2 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN3_Pos               (3UL)                     /*!< FTEN3 (Bit 3)                                         */
#define EXTI_FTEN_FTEN3_Msk               (0x8UL)                   /*!< FTEN3 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN4_Pos               (4UL)                     /*!< FTEN4 (Bit 4)                                         */
#define EXTI_FTEN_FTEN4_Msk               (0x10UL)                  /*!< FTEN4 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN5_Pos               (5UL)                     /*!< FTEN5 (Bit 5)                                         */
#define EXTI_FTEN_FTEN5_Msk               (0x20UL)                  /*!< FTEN5 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN6_Pos               (6UL)                     /*!< FTEN6 (Bit 6)                                         */
#define EXTI_FTEN_FTEN6_Msk               (0x40UL)                  /*!< FTEN6 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN7_Pos               (7UL)                     /*!< FTEN7 (Bit 7)                                         */
#define EXTI_FTEN_FTEN7_Msk               (0x80UL)                  /*!< FTEN7 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN8_Pos               (8UL)                     /*!< FTEN8 (Bit 8)                                         */
#define EXTI_FTEN_FTEN8_Msk               (0x100UL)                 /*!< FTEN8 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN9_Pos               (9UL)                     /*!< FTEN9 (Bit 9)                                         */
#define EXTI_FTEN_FTEN9_Msk               (0x200UL)                 /*!< FTEN9 (Bitfield-Mask: 0x01)                           */
#define EXTI_FTEN_FTEN10_Pos              (10UL)                    /*!< FTEN10 (Bit 10)                                       */
#define EXTI_FTEN_FTEN10_Msk              (0x400UL)                 /*!< FTEN10 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN11_Pos              (11UL)                    /*!< FTEN11 (Bit 11)                                       */
#define EXTI_FTEN_FTEN11_Msk              (0x800UL)                 /*!< FTEN11 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN12_Pos              (12UL)                    /*!< FTEN12 (Bit 12)                                       */
#define EXTI_FTEN_FTEN12_Msk              (0x1000UL)                /*!< FTEN12 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN13_Pos              (13UL)                    /*!< FTEN13 (Bit 13)                                       */
#define EXTI_FTEN_FTEN13_Msk              (0x2000UL)                /*!< FTEN13 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN14_Pos              (14UL)                    /*!< FTEN14 (Bit 14)                                       */
#define EXTI_FTEN_FTEN14_Msk              (0x4000UL)                /*!< FTEN14 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN15_Pos              (15UL)                    /*!< FTEN15 (Bit 15)                                       */
#define EXTI_FTEN_FTEN15_Msk              (0x8000UL)                /*!< FTEN15 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN16_Pos              (16UL)                    /*!< FTEN16 (Bit 16)                                       */
#define EXTI_FTEN_FTEN16_Msk              (0x10000UL)               /*!< FTEN16 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN17_Pos              (17UL)                    /*!< FTEN17 (Bit 17)                                       */
#define EXTI_FTEN_FTEN17_Msk              (0x20000UL)               /*!< FTEN17 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN19_Pos              (19UL)                    /*!< FTEN19 (Bit 19)                                       */
#define EXTI_FTEN_FTEN19_Msk              (0x80000UL)               /*!< FTEN19 (Bitfield-Mask: 0x01)                          */
#define EXTI_FTEN_FTEN21_Pos              (21UL)                    /*!< FTEN21 (Bit 21)                                       */
#define EXTI_FTEN_FTEN21_Msk              (0x200000UL)              /*!< FTEN21 (Bitfield-Mask: 0x01)                          */
/* =========================================================  SWIEV  ========================================================= */
#define EXTI_SWIEV_SWIEV0_Pos             (0UL)                     /*!< SWIEV0 (Bit 0)                                        */
#define EXTI_SWIEV_SWIEV0_Msk             (0x1UL)                   /*!< SWIEV0 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV1_Pos             (1UL)                     /*!< SWIEV1 (Bit 1)                                        */
#define EXTI_SWIEV_SWIEV1_Msk             (0x2UL)                   /*!< SWIEV1 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV2_Pos             (2UL)                     /*!< SWIEV2 (Bit 2)                                        */
#define EXTI_SWIEV_SWIEV2_Msk             (0x4UL)                   /*!< SWIEV2 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV3_Pos             (3UL)                     /*!< SWIEV3 (Bit 3)                                        */
#define EXTI_SWIEV_SWIEV3_Msk             (0x8UL)                   /*!< SWIEV3 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV4_Pos             (4UL)                     /*!< SWIEV4 (Bit 4)                                        */
#define EXTI_SWIEV_SWIEV4_Msk             (0x10UL)                  /*!< SWIEV4 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV5_Pos             (5UL)                     /*!< SWIEV5 (Bit 5)                                        */
#define EXTI_SWIEV_SWIEV5_Msk             (0x20UL)                  /*!< SWIEV5 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV6_Pos             (6UL)                     /*!< SWIEV6 (Bit 6)                                        */
#define EXTI_SWIEV_SWIEV6_Msk             (0x40UL)                  /*!< SWIEV6 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV7_Pos             (7UL)                     /*!< SWIEV7 (Bit 7)                                        */
#define EXTI_SWIEV_SWIEV7_Msk             (0x80UL)                  /*!< SWIEV7 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV8_Pos             (8UL)                     /*!< SWIEV8 (Bit 8)                                        */
#define EXTI_SWIEV_SWIEV8_Msk             (0x100UL)                 /*!< SWIEV8 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV9_Pos             (9UL)                     /*!< SWIEV9 (Bit 9)                                        */
#define EXTI_SWIEV_SWIEV9_Msk             (0x200UL)                 /*!< SWIEV9 (Bitfield-Mask: 0x01)                          */
#define EXTI_SWIEV_SWIEV10_Pos            (10UL)                    /*!< SWIEV10 (Bit 10)                                      */
#define EXTI_SWIEV_SWIEV10_Msk            (0x400UL)                 /*!< SWIEV10 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV11_Pos            (11UL)                    /*!< SWIEV11 (Bit 11)                                      */
#define EXTI_SWIEV_SWIEV11_Msk            (0x800UL)                 /*!< SWIEV11 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV12_Pos            (12UL)                    /*!< SWIEV12 (Bit 12)                                      */
#define EXTI_SWIEV_SWIEV12_Msk            (0x1000UL)                /*!< SWIEV12 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV13_Pos            (13UL)                    /*!< SWIEV13 (Bit 13)                                      */
#define EXTI_SWIEV_SWIEV13_Msk            (0x2000UL)                /*!< SWIEV13 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV14_Pos            (14UL)                    /*!< SWIEV14 (Bit 14)                                      */
#define EXTI_SWIEV_SWIEV14_Msk            (0x4000UL)                /*!< SWIEV14 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV15_Pos            (15UL)                    /*!< SWIEV15 (Bit 15)                                      */
#define EXTI_SWIEV_SWIEV15_Msk            (0x8000UL)                /*!< SWIEV15 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV16_Pos            (16UL)                    /*!< SWIEV16 (Bit 16)                                      */
#define EXTI_SWIEV_SWIEV16_Msk            (0x10000UL)               /*!< SWIEV16 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV17_Pos            (17UL)                    /*!< SWIEV17 (Bit 17)                                      */
#define EXTI_SWIEV_SWIEV17_Msk            (0x20000UL)               /*!< SWIEV17 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV19_Pos            (19UL)                    /*!< SWIEV19 (Bit 19)                                      */
#define EXTI_SWIEV_SWIEV19_Msk            (0x80000UL)               /*!< SWIEV19 (Bitfield-Mask: 0x01)                         */
#define EXTI_SWIEV_SWIEV21_Pos            (21UL)                    /*!< SWIEV21 (Bit 21)                                      */
#define EXTI_SWIEV_SWIEV21_Msk            (0x200000UL)              /*!< SWIEV21 (Bitfield-Mask: 0x01)                         */
/* ==========================================================  PD  =========================================================== */
#define EXTI_PD_PD0_Pos                   (0UL)                     /*!< PD0 (Bit 0)                                           */
#define EXTI_PD_PD0_Msk                   (0x1UL)                   /*!< PD0 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD1_Pos                   (1UL)                     /*!< PD1 (Bit 1)                                           */
#define EXTI_PD_PD1_Msk                   (0x2UL)                   /*!< PD1 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD2_Pos                   (2UL)                     /*!< PD2 (Bit 2)                                           */
#define EXTI_PD_PD2_Msk                   (0x4UL)                   /*!< PD2 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD3_Pos                   (3UL)                     /*!< PD3 (Bit 3)                                           */
#define EXTI_PD_PD3_Msk                   (0x8UL)                   /*!< PD3 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD4_Pos                   (4UL)                     /*!< PD4 (Bit 4)                                           */
#define EXTI_PD_PD4_Msk                   (0x10UL)                  /*!< PD4 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD5_Pos                   (5UL)                     /*!< PD5 (Bit 5)                                           */
#define EXTI_PD_PD5_Msk                   (0x20UL)                  /*!< PD5 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD6_Pos                   (6UL)                     /*!< PD6 (Bit 6)                                           */
#define EXTI_PD_PD6_Msk                   (0x40UL)                  /*!< PD6 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD7_Pos                   (7UL)                     /*!< PD7 (Bit 7)                                           */
#define EXTI_PD_PD7_Msk                   (0x80UL)                  /*!< PD7 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD8_Pos                   (8UL)                     /*!< PD8 (Bit 8)                                           */
#define EXTI_PD_PD8_Msk                   (0x100UL)                 /*!< PD8 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD9_Pos                   (9UL)                     /*!< PD9 (Bit 9)                                           */
#define EXTI_PD_PD9_Msk                   (0x200UL)                 /*!< PD9 (Bitfield-Mask: 0x01)                             */
#define EXTI_PD_PD10_Pos                  (10UL)                    /*!< PD10 (Bit 10)                                         */
#define EXTI_PD_PD10_Msk                  (0x400UL)                 /*!< PD10 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD11_Pos                  (11UL)                    /*!< PD11 (Bit 11)                                         */
#define EXTI_PD_PD11_Msk                  (0x800UL)                 /*!< PD11 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD12_Pos                  (12UL)                    /*!< PD12 (Bit 12)                                         */
#define EXTI_PD_PD12_Msk                  (0x1000UL)                /*!< PD12 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD13_Pos                  (13UL)                    /*!< PD13 (Bit 13)                                         */
#define EXTI_PD_PD13_Msk                  (0x2000UL)                /*!< PD13 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD14_Pos                  (14UL)                    /*!< PD14 (Bit 14)                                         */
#define EXTI_PD_PD14_Msk                  (0x4000UL)                /*!< PD14 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD15_Pos                  (15UL)                    /*!< PD15 (Bit 15)                                         */
#define EXTI_PD_PD15_Msk                  (0x8000UL)                /*!< PD15 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD16_Pos                  (16UL)                    /*!< PD16 (Bit 16)                                         */
#define EXTI_PD_PD16_Msk                  (0x10000UL)               /*!< PD16 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD17_Pos                  (17UL)                    /*!< PD17 (Bit 17)                                         */
#define EXTI_PD_PD17_Msk                  (0x20000UL)               /*!< PD17 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD19_Pos                  (19UL)                    /*!< PD19 (Bit 19)                                         */
#define EXTI_PD_PD19_Msk                  (0x80000UL)               /*!< PD19 (Bitfield-Mask: 0x01)                            */
#define EXTI_PD_PD21_Pos                  (21UL)                    /*!< PD21 (Bit 21)                                         */
#define EXTI_PD_PD21_Msk                  (0x200000UL)              /*!< PD21 (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                            FMC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  WS  =========================================================== */
#define FMC_WS_WSCNT_Pos                  (0UL)                     /*!< WSCNT (Bit 0)                                         */
#define FMC_WS_WSCNT_Msk                  (0x7UL)                   /*!< WSCNT (Bitfield-Mask: 0x07)                           */
#define FMC_WS_PFEN_Pos                   (4UL)                     /*!< PFEN (Bit 4)                                          */
#define FMC_WS_PFEN_Msk                   (0x10UL)                  /*!< PFEN (Bitfield-Mask: 0x01)                            */
#define FMC_WS_PGW_Pos                    (15UL)                    /*!< PGW (Bit 15)                                          */
#define FMC_WS_PGW_Msk                    (0x8000UL)                /*!< PGW (Bitfield-Mask: 0x01)                             */
/* ==========================================================  KEY  ========================================================== */
#define FMC_KEY_KEY_Pos                   (0UL)                     /*!< KEY (Bit 0)                                           */
#define FMC_KEY_KEY_Msk                   (0xffffffffUL)            /*!< KEY (Bitfield-Mask: 0xffffffff)                       */
/* =========================================================  OBKEY  ========================================================= */
#define FMC_OBKEY_OBKEY_Pos               (0UL)                     /*!< OBKEY (Bit 0)                                         */
#define FMC_OBKEY_OBKEY_Msk               (0xffffffffUL)            /*!< OBKEY (Bitfield-Mask: 0xffffffff)                     */
/* =========================================================  STAT  ========================================================== */
#define FMC_STAT_ENDF_Pos                 (5UL)                     /*!< ENDF (Bit 5)                                          */
#define FMC_STAT_ENDF_Msk                 (0x20UL)                  /*!< ENDF (Bitfield-Mask: 0x01)                            */
#define FMC_STAT_WPERR_Pos                (4UL)                     /*!< WPERR (Bit 4)                                         */
#define FMC_STAT_WPERR_Msk                (0x10UL)                  /*!< WPERR (Bitfield-Mask: 0x01)                           */
#define FMC_STAT_PGAERR_Pos               (3UL)                     /*!< PGAERR (Bit 3)                                        */
#define FMC_STAT_PGAERR_Msk               (0x8UL)                   /*!< PGAERR (Bitfield-Mask: 0x01)                          */
#define FMC_STAT_PGERR_Pos                (2UL)                     /*!< PGERR (Bit 2)                                         */
#define FMC_STAT_PGERR_Msk                (0x4UL)                   /*!< PGERR (Bitfield-Mask: 0x01)                           */
#define FMC_STAT_BUSY_Pos                 (0UL)                     /*!< BUSY (Bit 0)                                          */
#define FMC_STAT_BUSY_Msk                 (0x1UL)                   /*!< BUSY (Bitfield-Mask: 0x01)                            */
/* ==========================================================  CTL  ========================================================== */
#define FMC_CTL_OBRLD_Pos                 (13UL)                    /*!< OBRLD (Bit 13)                                        */
#define FMC_CTL_OBRLD_Msk                 (0x2000UL)                /*!< OBRLD (Bitfield-Mask: 0x01)                           */
#define FMC_CTL_ENDIE_Pos                 (12UL)                    /*!< ENDIE (Bit 12)                                        */
#define FMC_CTL_ENDIE_Msk                 (0x1000UL)                /*!< ENDIE (Bitfield-Mask: 0x01)                           */
#define FMC_CTL_ERRIE_Pos                 (10UL)                    /*!< ERRIE (Bit 10)                                        */
#define FMC_CTL_ERRIE_Msk                 (0x400UL)                 /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define FMC_CTL_OBWEN_Pos                 (9UL)                     /*!< OBWEN (Bit 9)                                         */
#define FMC_CTL_OBWEN_Msk                 (0x200UL)                 /*!< OBWEN (Bitfield-Mask: 0x01)                           */
#define FMC_CTL_LK_Pos                    (7UL)                     /*!< LK (Bit 7)                                            */
#define FMC_CTL_LK_Msk                    (0x80UL)                  /*!< LK (Bitfield-Mask: 0x01)                              */
#define FMC_CTL_START_Pos                 (6UL)                     /*!< START (Bit 6)                                         */
#define FMC_CTL_START_Msk                 (0x40UL)                  /*!< START (Bitfield-Mask: 0x01)                           */
#define FMC_CTL_OBER_Pos                  (5UL)                     /*!< OBER (Bit 5)                                          */
#define FMC_CTL_OBER_Msk                  (0x20UL)                  /*!< OBER (Bitfield-Mask: 0x01)                            */
#define FMC_CTL_OBPG_Pos                  (4UL)                     /*!< OBPG (Bit 4)                                          */
#define FMC_CTL_OBPG_Msk                  (0x10UL)                  /*!< OBPG (Bitfield-Mask: 0x01)                            */
#define FMC_CTL_MER_Pos                   (2UL)                     /*!< MER (Bit 2)                                           */
#define FMC_CTL_MER_Msk                   (0x4UL)                   /*!< MER (Bitfield-Mask: 0x01)                             */
#define FMC_CTL_PER_Pos                   (1UL)                     /*!< PER (Bit 1)                                           */
#define FMC_CTL_PER_Msk                   (0x2UL)                   /*!< PER (Bitfield-Mask: 0x01)                             */
#define FMC_CTL_PG_Pos                    (0UL)                     /*!< PG (Bit 0)                                            */
#define FMC_CTL_PG_Msk                    (0x1UL)                   /*!< PG (Bitfield-Mask: 0x01)                              */
/* =========================================================  ADDR  ========================================================== */
#define FMC_ADDR_ADDR_Pos                 (0UL)                     /*!< ADDR (Bit 0)                                          */
#define FMC_ADDR_ADDR_Msk                 (0xffffffffUL)            /*!< ADDR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  OBSTAT  ========================================================= */
#define FMC_OBSTAT_OBERR_Pos              (0UL)                     /*!< OBERR (Bit 0)                                         */
#define FMC_OBSTAT_OBERR_Msk              (0x1UL)                   /*!< OBERR (Bitfield-Mask: 0x01)                           */
#define FMC_OBSTAT_PLEVEL_Pos             (1UL)                     /*!< PLEVEL (Bit 1)                                        */
#define FMC_OBSTAT_PLEVEL_Msk             (0x6UL)                   /*!< PLEVEL (Bitfield-Mask: 0x03)                          */
#define FMC_OBSTAT_USER_Pos               (8UL)                     /*!< USER (Bit 8)                                          */
#define FMC_OBSTAT_USER_Msk               (0xff00UL)                /*!< USER (Bitfield-Mask: 0xff)                            */
#define FMC_OBSTAT_DATA_Pos               (16UL)                    /*!< DATA (Bit 16)                                         */
#define FMC_OBSTAT_DATA_Msk               (0xffff0000UL)            /*!< DATA (Bitfield-Mask: 0xffff)                          */
/* ==========================================================  WP  =========================================================== */
#define FMC_WP_WP_Pos                     (0UL)                     /*!< WP (Bit 0)                                            */
#define FMC_WP_WP_Msk                     (0xffffUL)                /*!< WP (Bitfield-Mask: 0xffff)                            */
/* ==========================================================  PID  ========================================================== */
#define FMC_PID_PID_Pos                   (0UL)                     /*!< PID (Bit 0)                                           */
#define FMC_PID_PID_Msk                   (0xffffffffUL)            /*!< PID (Bitfield-Mask: 0xffffffff)                       */


/* =========================================================================================================================== */
/* ================                                           FWDGT                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define FWDGT_CTL_CMD_Pos                 (0UL)                     /*!< CMD (Bit 0)                                           */
#define FWDGT_CTL_CMD_Msk                 (0xffffUL)                /*!< CMD (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define FWDGT_PSC_PSC_Pos                 (0UL)                     /*!< PSC (Bit 0)                                           */
#define FWDGT_PSC_PSC_Msk                 (0x7UL)                   /*!< PSC (Bitfield-Mask: 0x07)                             */
/* ==========================================================  RLD  ========================================================== */
#define FWDGT_RLD_RLD_Pos                 (0UL)                     /*!< RLD (Bit 0)                                           */
#define FWDGT_RLD_RLD_Msk                 (0xfffUL)                 /*!< RLD (Bitfield-Mask: 0xfff)                            */
/* =========================================================  STAT  ========================================================== */
#define FWDGT_STAT_PUD_Pos                (0UL)                     /*!< PUD (Bit 0)                                           */
#define FWDGT_STAT_PUD_Msk                (0x1UL)                   /*!< PUD (Bitfield-Mask: 0x01)                             */
#define FWDGT_STAT_RUD_Pos                (1UL)                     /*!< RUD (Bit 1)                                           */
#define FWDGT_STAT_RUD_Msk                (0x2UL)                   /*!< RUD (Bitfield-Mask: 0x01)                             */
#define FWDGT_STAT_WUD_Pos                (2UL)                     /*!< WUD (Bit 2)                                           */
#define FWDGT_STAT_WUD_Msk                (0x4UL)                   /*!< WUD (Bitfield-Mask: 0x01)                             */
/* ==========================================================  WND  ========================================================== */
#define FWDGT_WND_WND_Pos                 (0UL)                     /*!< WND (Bit 0)                                           */
#define FWDGT_WND_WND_Msk                 (0xfffUL)                 /*!< WND (Bitfield-Mask: 0xfff)                            */


/* =========================================================================================================================== */
/* ================                                           GPIOA                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define GPIOA_CTL_CTL15_Pos               (30UL)                    /*!< CTL15 (Bit 30)                                        */
#define GPIOA_CTL_CTL15_Msk               (0xc0000000UL)            /*!< CTL15 (Bitfield-Mask: 0x03)                           */
#define GPIOA_CTL_CTL14_Pos               (28UL)                    /*!< CTL14 (Bit 28)                                        */
#define GPIOA_CTL_CTL14_Msk               (0x30000000UL)            /*!< CTL14 (Bitfield-Mask: 0x03)                           */
#define GPIOA_CTL_CTL13_Pos               (26UL)                    /*!< CTL13 (Bit 26)                                        */
#define GPIOA_CTL_CTL13_Msk               (0xc000000UL)             /*!< CTL13 (Bitfield-Mask: 0x03)                           */
#define GPIOA_CTL_CTL12_Pos               (24UL)                    /*!< CTL12 (Bit 24)                                        */
#define GPIOA_CTL_CTL12_Msk               (0x3000000UL)             /*!< CTL12 (Bitfield-Mask: 0x03)                           */
#define GPIOA_CTL_CTL11_Pos               (22UL)                    /*!< CTL11 (Bit 22)                                        */
#define GPIOA_CTL_CTL11_Msk               (0xc00000UL)              /*!< CTL11 (Bitfield-Mask: 0x03)                           */
#define GPIOA_CTL_CTL10_Pos               (20UL)                    /*!< CTL10 (Bit 20)                                        */
#define GPIOA_CTL_CTL10_Msk               (0x300000UL)              /*!< CTL10 (Bitfield-Mask: 0x03)                           */
#define GPIOA_CTL_CTL9_Pos                (18UL)                    /*!< CTL9 (Bit 18)                                         */
#define GPIOA_CTL_CTL9_Msk                (0xc0000UL)               /*!< CTL9 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL8_Pos                (16UL)                    /*!< CTL8 (Bit 16)                                         */
#define GPIOA_CTL_CTL8_Msk                (0x30000UL)               /*!< CTL8 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL7_Pos                (14UL)                    /*!< CTL7 (Bit 14)                                         */
#define GPIOA_CTL_CTL7_Msk                (0xc000UL)                /*!< CTL7 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL6_Pos                (12UL)                    /*!< CTL6 (Bit 12)                                         */
#define GPIOA_CTL_CTL6_Msk                (0x3000UL)                /*!< CTL6 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL5_Pos                (10UL)                    /*!< CTL5 (Bit 10)                                         */
#define GPIOA_CTL_CTL5_Msk                (0xc00UL)                 /*!< CTL5 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL4_Pos                (8UL)                     /*!< CTL4 (Bit 8)                                          */
#define GPIOA_CTL_CTL4_Msk                (0x300UL)                 /*!< CTL4 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL3_Pos                (6UL)                     /*!< CTL3 (Bit 6)                                          */
#define GPIOA_CTL_CTL3_Msk                (0xc0UL)                  /*!< CTL3 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL2_Pos                (4UL)                     /*!< CTL2 (Bit 4)                                          */
#define GPIOA_CTL_CTL2_Msk                (0x30UL)                  /*!< CTL2 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL1_Pos                (2UL)                     /*!< CTL1 (Bit 2)                                          */
#define GPIOA_CTL_CTL1_Msk                (0xcUL)                   /*!< CTL1 (Bitfield-Mask: 0x03)                            */
#define GPIOA_CTL_CTL0_Pos                (0UL)                     /*!< CTL0 (Bit 0)                                          */
#define GPIOA_CTL_CTL0_Msk                (0x3UL)                   /*!< CTL0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  OMODE  ========================================================= */
#define GPIOA_OMODE_OM15_Pos              (15UL)                    /*!< OM15 (Bit 15)                                         */
#define GPIOA_OMODE_OM15_Msk              (0x8000UL)                /*!< OM15 (Bitfield-Mask: 0x01)                            */
#define GPIOA_OMODE_OM14_Pos              (14UL)                    /*!< OM14 (Bit 14)                                         */
#define GPIOA_OMODE_OM14_Msk              (0x4000UL)                /*!< OM14 (Bitfield-Mask: 0x01)                            */
#define GPIOA_OMODE_OM13_Pos              (13UL)                    /*!< OM13 (Bit 13)                                         */
#define GPIOA_OMODE_OM13_Msk              (0x2000UL)                /*!< OM13 (Bitfield-Mask: 0x01)                            */
#define GPIOA_OMODE_OM12_Pos              (12UL)                    /*!< OM12 (Bit 12)                                         */
#define GPIOA_OMODE_OM12_Msk              (0x1000UL)                /*!< OM12 (Bitfield-Mask: 0x01)                            */
#define GPIOA_OMODE_OM11_Pos              (11UL)                    /*!< OM11 (Bit 11)                                         */
#define GPIOA_OMODE_OM11_Msk              (0x800UL)                 /*!< OM11 (Bitfield-Mask: 0x01)                            */
#define GPIOA_OMODE_OM10_Pos              (10UL)                    /*!< OM10 (Bit 10)                                         */
#define GPIOA_OMODE_OM10_Msk              (0x400UL)                 /*!< OM10 (Bitfield-Mask: 0x01)                            */
#define GPIOA_OMODE_OM9_Pos               (9UL)                     /*!< OM9 (Bit 9)                                           */
#define GPIOA_OMODE_OM9_Msk               (0x200UL)                 /*!< OM9 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM8_Pos               (8UL)                     /*!< OM8 (Bit 8)                                           */
#define GPIOA_OMODE_OM8_Msk               (0x100UL)                 /*!< OM8 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM7_Pos               (7UL)                     /*!< OM7 (Bit 7)                                           */
#define GPIOA_OMODE_OM7_Msk               (0x80UL)                  /*!< OM7 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM6_Pos               (6UL)                     /*!< OM6 (Bit 6)                                           */
#define GPIOA_OMODE_OM6_Msk               (0x40UL)                  /*!< OM6 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM5_Pos               (5UL)                     /*!< OM5 (Bit 5)                                           */
#define GPIOA_OMODE_OM5_Msk               (0x20UL)                  /*!< OM5 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM4_Pos               (4UL)                     /*!< OM4 (Bit 4)                                           */
#define GPIOA_OMODE_OM4_Msk               (0x10UL)                  /*!< OM4 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM3_Pos               (3UL)                     /*!< OM3 (Bit 3)                                           */
#define GPIOA_OMODE_OM3_Msk               (0x8UL)                   /*!< OM3 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM2_Pos               (2UL)                     /*!< OM2 (Bit 2)                                           */
#define GPIOA_OMODE_OM2_Msk               (0x4UL)                   /*!< OM2 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM1_Pos               (1UL)                     /*!< OM1 (Bit 1)                                           */
#define GPIOA_OMODE_OM1_Msk               (0x2UL)                   /*!< OM1 (Bitfield-Mask: 0x01)                             */
#define GPIOA_OMODE_OM0_Pos               (0UL)                     /*!< OM0 (Bit 0)                                           */
#define GPIOA_OMODE_OM0_Msk               (0x1UL)                   /*!< OM0 (Bitfield-Mask: 0x01)                             */
/* =========================================================  OSPD  ========================================================== */
#define GPIOA_OSPD_OSPD15_Pos             (30UL)                    /*!< OSPD15 (Bit 30)                                       */
#define GPIOA_OSPD_OSPD15_Msk             (0xc0000000UL)            /*!< OSPD15 (Bitfield-Mask: 0x03)                          */
#define GPIOA_OSPD_OSPD14_Pos             (28UL)                    /*!< OSPD14 (Bit 28)                                       */
#define GPIOA_OSPD_OSPD14_Msk             (0x30000000UL)            /*!< OSPD14 (Bitfield-Mask: 0x03)                          */
#define GPIOA_OSPD_OSPD13_Pos             (26UL)                    /*!< OSPD13 (Bit 26)                                       */
#define GPIOA_OSPD_OSPD13_Msk             (0xc000000UL)             /*!< OSPD13 (Bitfield-Mask: 0x03)                          */
#define GPIOA_OSPD_OSPD12_Pos             (24UL)                    /*!< OSPD12 (Bit 24)                                       */
#define GPIOA_OSPD_OSPD12_Msk             (0x3000000UL)             /*!< OSPD12 (Bitfield-Mask: 0x03)                          */
#define GPIOA_OSPD_OSPD11_Pos             (22UL)                    /*!< OSPD11 (Bit 22)                                       */
#define GPIOA_OSPD_OSPD11_Msk             (0xc00000UL)              /*!< OSPD11 (Bitfield-Mask: 0x03)                          */
#define GPIOA_OSPD_OSPD10_Pos             (20UL)                    /*!< OSPD10 (Bit 20)                                       */
#define GPIOA_OSPD_OSPD10_Msk             (0x300000UL)              /*!< OSPD10 (Bitfield-Mask: 0x03)                          */
#define GPIOA_OSPD_OSPD9_Pos              (18UL)                    /*!< OSPD9 (Bit 18)                                        */
#define GPIOA_OSPD_OSPD9_Msk              (0xc0000UL)               /*!< OSPD9 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD8_Pos              (16UL)                    /*!< OSPD8 (Bit 16)                                        */
#define GPIOA_OSPD_OSPD8_Msk              (0x30000UL)               /*!< OSPD8 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD7_Pos              (14UL)                    /*!< OSPD7 (Bit 14)                                        */
#define GPIOA_OSPD_OSPD7_Msk              (0xc000UL)                /*!< OSPD7 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD6_Pos              (12UL)                    /*!< OSPD6 (Bit 12)                                        */
#define GPIOA_OSPD_OSPD6_Msk              (0x3000UL)                /*!< OSPD6 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD5_Pos              (10UL)                    /*!< OSPD5 (Bit 10)                                        */
#define GPIOA_OSPD_OSPD5_Msk              (0xc00UL)                 /*!< OSPD5 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD4_Pos              (8UL)                     /*!< OSPD4 (Bit 8)                                         */
#define GPIOA_OSPD_OSPD4_Msk              (0x300UL)                 /*!< OSPD4 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD3_Pos              (6UL)                     /*!< OSPD3 (Bit 6)                                         */
#define GPIOA_OSPD_OSPD3_Msk              (0xc0UL)                  /*!< OSPD3 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD2_Pos              (4UL)                     /*!< OSPD2 (Bit 4)                                         */
#define GPIOA_OSPD_OSPD2_Msk              (0x30UL)                  /*!< OSPD2 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD1_Pos              (2UL)                     /*!< OSPD1 (Bit 2)                                         */
#define GPIOA_OSPD_OSPD1_Msk              (0xcUL)                   /*!< OSPD1 (Bitfield-Mask: 0x03)                           */
#define GPIOA_OSPD_OSPD0_Pos              (0UL)                     /*!< OSPD0 (Bit 0)                                         */
#define GPIOA_OSPD_OSPD0_Msk              (0x3UL)                   /*!< OSPD0 (Bitfield-Mask: 0x03)                           */
/* ==========================================================  PUD  ========================================================== */
#define GPIOA_PUD_PUD15_Pos               (30UL)                    /*!< PUD15 (Bit 30)                                        */
#define GPIOA_PUD_PUD15_Msk               (0xc0000000UL)            /*!< PUD15 (Bitfield-Mask: 0x03)                           */
#define GPIOA_PUD_PUD14_Pos               (28UL)                    /*!< PUD14 (Bit 28)                                        */
#define GPIOA_PUD_PUD14_Msk               (0x30000000UL)            /*!< PUD14 (Bitfield-Mask: 0x03)                           */
#define GPIOA_PUD_PUD13_Pos               (26UL)                    /*!< PUD13 (Bit 26)                                        */
#define GPIOA_PUD_PUD13_Msk               (0xc000000UL)             /*!< PUD13 (Bitfield-Mask: 0x03)                           */
#define GPIOA_PUD_PUD12_Pos               (24UL)                    /*!< PUD12 (Bit 24)                                        */
#define GPIOA_PUD_PUD12_Msk               (0x3000000UL)             /*!< PUD12 (Bitfield-Mask: 0x03)                           */
#define GPIOA_PUD_PUD11_Pos               (22UL)                    /*!< PUD11 (Bit 22)                                        */
#define GPIOA_PUD_PUD11_Msk               (0xc00000UL)              /*!< PUD11 (Bitfield-Mask: 0x03)                           */
#define GPIOA_PUD_PUD10_Pos               (20UL)                    /*!< PUD10 (Bit 20)                                        */
#define GPIOA_PUD_PUD10_Msk               (0x300000UL)              /*!< PUD10 (Bitfield-Mask: 0x03)                           */
#define GPIOA_PUD_PUD9_Pos                (18UL)                    /*!< PUD9 (Bit 18)                                         */
#define GPIOA_PUD_PUD9_Msk                (0xc0000UL)               /*!< PUD9 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD8_Pos                (16UL)                    /*!< PUD8 (Bit 16)                                         */
#define GPIOA_PUD_PUD8_Msk                (0x30000UL)               /*!< PUD8 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD7_Pos                (14UL)                    /*!< PUD7 (Bit 14)                                         */
#define GPIOA_PUD_PUD7_Msk                (0xc000UL)                /*!< PUD7 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD6_Pos                (12UL)                    /*!< PUD6 (Bit 12)                                         */
#define GPIOA_PUD_PUD6_Msk                (0x3000UL)                /*!< PUD6 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD5_Pos                (10UL)                    /*!< PUD5 (Bit 10)                                         */
#define GPIOA_PUD_PUD5_Msk                (0xc00UL)                 /*!< PUD5 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD4_Pos                (8UL)                     /*!< PUD4 (Bit 8)                                          */
#define GPIOA_PUD_PUD4_Msk                (0x300UL)                 /*!< PUD4 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD3_Pos                (6UL)                     /*!< PUD3 (Bit 6)                                          */
#define GPIOA_PUD_PUD3_Msk                (0xc0UL)                  /*!< PUD3 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD2_Pos                (4UL)                     /*!< PUD2 (Bit 4)                                          */
#define GPIOA_PUD_PUD2_Msk                (0x30UL)                  /*!< PUD2 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD1_Pos                (2UL)                     /*!< PUD1 (Bit 2)                                          */
#define GPIOA_PUD_PUD1_Msk                (0xcUL)                   /*!< PUD1 (Bitfield-Mask: 0x03)                            */
#define GPIOA_PUD_PUD0_Pos                (0UL)                     /*!< PUD0 (Bit 0)                                          */
#define GPIOA_PUD_PUD0_Msk                (0x3UL)                   /*!< PUD0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  ISTAT  ========================================================= */
#define GPIOA_ISTAT_ISTAT15_Pos           (15UL)                    /*!< ISTAT15 (Bit 15)                                      */
#define GPIOA_ISTAT_ISTAT15_Msk           (0x8000UL)                /*!< ISTAT15 (Bitfield-Mask: 0x01)                         */
#define GPIOA_ISTAT_ISTAT14_Pos           (14UL)                    /*!< ISTAT14 (Bit 14)                                      */
#define GPIOA_ISTAT_ISTAT14_Msk           (0x4000UL)                /*!< ISTAT14 (Bitfield-Mask: 0x01)                         */
#define GPIOA_ISTAT_ISTAT13_Pos           (13UL)                    /*!< ISTAT13 (Bit 13)                                      */
#define GPIOA_ISTAT_ISTAT13_Msk           (0x2000UL)                /*!< ISTAT13 (Bitfield-Mask: 0x01)                         */
#define GPIOA_ISTAT_ISTAT12_Pos           (12UL)                    /*!< ISTAT12 (Bit 12)                                      */
#define GPIOA_ISTAT_ISTAT12_Msk           (0x1000UL)                /*!< ISTAT12 (Bitfield-Mask: 0x01)                         */
#define GPIOA_ISTAT_ISTAT11_Pos           (11UL)                    /*!< ISTAT11 (Bit 11)                                      */
#define GPIOA_ISTAT_ISTAT11_Msk           (0x800UL)                 /*!< ISTAT11 (Bitfield-Mask: 0x01)                         */
#define GPIOA_ISTAT_ISTAT10_Pos           (10UL)                    /*!< ISTAT10 (Bit 10)                                      */
#define GPIOA_ISTAT_ISTAT10_Msk           (0x400UL)                 /*!< ISTAT10 (Bitfield-Mask: 0x01)                         */
#define GPIOA_ISTAT_ISTAT9_Pos            (9UL)                     /*!< ISTAT9 (Bit 9)                                        */
#define GPIOA_ISTAT_ISTAT9_Msk            (0x200UL)                 /*!< ISTAT9 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT8_Pos            (8UL)                     /*!< ISTAT8 (Bit 8)                                        */
#define GPIOA_ISTAT_ISTAT8_Msk            (0x100UL)                 /*!< ISTAT8 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT7_Pos            (7UL)                     /*!< ISTAT7 (Bit 7)                                        */
#define GPIOA_ISTAT_ISTAT7_Msk            (0x80UL)                  /*!< ISTAT7 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT6_Pos            (6UL)                     /*!< ISTAT6 (Bit 6)                                        */
#define GPIOA_ISTAT_ISTAT6_Msk            (0x40UL)                  /*!< ISTAT6 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT5_Pos            (5UL)                     /*!< ISTAT5 (Bit 5)                                        */
#define GPIOA_ISTAT_ISTAT5_Msk            (0x20UL)                  /*!< ISTAT5 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT4_Pos            (4UL)                     /*!< ISTAT4 (Bit 4)                                        */
#define GPIOA_ISTAT_ISTAT4_Msk            (0x10UL)                  /*!< ISTAT4 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT3_Pos            (3UL)                     /*!< ISTAT3 (Bit 3)                                        */
#define GPIOA_ISTAT_ISTAT3_Msk            (0x8UL)                   /*!< ISTAT3 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT2_Pos            (2UL)                     /*!< ISTAT2 (Bit 2)                                        */
#define GPIOA_ISTAT_ISTAT2_Msk            (0x4UL)                   /*!< ISTAT2 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT1_Pos            (1UL)                     /*!< ISTAT1 (Bit 1)                                        */
#define GPIOA_ISTAT_ISTAT1_Msk            (0x2UL)                   /*!< ISTAT1 (Bitfield-Mask: 0x01)                          */
#define GPIOA_ISTAT_ISTAT0_Pos            (0UL)                     /*!< ISTAT0 (Bit 0)                                        */
#define GPIOA_ISTAT_ISTAT0_Msk            (0x1UL)                   /*!< ISTAT0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  OCTL  ========================================================== */
#define GPIOA_OCTL_OCTL15_Pos             (15UL)                    /*!< OCTL15 (Bit 15)                                       */
#define GPIOA_OCTL_OCTL15_Msk             (0x8000UL)                /*!< OCTL15 (Bitfield-Mask: 0x01)                          */
#define GPIOA_OCTL_OCTL14_Pos             (14UL)                    /*!< OCTL14 (Bit 14)                                       */
#define GPIOA_OCTL_OCTL14_Msk             (0x4000UL)                /*!< OCTL14 (Bitfield-Mask: 0x01)                          */
#define GPIOA_OCTL_OCTL13_Pos             (13UL)                    /*!< OCTL13 (Bit 13)                                       */
#define GPIOA_OCTL_OCTL13_Msk             (0x2000UL)                /*!< OCTL13 (Bitfield-Mask: 0x01)                          */
#define GPIOA_OCTL_OCTL12_Pos             (12UL)                    /*!< OCTL12 (Bit 12)                                       */
#define GPIOA_OCTL_OCTL12_Msk             (0x1000UL)                /*!< OCTL12 (Bitfield-Mask: 0x01)                          */
#define GPIOA_OCTL_OCTL11_Pos             (11UL)                    /*!< OCTL11 (Bit 11)                                       */
#define GPIOA_OCTL_OCTL11_Msk             (0x800UL)                 /*!< OCTL11 (Bitfield-Mask: 0x01)                          */
#define GPIOA_OCTL_OCTL10_Pos             (10UL)                    /*!< OCTL10 (Bit 10)                                       */
#define GPIOA_OCTL_OCTL10_Msk             (0x400UL)                 /*!< OCTL10 (Bitfield-Mask: 0x01)                          */
#define GPIOA_OCTL_OCTL9_Pos              (9UL)                     /*!< OCTL9 (Bit 9)                                         */
#define GPIOA_OCTL_OCTL9_Msk              (0x200UL)                 /*!< OCTL9 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL8_Pos              (8UL)                     /*!< OCTL8 (Bit 8)                                         */
#define GPIOA_OCTL_OCTL8_Msk              (0x100UL)                 /*!< OCTL8 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL7_Pos              (7UL)                     /*!< OCTL7 (Bit 7)                                         */
#define GPIOA_OCTL_OCTL7_Msk              (0x80UL)                  /*!< OCTL7 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL6_Pos              (6UL)                     /*!< OCTL6 (Bit 6)                                         */
#define GPIOA_OCTL_OCTL6_Msk              (0x40UL)                  /*!< OCTL6 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL5_Pos              (5UL)                     /*!< OCTL5 (Bit 5)                                         */
#define GPIOA_OCTL_OCTL5_Msk              (0x20UL)                  /*!< OCTL5 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL4_Pos              (4UL)                     /*!< OCTL4 (Bit 4)                                         */
#define GPIOA_OCTL_OCTL4_Msk              (0x10UL)                  /*!< OCTL4 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL3_Pos              (3UL)                     /*!< OCTL3 (Bit 3)                                         */
#define GPIOA_OCTL_OCTL3_Msk              (0x8UL)                   /*!< OCTL3 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL2_Pos              (2UL)                     /*!< OCTL2 (Bit 2)                                         */
#define GPIOA_OCTL_OCTL2_Msk              (0x4UL)                   /*!< OCTL2 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL1_Pos              (1UL)                     /*!< OCTL1 (Bit 1)                                         */
#define GPIOA_OCTL_OCTL1_Msk              (0x2UL)                   /*!< OCTL1 (Bitfield-Mask: 0x01)                           */
#define GPIOA_OCTL_OCTL0_Pos              (0UL)                     /*!< OCTL0 (Bit 0)                                         */
#define GPIOA_OCTL_OCTL0_Msk              (0x1UL)                   /*!< OCTL0 (Bitfield-Mask: 0x01)                           */
/* ==========================================================  BOP  ========================================================== */
#define GPIOA_BOP_CR15_Pos                (31UL)                    /*!< CR15 (Bit 31)                                         */
#define GPIOA_BOP_CR15_Msk                (0x80000000UL)            /*!< CR15 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_CR14_Pos                (30UL)                    /*!< CR14 (Bit 30)                                         */
#define GPIOA_BOP_CR14_Msk                (0x40000000UL)            /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_CR13_Pos                (29UL)                    /*!< CR13 (Bit 29)                                         */
#define GPIOA_BOP_CR13_Msk                (0x20000000UL)            /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_CR12_Pos                (28UL)                    /*!< CR12 (Bit 28)                                         */
#define GPIOA_BOP_CR12_Msk                (0x10000000UL)            /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_CR11_Pos                (27UL)                    /*!< CR11 (Bit 27)                                         */
#define GPIOA_BOP_CR11_Msk                (0x8000000UL)             /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_CR10_Pos                (26UL)                    /*!< CR10 (Bit 26)                                         */
#define GPIOA_BOP_CR10_Msk                (0x4000000UL)             /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_CR9_Pos                 (25UL)                    /*!< CR9 (Bit 25)                                          */
#define GPIOA_BOP_CR9_Msk                 (0x2000000UL)             /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR8_Pos                 (24UL)                    /*!< CR8 (Bit 24)                                          */
#define GPIOA_BOP_CR8_Msk                 (0x1000000UL)             /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR7_Pos                 (23UL)                    /*!< CR7 (Bit 23)                                          */
#define GPIOA_BOP_CR7_Msk                 (0x800000UL)              /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR6_Pos                 (22UL)                    /*!< CR6 (Bit 22)                                          */
#define GPIOA_BOP_CR6_Msk                 (0x400000UL)              /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR5_Pos                 (21UL)                    /*!< CR5 (Bit 21)                                          */
#define GPIOA_BOP_CR5_Msk                 (0x200000UL)              /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR4_Pos                 (20UL)                    /*!< CR4 (Bit 20)                                          */
#define GPIOA_BOP_CR4_Msk                 (0x100000UL)              /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR3_Pos                 (19UL)                    /*!< CR3 (Bit 19)                                          */
#define GPIOA_BOP_CR3_Msk                 (0x80000UL)               /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR2_Pos                 (18UL)                    /*!< CR2 (Bit 18)                                          */
#define GPIOA_BOP_CR2_Msk                 (0x40000UL)               /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR1_Pos                 (17UL)                    /*!< CR1 (Bit 17)                                          */
#define GPIOA_BOP_CR1_Msk                 (0x20000UL)               /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_CR0_Pos                 (16UL)                    /*!< CR0 (Bit 16)                                          */
#define GPIOA_BOP_CR0_Msk                 (0x10000UL)               /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BOP_BOP15_Pos               (15UL)                    /*!< BOP15 (Bit 15)                                        */
#define GPIOA_BOP_BOP15_Msk               (0x8000UL)                /*!< BOP15 (Bitfield-Mask: 0x01)                           */
#define GPIOA_BOP_BOP14_Pos               (14UL)                    /*!< BOP14 (Bit 14)                                        */
#define GPIOA_BOP_BOP14_Msk               (0x4000UL)                /*!< BOP14 (Bitfield-Mask: 0x01)                           */
#define GPIOA_BOP_BOP13_Pos               (13UL)                    /*!< BOP13 (Bit 13)                                        */
#define GPIOA_BOP_BOP13_Msk               (0x2000UL)                /*!< BOP13 (Bitfield-Mask: 0x01)                           */
#define GPIOA_BOP_BOP12_Pos               (12UL)                    /*!< BOP12 (Bit 12)                                        */
#define GPIOA_BOP_BOP12_Msk               (0x1000UL)                /*!< BOP12 (Bitfield-Mask: 0x01)                           */
#define GPIOA_BOP_BOP11_Pos               (11UL)                    /*!< BOP11 (Bit 11)                                        */
#define GPIOA_BOP_BOP11_Msk               (0x800UL)                 /*!< BOP11 (Bitfield-Mask: 0x01)                           */
#define GPIOA_BOP_BOP10_Pos               (10UL)                    /*!< BOP10 (Bit 10)                                        */
#define GPIOA_BOP_BOP10_Msk               (0x400UL)                 /*!< BOP10 (Bitfield-Mask: 0x01)                           */
#define GPIOA_BOP_BOP9_Pos                (9UL)                     /*!< BOP9 (Bit 9)                                          */
#define GPIOA_BOP_BOP9_Msk                (0x200UL)                 /*!< BOP9 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP8_Pos                (8UL)                     /*!< BOP8 (Bit 8)                                          */
#define GPIOA_BOP_BOP8_Msk                (0x100UL)                 /*!< BOP8 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP7_Pos                (7UL)                     /*!< BOP7 (Bit 7)                                          */
#define GPIOA_BOP_BOP7_Msk                (0x80UL)                  /*!< BOP7 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP6_Pos                (6UL)                     /*!< BOP6 (Bit 6)                                          */
#define GPIOA_BOP_BOP6_Msk                (0x40UL)                  /*!< BOP6 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP5_Pos                (5UL)                     /*!< BOP5 (Bit 5)                                          */
#define GPIOA_BOP_BOP5_Msk                (0x20UL)                  /*!< BOP5 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP4_Pos                (4UL)                     /*!< BOP4 (Bit 4)                                          */
#define GPIOA_BOP_BOP4_Msk                (0x10UL)                  /*!< BOP4 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP3_Pos                (3UL)                     /*!< BOP3 (Bit 3)                                          */
#define GPIOA_BOP_BOP3_Msk                (0x8UL)                   /*!< BOP3 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP2_Pos                (2UL)                     /*!< BOP2 (Bit 2)                                          */
#define GPIOA_BOP_BOP2_Msk                (0x4UL)                   /*!< BOP2 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP1_Pos                (1UL)                     /*!< BOP1 (Bit 1)                                          */
#define GPIOA_BOP_BOP1_Msk                (0x2UL)                   /*!< BOP1 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BOP_BOP0_Pos                (0UL)                     /*!< BOP0 (Bit 0)                                          */
#define GPIOA_BOP_BOP0_Msk                (0x1UL)                   /*!< BOP0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  LOCK  ========================================================== */
#define GPIOA_LOCK_LKK_Pos                (16UL)                    /*!< LKK (Bit 16)                                          */
#define GPIOA_LOCK_LKK_Msk                (0x10000UL)               /*!< LKK (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK15_Pos               (15UL)                    /*!< LK15 (Bit 15)                                         */
#define GPIOA_LOCK_LK15_Msk               (0x8000UL)                /*!< LK15 (Bitfield-Mask: 0x01)                            */
#define GPIOA_LOCK_LK14_Pos               (14UL)                    /*!< LK14 (Bit 14)                                         */
#define GPIOA_LOCK_LK14_Msk               (0x4000UL)                /*!< LK14 (Bitfield-Mask: 0x01)                            */
#define GPIOA_LOCK_LK13_Pos               (13UL)                    /*!< LK13 (Bit 13)                                         */
#define GPIOA_LOCK_LK13_Msk               (0x2000UL)                /*!< LK13 (Bitfield-Mask: 0x01)                            */
#define GPIOA_LOCK_LK12_Pos               (12UL)                    /*!< LK12 (Bit 12)                                         */
#define GPIOA_LOCK_LK12_Msk               (0x1000UL)                /*!< LK12 (Bitfield-Mask: 0x01)                            */
#define GPIOA_LOCK_LK11_Pos               (11UL)                    /*!< LK11 (Bit 11)                                         */
#define GPIOA_LOCK_LK11_Msk               (0x800UL)                 /*!< LK11 (Bitfield-Mask: 0x01)                            */
#define GPIOA_LOCK_LK10_Pos               (10UL)                    /*!< LK10 (Bit 10)                                         */
#define GPIOA_LOCK_LK10_Msk               (0x400UL)                 /*!< LK10 (Bitfield-Mask: 0x01)                            */
#define GPIOA_LOCK_LK9_Pos                (9UL)                     /*!< LK9 (Bit 9)                                           */
#define GPIOA_LOCK_LK9_Msk                (0x200UL)                 /*!< LK9 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK8_Pos                (8UL)                     /*!< LK8 (Bit 8)                                           */
#define GPIOA_LOCK_LK8_Msk                (0x100UL)                 /*!< LK8 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK7_Pos                (7UL)                     /*!< LK7 (Bit 7)                                           */
#define GPIOA_LOCK_LK7_Msk                (0x80UL)                  /*!< LK7 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK6_Pos                (6UL)                     /*!< LK6 (Bit 6)                                           */
#define GPIOA_LOCK_LK6_Msk                (0x40UL)                  /*!< LK6 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK5_Pos                (5UL)                     /*!< LK5 (Bit 5)                                           */
#define GPIOA_LOCK_LK5_Msk                (0x20UL)                  /*!< LK5 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK4_Pos                (4UL)                     /*!< LK4 (Bit 4)                                           */
#define GPIOA_LOCK_LK4_Msk                (0x10UL)                  /*!< LK4 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK3_Pos                (3UL)                     /*!< LK3 (Bit 3)                                           */
#define GPIOA_LOCK_LK3_Msk                (0x8UL)                   /*!< LK3 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK2_Pos                (2UL)                     /*!< LK2 (Bit 2)                                           */
#define GPIOA_LOCK_LK2_Msk                (0x4UL)                   /*!< LK2 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK1_Pos                (1UL)                     /*!< LK1 (Bit 1)                                           */
#define GPIOA_LOCK_LK1_Msk                (0x2UL)                   /*!< LK1 (Bitfield-Mask: 0x01)                             */
#define GPIOA_LOCK_LK0_Pos                (0UL)                     /*!< LK0 (Bit 0)                                           */
#define GPIOA_LOCK_LK0_Msk                (0x1UL)                   /*!< LK0 (Bitfield-Mask: 0x01)                             */
/* ========================================================  AFSEL0  ========================================================= */
#define GPIOA_AFSEL0_SEL7_Pos             (28UL)                    /*!< SEL7 (Bit 28)                                         */
#define GPIOA_AFSEL0_SEL7_Msk             (0xf0000000UL)            /*!< SEL7 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL6_Pos             (24UL)                    /*!< SEL6 (Bit 24)                                         */
#define GPIOA_AFSEL0_SEL6_Msk             (0xf000000UL)             /*!< SEL6 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL5_Pos             (20UL)                    /*!< SEL5 (Bit 20)                                         */
#define GPIOA_AFSEL0_SEL5_Msk             (0xf00000UL)              /*!< SEL5 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL4_Pos             (16UL)                    /*!< SEL4 (Bit 16)                                         */
#define GPIOA_AFSEL0_SEL4_Msk             (0xf0000UL)               /*!< SEL4 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL3_Pos             (12UL)                    /*!< SEL3 (Bit 12)                                         */
#define GPIOA_AFSEL0_SEL3_Msk             (0xf000UL)                /*!< SEL3 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL2_Pos             (8UL)                     /*!< SEL2 (Bit 8)                                          */
#define GPIOA_AFSEL0_SEL2_Msk             (0xf00UL)                 /*!< SEL2 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL1_Pos             (4UL)                     /*!< SEL1 (Bit 4)                                          */
#define GPIOA_AFSEL0_SEL1_Msk             (0xf0UL)                  /*!< SEL1 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL0_SEL0_Pos             (0UL)                     /*!< SEL0 (Bit 0)                                          */
#define GPIOA_AFSEL0_SEL0_Msk             (0xfUL)                   /*!< SEL0 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  AFSEL1  ========================================================= */
#define GPIOA_AFSEL1_SEL15_Pos            (28UL)                    /*!< SEL15 (Bit 28)                                        */
#define GPIOA_AFSEL1_SEL15_Msk            (0xf0000000UL)            /*!< SEL15 (Bitfield-Mask: 0x0f)                           */
#define GPIOA_AFSEL1_SEL14_Pos            (24UL)                    /*!< SEL14 (Bit 24)                                        */
#define GPIOA_AFSEL1_SEL14_Msk            (0xf000000UL)             /*!< SEL14 (Bitfield-Mask: 0x0f)                           */
#define GPIOA_AFSEL1_SEL13_Pos            (20UL)                    /*!< SEL13 (Bit 20)                                        */
#define GPIOA_AFSEL1_SEL13_Msk            (0xf00000UL)              /*!< SEL13 (Bitfield-Mask: 0x0f)                           */
#define GPIOA_AFSEL1_SEL12_Pos            (16UL)                    /*!< SEL12 (Bit 16)                                        */
#define GPIOA_AFSEL1_SEL12_Msk            (0xf0000UL)               /*!< SEL12 (Bitfield-Mask: 0x0f)                           */
#define GPIOA_AFSEL1_SEL11_Pos            (12UL)                    /*!< SEL11 (Bit 12)                                        */
#define GPIOA_AFSEL1_SEL11_Msk            (0xf000UL)                /*!< SEL11 (Bitfield-Mask: 0x0f)                           */
#define GPIOA_AFSEL1_SEL10_Pos            (8UL)                     /*!< SEL10 (Bit 8)                                         */
#define GPIOA_AFSEL1_SEL10_Msk            (0xf00UL)                 /*!< SEL10 (Bitfield-Mask: 0x0f)                           */
#define GPIOA_AFSEL1_SEL9_Pos             (4UL)                     /*!< SEL9 (Bit 4)                                          */
#define GPIOA_AFSEL1_SEL9_Msk             (0xf0UL)                  /*!< SEL9 (Bitfield-Mask: 0x0f)                            */
#define GPIOA_AFSEL1_SEL8_Pos             (0UL)                     /*!< SEL8 (Bit 0)                                          */
#define GPIOA_AFSEL1_SEL8_Msk             (0xfUL)                   /*!< SEL8 (Bitfield-Mask: 0x0f)                            */
/* ==========================================================  BC  =========================================================== */
#define GPIOA_BC_CR0_Pos                  (0UL)                     /*!< CR0 (Bit 0)                                           */
#define GPIOA_BC_CR0_Msk                  (0x1UL)                   /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR1_Pos                  (1UL)                     /*!< CR1 (Bit 1)                                           */
#define GPIOA_BC_CR1_Msk                  (0x2UL)                   /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR2_Pos                  (2UL)                     /*!< CR2 (Bit 2)                                           */
#define GPIOA_BC_CR2_Msk                  (0x4UL)                   /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR3_Pos                  (3UL)                     /*!< CR3 (Bit 3)                                           */
#define GPIOA_BC_CR3_Msk                  (0x8UL)                   /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR4_Pos                  (4UL)                     /*!< CR4 (Bit 4)                                           */
#define GPIOA_BC_CR4_Msk                  (0x10UL)                  /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR5_Pos                  (5UL)                     /*!< CR5 (Bit 5)                                           */
#define GPIOA_BC_CR5_Msk                  (0x20UL)                  /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR6_Pos                  (6UL)                     /*!< CR6 (Bit 6)                                           */
#define GPIOA_BC_CR6_Msk                  (0x40UL)                  /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR7_Pos                  (7UL)                     /*!< CR7 (Bit 7)                                           */
#define GPIOA_BC_CR7_Msk                  (0x80UL)                  /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR8_Pos                  (8UL)                     /*!< CR8 (Bit 8)                                           */
#define GPIOA_BC_CR8_Msk                  (0x100UL)                 /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR9_Pos                  (9UL)                     /*!< CR9 (Bit 9)                                           */
#define GPIOA_BC_CR9_Msk                  (0x200UL)                 /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOA_BC_CR10_Pos                 (10UL)                    /*!< CR10 (Bit 10)                                         */
#define GPIOA_BC_CR10_Msk                 (0x400UL)                 /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BC_CR11_Pos                 (11UL)                    /*!< CR11 (Bit 11)                                         */
#define GPIOA_BC_CR11_Msk                 (0x800UL)                 /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BC_CR12_Pos                 (12UL)                    /*!< CR12 (Bit 12)                                         */
#define GPIOA_BC_CR12_Msk                 (0x1000UL)                /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BC_CR13_Pos                 (13UL)                    /*!< CR13 (Bit 13)                                         */
#define GPIOA_BC_CR13_Msk                 (0x2000UL)                /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BC_CR14_Pos                 (14UL)                    /*!< CR14 (Bit 14)                                         */
#define GPIOA_BC_CR14_Msk                 (0x4000UL)                /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOA_BC_CR15_Pos                 (15UL)                    /*!< CR15 (Bit 15)                                         */
#define GPIOA_BC_CR15_Msk                 (0x8000UL)                /*!< CR15 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  TG  =========================================================== */
#define GPIOA_TG_TG0_Pos                  (0UL)                     /*!< TG0 (Bit 0)                                           */
#define GPIOA_TG_TG0_Msk                  (0x1UL)                   /*!< TG0 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG1_Pos                  (1UL)                     /*!< TG1 (Bit 1)                                           */
#define GPIOA_TG_TG1_Msk                  (0x2UL)                   /*!< TG1 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG2_Pos                  (2UL)                     /*!< TG2 (Bit 2)                                           */
#define GPIOA_TG_TG2_Msk                  (0x4UL)                   /*!< TG2 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG3_Pos                  (3UL)                     /*!< TG3 (Bit 3)                                           */
#define GPIOA_TG_TG3_Msk                  (0x8UL)                   /*!< TG3 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG4_Pos                  (4UL)                     /*!< TG4 (Bit 4)                                           */
#define GPIOA_TG_TG4_Msk                  (0x10UL)                  /*!< TG4 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG5_Pos                  (5UL)                     /*!< TG5 (Bit 5)                                           */
#define GPIOA_TG_TG5_Msk                  (0x20UL)                  /*!< TG5 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG6_Pos                  (6UL)                     /*!< TG6 (Bit 6)                                           */
#define GPIOA_TG_TG6_Msk                  (0x40UL)                  /*!< TG6 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG7_Pos                  (7UL)                     /*!< TG7 (Bit 7)                                           */
#define GPIOA_TG_TG7_Msk                  (0x80UL)                  /*!< TG7 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG8_Pos                  (8UL)                     /*!< TG8 (Bit 8)                                           */
#define GPIOA_TG_TG8_Msk                  (0x100UL)                 /*!< TG8 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG9_Pos                  (9UL)                     /*!< TG9 (Bit 9)                                           */
#define GPIOA_TG_TG9_Msk                  (0x200UL)                 /*!< TG9 (Bitfield-Mask: 0x01)                             */
#define GPIOA_TG_TG10_Pos                 (10UL)                    /*!< TG10 (Bit 10)                                         */
#define GPIOA_TG_TG10_Msk                 (0x400UL)                 /*!< TG10 (Bitfield-Mask: 0x01)                            */
#define GPIOA_TG_TG11_Pos                 (11UL)                    /*!< TG11 (Bit 11)                                         */
#define GPIOA_TG_TG11_Msk                 (0x800UL)                 /*!< TG11 (Bitfield-Mask: 0x01)                            */
#define GPIOA_TG_TG12_Pos                 (12UL)                    /*!< TG12 (Bit 12)                                         */
#define GPIOA_TG_TG12_Msk                 (0x1000UL)                /*!< TG12 (Bitfield-Mask: 0x01)                            */
#define GPIOA_TG_TG13_Pos                 (13UL)                    /*!< TG13 (Bit 13)                                         */
#define GPIOA_TG_TG13_Msk                 (0x2000UL)                /*!< TG13 (Bitfield-Mask: 0x01)                            */
#define GPIOA_TG_TG14_Pos                 (14UL)                    /*!< TG14 (Bit 14)                                         */
#define GPIOA_TG_TG14_Msk                 (0x4000UL)                /*!< TG14 (Bitfield-Mask: 0x01)                            */
#define GPIOA_TG_TG15_Pos                 (15UL)                    /*!< TG15 (Bit 15)                                         */
#define GPIOA_TG_TG15_Msk                 (0x8000UL)                /*!< TG15 (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           GPIOB                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define GPIOB_CTL_CTL15_Pos               (30UL)                    /*!< CTL15 (Bit 30)                                        */
#define GPIOB_CTL_CTL15_Msk               (0xc0000000UL)            /*!< CTL15 (Bitfield-Mask: 0x03)                           */
#define GPIOB_CTL_CTL14_Pos               (28UL)                    /*!< CTL14 (Bit 28)                                        */
#define GPIOB_CTL_CTL14_Msk               (0x30000000UL)            /*!< CTL14 (Bitfield-Mask: 0x03)                           */
#define GPIOB_CTL_CTL13_Pos               (26UL)                    /*!< CTL13 (Bit 26)                                        */
#define GPIOB_CTL_CTL13_Msk               (0xc000000UL)             /*!< CTL13 (Bitfield-Mask: 0x03)                           */
#define GPIOB_CTL_CTL12_Pos               (24UL)                    /*!< CTL12 (Bit 24)                                        */
#define GPIOB_CTL_CTL12_Msk               (0x3000000UL)             /*!< CTL12 (Bitfield-Mask: 0x03)                           */
#define GPIOB_CTL_CTL11_Pos               (22UL)                    /*!< CTL11 (Bit 22)                                        */
#define GPIOB_CTL_CTL11_Msk               (0xc00000UL)              /*!< CTL11 (Bitfield-Mask: 0x03)                           */
#define GPIOB_CTL_CTL10_Pos               (20UL)                    /*!< CTL10 (Bit 20)                                        */
#define GPIOB_CTL_CTL10_Msk               (0x300000UL)              /*!< CTL10 (Bitfield-Mask: 0x03)                           */
#define GPIOB_CTL_CTL9_Pos                (18UL)                    /*!< CTL9 (Bit 18)                                         */
#define GPIOB_CTL_CTL9_Msk                (0xc0000UL)               /*!< CTL9 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL8_Pos                (16UL)                    /*!< CTL8 (Bit 16)                                         */
#define GPIOB_CTL_CTL8_Msk                (0x30000UL)               /*!< CTL8 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL7_Pos                (14UL)                    /*!< CTL7 (Bit 14)                                         */
#define GPIOB_CTL_CTL7_Msk                (0xc000UL)                /*!< CTL7 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL6_Pos                (12UL)                    /*!< CTL6 (Bit 12)                                         */
#define GPIOB_CTL_CTL6_Msk                (0x3000UL)                /*!< CTL6 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL5_Pos                (10UL)                    /*!< CTL5 (Bit 10)                                         */
#define GPIOB_CTL_CTL5_Msk                (0xc00UL)                 /*!< CTL5 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL4_Pos                (8UL)                     /*!< CTL4 (Bit 8)                                          */
#define GPIOB_CTL_CTL4_Msk                (0x300UL)                 /*!< CTL4 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL3_Pos                (6UL)                     /*!< CTL3 (Bit 6)                                          */
#define GPIOB_CTL_CTL3_Msk                (0xc0UL)                  /*!< CTL3 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL2_Pos                (4UL)                     /*!< CTL2 (Bit 4)                                          */
#define GPIOB_CTL_CTL2_Msk                (0x30UL)                  /*!< CTL2 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL1_Pos                (2UL)                     /*!< CTL1 (Bit 2)                                          */
#define GPIOB_CTL_CTL1_Msk                (0xcUL)                   /*!< CTL1 (Bitfield-Mask: 0x03)                            */
#define GPIOB_CTL_CTL0_Pos                (0UL)                     /*!< CTL0 (Bit 0)                                          */
#define GPIOB_CTL_CTL0_Msk                (0x3UL)                   /*!< CTL0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  OMODE  ========================================================= */
#define GPIOB_OMODE_OM15_Pos              (15UL)                    /*!< OM15 (Bit 15)                                         */
#define GPIOB_OMODE_OM15_Msk              (0x8000UL)                /*!< OM15 (Bitfield-Mask: 0x01)                            */
#define GPIOB_OMODE_OM14_Pos              (14UL)                    /*!< OM14 (Bit 14)                                         */
#define GPIOB_OMODE_OM14_Msk              (0x4000UL)                /*!< OM14 (Bitfield-Mask: 0x01)                            */
#define GPIOB_OMODE_OM13_Pos              (13UL)                    /*!< OM13 (Bit 13)                                         */
#define GPIOB_OMODE_OM13_Msk              (0x2000UL)                /*!< OM13 (Bitfield-Mask: 0x01)                            */
#define GPIOB_OMODE_OM12_Pos              (12UL)                    /*!< OM12 (Bit 12)                                         */
#define GPIOB_OMODE_OM12_Msk              (0x1000UL)                /*!< OM12 (Bitfield-Mask: 0x01)                            */
#define GPIOB_OMODE_OM11_Pos              (11UL)                    /*!< OM11 (Bit 11)                                         */
#define GPIOB_OMODE_OM11_Msk              (0x800UL)                 /*!< OM11 (Bitfield-Mask: 0x01)                            */
#define GPIOB_OMODE_OM10_Pos              (10UL)                    /*!< OM10 (Bit 10)                                         */
#define GPIOB_OMODE_OM10_Msk              (0x400UL)                 /*!< OM10 (Bitfield-Mask: 0x01)                            */
#define GPIOB_OMODE_OM9_Pos               (9UL)                     /*!< OM9 (Bit 9)                                           */
#define GPIOB_OMODE_OM9_Msk               (0x200UL)                 /*!< OM9 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM8_Pos               (8UL)                     /*!< OM8 (Bit 8)                                           */
#define GPIOB_OMODE_OM8_Msk               (0x100UL)                 /*!< OM8 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM7_Pos               (7UL)                     /*!< OM7 (Bit 7)                                           */
#define GPIOB_OMODE_OM7_Msk               (0x80UL)                  /*!< OM7 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM6_Pos               (6UL)                     /*!< OM6 (Bit 6)                                           */
#define GPIOB_OMODE_OM6_Msk               (0x40UL)                  /*!< OM6 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM5_Pos               (5UL)                     /*!< OM5 (Bit 5)                                           */
#define GPIOB_OMODE_OM5_Msk               (0x20UL)                  /*!< OM5 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM4_Pos               (4UL)                     /*!< OM4 (Bit 4)                                           */
#define GPIOB_OMODE_OM4_Msk               (0x10UL)                  /*!< OM4 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM3_Pos               (3UL)                     /*!< OM3 (Bit 3)                                           */
#define GPIOB_OMODE_OM3_Msk               (0x8UL)                   /*!< OM3 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM2_Pos               (2UL)                     /*!< OM2 (Bit 2)                                           */
#define GPIOB_OMODE_OM2_Msk               (0x4UL)                   /*!< OM2 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM1_Pos               (1UL)                     /*!< OM1 (Bit 1)                                           */
#define GPIOB_OMODE_OM1_Msk               (0x2UL)                   /*!< OM1 (Bitfield-Mask: 0x01)                             */
#define GPIOB_OMODE_OM0_Pos               (0UL)                     /*!< OM0 (Bit 0)                                           */
#define GPIOB_OMODE_OM0_Msk               (0x1UL)                   /*!< OM0 (Bitfield-Mask: 0x01)                             */
/* =========================================================  OSPD  ========================================================== */
#define GPIOB_OSPD_OSPD15_Pos             (30UL)                    /*!< OSPD15 (Bit 30)                                       */
#define GPIOB_OSPD_OSPD15_Msk             (0xc0000000UL)            /*!< OSPD15 (Bitfield-Mask: 0x03)                          */
#define GPIOB_OSPD_OSPD14_Pos             (28UL)                    /*!< OSPD14 (Bit 28)                                       */
#define GPIOB_OSPD_OSPD14_Msk             (0x30000000UL)            /*!< OSPD14 (Bitfield-Mask: 0x03)                          */
#define GPIOB_OSPD_OSPD13_Pos             (26UL)                    /*!< OSPD13 (Bit 26)                                       */
#define GPIOB_OSPD_OSPD13_Msk             (0xc000000UL)             /*!< OSPD13 (Bitfield-Mask: 0x03)                          */
#define GPIOB_OSPD_OSPD12_Pos             (24UL)                    /*!< OSPD12 (Bit 24)                                       */
#define GPIOB_OSPD_OSPD12_Msk             (0x3000000UL)             /*!< OSPD12 (Bitfield-Mask: 0x03)                          */
#define GPIOB_OSPD_OSPD11_Pos             (22UL)                    /*!< OSPD11 (Bit 22)                                       */
#define GPIOB_OSPD_OSPD11_Msk             (0xc00000UL)              /*!< OSPD11 (Bitfield-Mask: 0x03)                          */
#define GPIOB_OSPD_OSPD10_Pos             (20UL)                    /*!< OSPD10 (Bit 20)                                       */
#define GPIOB_OSPD_OSPD10_Msk             (0x300000UL)              /*!< OSPD10 (Bitfield-Mask: 0x03)                          */
#define GPIOB_OSPD_OSPD9_Pos              (18UL)                    /*!< OSPD9 (Bit 18)                                        */
#define GPIOB_OSPD_OSPD9_Msk              (0xc0000UL)               /*!< OSPD9 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD8_Pos              (16UL)                    /*!< OSPD8 (Bit 16)                                        */
#define GPIOB_OSPD_OSPD8_Msk              (0x30000UL)               /*!< OSPD8 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD7_Pos              (14UL)                    /*!< OSPD7 (Bit 14)                                        */
#define GPIOB_OSPD_OSPD7_Msk              (0xc000UL)                /*!< OSPD7 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD6_Pos              (12UL)                    /*!< OSPD6 (Bit 12)                                        */
#define GPIOB_OSPD_OSPD6_Msk              (0x3000UL)                /*!< OSPD6 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD5_Pos              (10UL)                    /*!< OSPD5 (Bit 10)                                        */
#define GPIOB_OSPD_OSPD5_Msk              (0xc00UL)                 /*!< OSPD5 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD4_Pos              (8UL)                     /*!< OSPD4 (Bit 8)                                         */
#define GPIOB_OSPD_OSPD4_Msk              (0x300UL)                 /*!< OSPD4 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD3_Pos              (6UL)                     /*!< OSPD3 (Bit 6)                                         */
#define GPIOB_OSPD_OSPD3_Msk              (0xc0UL)                  /*!< OSPD3 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD2_Pos              (4UL)                     /*!< OSPD2 (Bit 4)                                         */
#define GPIOB_OSPD_OSPD2_Msk              (0x30UL)                  /*!< OSPD2 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD1_Pos              (2UL)                     /*!< OSPD1 (Bit 2)                                         */
#define GPIOB_OSPD_OSPD1_Msk              (0xcUL)                   /*!< OSPD1 (Bitfield-Mask: 0x03)                           */
#define GPIOB_OSPD_OSPD0_Pos              (0UL)                     /*!< OSPD0 (Bit 0)                                         */
#define GPIOB_OSPD_OSPD0_Msk              (0x3UL)                   /*!< OSPD0 (Bitfield-Mask: 0x03)                           */
/* ==========================================================  PUD  ========================================================== */
#define GPIOB_PUD_PUD15_Pos               (30UL)                    /*!< PUD15 (Bit 30)                                        */
#define GPIOB_PUD_PUD15_Msk               (0xc0000000UL)            /*!< PUD15 (Bitfield-Mask: 0x03)                           */
#define GPIOB_PUD_PUD14_Pos               (28UL)                    /*!< PUD14 (Bit 28)                                        */
#define GPIOB_PUD_PUD14_Msk               (0x30000000UL)            /*!< PUD14 (Bitfield-Mask: 0x03)                           */
#define GPIOB_PUD_PUD13_Pos               (26UL)                    /*!< PUD13 (Bit 26)                                        */
#define GPIOB_PUD_PUD13_Msk               (0xc000000UL)             /*!< PUD13 (Bitfield-Mask: 0x03)                           */
#define GPIOB_PUD_PUD12_Pos               (24UL)                    /*!< PUD12 (Bit 24)                                        */
#define GPIOB_PUD_PUD12_Msk               (0x3000000UL)             /*!< PUD12 (Bitfield-Mask: 0x03)                           */
#define GPIOB_PUD_PUD11_Pos               (22UL)                    /*!< PUD11 (Bit 22)                                        */
#define GPIOB_PUD_PUD11_Msk               (0xc00000UL)              /*!< PUD11 (Bitfield-Mask: 0x03)                           */
#define GPIOB_PUD_PUD10_Pos               (20UL)                    /*!< PUD10 (Bit 20)                                        */
#define GPIOB_PUD_PUD10_Msk               (0x300000UL)              /*!< PUD10 (Bitfield-Mask: 0x03)                           */
#define GPIOB_PUD_PUD9_Pos                (18UL)                    /*!< PUD9 (Bit 18)                                         */
#define GPIOB_PUD_PUD9_Msk                (0xc0000UL)               /*!< PUD9 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD8_Pos                (16UL)                    /*!< PUD8 (Bit 16)                                         */
#define GPIOB_PUD_PUD8_Msk                (0x30000UL)               /*!< PUD8 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD7_Pos                (14UL)                    /*!< PUD7 (Bit 14)                                         */
#define GPIOB_PUD_PUD7_Msk                (0xc000UL)                /*!< PUD7 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD6_Pos                (12UL)                    /*!< PUD6 (Bit 12)                                         */
#define GPIOB_PUD_PUD6_Msk                (0x3000UL)                /*!< PUD6 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD5_Pos                (10UL)                    /*!< PUD5 (Bit 10)                                         */
#define GPIOB_PUD_PUD5_Msk                (0xc00UL)                 /*!< PUD5 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD4_Pos                (8UL)                     /*!< PUD4 (Bit 8)                                          */
#define GPIOB_PUD_PUD4_Msk                (0x300UL)                 /*!< PUD4 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD3_Pos                (6UL)                     /*!< PUD3 (Bit 6)                                          */
#define GPIOB_PUD_PUD3_Msk                (0xc0UL)                  /*!< PUD3 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD2_Pos                (4UL)                     /*!< PUD2 (Bit 4)                                          */
#define GPIOB_PUD_PUD2_Msk                (0x30UL)                  /*!< PUD2 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD1_Pos                (2UL)                     /*!< PUD1 (Bit 2)                                          */
#define GPIOB_PUD_PUD1_Msk                (0xcUL)                   /*!< PUD1 (Bitfield-Mask: 0x03)                            */
#define GPIOB_PUD_PUD0_Pos                (0UL)                     /*!< PUD0 (Bit 0)                                          */
#define GPIOB_PUD_PUD0_Msk                (0x3UL)                   /*!< PUD0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  ISTAT  ========================================================= */
#define GPIOB_ISTAT_ISTAT15_Pos           (15UL)                    /*!< ISTAT15 (Bit 15)                                      */
#define GPIOB_ISTAT_ISTAT15_Msk           (0x8000UL)                /*!< ISTAT15 (Bitfield-Mask: 0x01)                         */
#define GPIOB_ISTAT_ISTAT14_Pos           (14UL)                    /*!< ISTAT14 (Bit 14)                                      */
#define GPIOB_ISTAT_ISTAT14_Msk           (0x4000UL)                /*!< ISTAT14 (Bitfield-Mask: 0x01)                         */
#define GPIOB_ISTAT_ISTAT13_Pos           (13UL)                    /*!< ISTAT13 (Bit 13)                                      */
#define GPIOB_ISTAT_ISTAT13_Msk           (0x2000UL)                /*!< ISTAT13 (Bitfield-Mask: 0x01)                         */
#define GPIOB_ISTAT_ISTAT12_Pos           (12UL)                    /*!< ISTAT12 (Bit 12)                                      */
#define GPIOB_ISTAT_ISTAT12_Msk           (0x1000UL)                /*!< ISTAT12 (Bitfield-Mask: 0x01)                         */
#define GPIOB_ISTAT_ISTAT11_Pos           (11UL)                    /*!< ISTAT11 (Bit 11)                                      */
#define GPIOB_ISTAT_ISTAT11_Msk           (0x800UL)                 /*!< ISTAT11 (Bitfield-Mask: 0x01)                         */
#define GPIOB_ISTAT_ISTAT10_Pos           (10UL)                    /*!< ISTAT10 (Bit 10)                                      */
#define GPIOB_ISTAT_ISTAT10_Msk           (0x400UL)                 /*!< ISTAT10 (Bitfield-Mask: 0x01)                         */
#define GPIOB_ISTAT_ISTAT9_Pos            (9UL)                     /*!< ISTAT9 (Bit 9)                                        */
#define GPIOB_ISTAT_ISTAT9_Msk            (0x200UL)                 /*!< ISTAT9 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT8_Pos            (8UL)                     /*!< ISTAT8 (Bit 8)                                        */
#define GPIOB_ISTAT_ISTAT8_Msk            (0x100UL)                 /*!< ISTAT8 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT7_Pos            (7UL)                     /*!< ISTAT7 (Bit 7)                                        */
#define GPIOB_ISTAT_ISTAT7_Msk            (0x80UL)                  /*!< ISTAT7 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT6_Pos            (6UL)                     /*!< ISTAT6 (Bit 6)                                        */
#define GPIOB_ISTAT_ISTAT6_Msk            (0x40UL)                  /*!< ISTAT6 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT5_Pos            (5UL)                     /*!< ISTAT5 (Bit 5)                                        */
#define GPIOB_ISTAT_ISTAT5_Msk            (0x20UL)                  /*!< ISTAT5 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT4_Pos            (4UL)                     /*!< ISTAT4 (Bit 4)                                        */
#define GPIOB_ISTAT_ISTAT4_Msk            (0x10UL)                  /*!< ISTAT4 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT3_Pos            (3UL)                     /*!< ISTAT3 (Bit 3)                                        */
#define GPIOB_ISTAT_ISTAT3_Msk            (0x8UL)                   /*!< ISTAT3 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT2_Pos            (2UL)                     /*!< ISTAT2 (Bit 2)                                        */
#define GPIOB_ISTAT_ISTAT2_Msk            (0x4UL)                   /*!< ISTAT2 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT1_Pos            (1UL)                     /*!< ISTAT1 (Bit 1)                                        */
#define GPIOB_ISTAT_ISTAT1_Msk            (0x2UL)                   /*!< ISTAT1 (Bitfield-Mask: 0x01)                          */
#define GPIOB_ISTAT_ISTAT0_Pos            (0UL)                     /*!< ISTAT0 (Bit 0)                                        */
#define GPIOB_ISTAT_ISTAT0_Msk            (0x1UL)                   /*!< ISTAT0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  OCTL  ========================================================== */
#define GPIOB_OCTL_OCTL15_Pos             (15UL)                    /*!< OCTL15 (Bit 15)                                       */
#define GPIOB_OCTL_OCTL15_Msk             (0x8000UL)                /*!< OCTL15 (Bitfield-Mask: 0x01)                          */
#define GPIOB_OCTL_OCTL14_Pos             (14UL)                    /*!< OCTL14 (Bit 14)                                       */
#define GPIOB_OCTL_OCTL14_Msk             (0x4000UL)                /*!< OCTL14 (Bitfield-Mask: 0x01)                          */
#define GPIOB_OCTL_OCTL13_Pos             (13UL)                    /*!< OCTL13 (Bit 13)                                       */
#define GPIOB_OCTL_OCTL13_Msk             (0x2000UL)                /*!< OCTL13 (Bitfield-Mask: 0x01)                          */
#define GPIOB_OCTL_OCTL12_Pos             (12UL)                    /*!< OCTL12 (Bit 12)                                       */
#define GPIOB_OCTL_OCTL12_Msk             (0x1000UL)                /*!< OCTL12 (Bitfield-Mask: 0x01)                          */
#define GPIOB_OCTL_OCTL11_Pos             (11UL)                    /*!< OCTL11 (Bit 11)                                       */
#define GPIOB_OCTL_OCTL11_Msk             (0x800UL)                 /*!< OCTL11 (Bitfield-Mask: 0x01)                          */
#define GPIOB_OCTL_OCTL10_Pos             (10UL)                    /*!< OCTL10 (Bit 10)                                       */
#define GPIOB_OCTL_OCTL10_Msk             (0x400UL)                 /*!< OCTL10 (Bitfield-Mask: 0x01)                          */
#define GPIOB_OCTL_OCTL9_Pos              (9UL)                     /*!< OCTL9 (Bit 9)                                         */
#define GPIOB_OCTL_OCTL9_Msk              (0x200UL)                 /*!< OCTL9 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL8_Pos              (8UL)                     /*!< OCTL8 (Bit 8)                                         */
#define GPIOB_OCTL_OCTL8_Msk              (0x100UL)                 /*!< OCTL8 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL7_Pos              (7UL)                     /*!< OCTL7 (Bit 7)                                         */
#define GPIOB_OCTL_OCTL7_Msk              (0x80UL)                  /*!< OCTL7 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL6_Pos              (6UL)                     /*!< OCTL6 (Bit 6)                                         */
#define GPIOB_OCTL_OCTL6_Msk              (0x40UL)                  /*!< OCTL6 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL5_Pos              (5UL)                     /*!< OCTL5 (Bit 5)                                         */
#define GPIOB_OCTL_OCTL5_Msk              (0x20UL)                  /*!< OCTL5 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL4_Pos              (4UL)                     /*!< OCTL4 (Bit 4)                                         */
#define GPIOB_OCTL_OCTL4_Msk              (0x10UL)                  /*!< OCTL4 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL3_Pos              (3UL)                     /*!< OCTL3 (Bit 3)                                         */
#define GPIOB_OCTL_OCTL3_Msk              (0x8UL)                   /*!< OCTL3 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL2_Pos              (2UL)                     /*!< OCTL2 (Bit 2)                                         */
#define GPIOB_OCTL_OCTL2_Msk              (0x4UL)                   /*!< OCTL2 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL1_Pos              (1UL)                     /*!< OCTL1 (Bit 1)                                         */
#define GPIOB_OCTL_OCTL1_Msk              (0x2UL)                   /*!< OCTL1 (Bitfield-Mask: 0x01)                           */
#define GPIOB_OCTL_OCTL0_Pos              (0UL)                     /*!< OCTL0 (Bit 0)                                         */
#define GPIOB_OCTL_OCTL0_Msk              (0x1UL)                   /*!< OCTL0 (Bitfield-Mask: 0x01)                           */
/* ==========================================================  BOP  ========================================================== */
#define GPIOB_BOP_CR15_Pos                (31UL)                    /*!< CR15 (Bit 31)                                         */
#define GPIOB_BOP_CR15_Msk                (0x80000000UL)            /*!< CR15 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_CR14_Pos                (30UL)                    /*!< CR14 (Bit 30)                                         */
#define GPIOB_BOP_CR14_Msk                (0x40000000UL)            /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_CR13_Pos                (29UL)                    /*!< CR13 (Bit 29)                                         */
#define GPIOB_BOP_CR13_Msk                (0x20000000UL)            /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_CR12_Pos                (28UL)                    /*!< CR12 (Bit 28)                                         */
#define GPIOB_BOP_CR12_Msk                (0x10000000UL)            /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_CR11_Pos                (27UL)                    /*!< CR11 (Bit 27)                                         */
#define GPIOB_BOP_CR11_Msk                (0x8000000UL)             /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_CR10_Pos                (26UL)                    /*!< CR10 (Bit 26)                                         */
#define GPIOB_BOP_CR10_Msk                (0x4000000UL)             /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_CR9_Pos                 (25UL)                    /*!< CR9 (Bit 25)                                          */
#define GPIOB_BOP_CR9_Msk                 (0x2000000UL)             /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR8_Pos                 (24UL)                    /*!< CR8 (Bit 24)                                          */
#define GPIOB_BOP_CR8_Msk                 (0x1000000UL)             /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR7_Pos                 (23UL)                    /*!< CR7 (Bit 23)                                          */
#define GPIOB_BOP_CR7_Msk                 (0x800000UL)              /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR6_Pos                 (22UL)                    /*!< CR6 (Bit 22)                                          */
#define GPIOB_BOP_CR6_Msk                 (0x400000UL)              /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR5_Pos                 (21UL)                    /*!< CR5 (Bit 21)                                          */
#define GPIOB_BOP_CR5_Msk                 (0x200000UL)              /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR4_Pos                 (20UL)                    /*!< CR4 (Bit 20)                                          */
#define GPIOB_BOP_CR4_Msk                 (0x100000UL)              /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR3_Pos                 (19UL)                    /*!< CR3 (Bit 19)                                          */
#define GPIOB_BOP_CR3_Msk                 (0x80000UL)               /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR2_Pos                 (18UL)                    /*!< CR2 (Bit 18)                                          */
#define GPIOB_BOP_CR2_Msk                 (0x40000UL)               /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR1_Pos                 (17UL)                    /*!< CR1 (Bit 17)                                          */
#define GPIOB_BOP_CR1_Msk                 (0x20000UL)               /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_CR0_Pos                 (16UL)                    /*!< CR0 (Bit 16)                                          */
#define GPIOB_BOP_CR0_Msk                 (0x10000UL)               /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BOP_BOP15_Pos               (15UL)                    /*!< BOP15 (Bit 15)                                        */
#define GPIOB_BOP_BOP15_Msk               (0x8000UL)                /*!< BOP15 (Bitfield-Mask: 0x01)                           */
#define GPIOB_BOP_BOP14_Pos               (14UL)                    /*!< BOP14 (Bit 14)                                        */
#define GPIOB_BOP_BOP14_Msk               (0x4000UL)                /*!< BOP14 (Bitfield-Mask: 0x01)                           */
#define GPIOB_BOP_BOP13_Pos               (13UL)                    /*!< BOP13 (Bit 13)                                        */
#define GPIOB_BOP_BOP13_Msk               (0x2000UL)                /*!< BOP13 (Bitfield-Mask: 0x01)                           */
#define GPIOB_BOP_BOP12_Pos               (12UL)                    /*!< BOP12 (Bit 12)                                        */
#define GPIOB_BOP_BOP12_Msk               (0x1000UL)                /*!< BOP12 (Bitfield-Mask: 0x01)                           */
#define GPIOB_BOP_BOP11_Pos               (11UL)                    /*!< BOP11 (Bit 11)                                        */
#define GPIOB_BOP_BOP11_Msk               (0x800UL)                 /*!< BOP11 (Bitfield-Mask: 0x01)                           */
#define GPIOB_BOP_BOP10_Pos               (10UL)                    /*!< BOP10 (Bit 10)                                        */
#define GPIOB_BOP_BOP10_Msk               (0x400UL)                 /*!< BOP10 (Bitfield-Mask: 0x01)                           */
#define GPIOB_BOP_BOP9_Pos                (9UL)                     /*!< BOP9 (Bit 9)                                          */
#define GPIOB_BOP_BOP9_Msk                (0x200UL)                 /*!< BOP9 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP8_Pos                (8UL)                     /*!< BOP8 (Bit 8)                                          */
#define GPIOB_BOP_BOP8_Msk                (0x100UL)                 /*!< BOP8 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP7_Pos                (7UL)                     /*!< BOP7 (Bit 7)                                          */
#define GPIOB_BOP_BOP7_Msk                (0x80UL)                  /*!< BOP7 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP6_Pos                (6UL)                     /*!< BOP6 (Bit 6)                                          */
#define GPIOB_BOP_BOP6_Msk                (0x40UL)                  /*!< BOP6 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP5_Pos                (5UL)                     /*!< BOP5 (Bit 5)                                          */
#define GPIOB_BOP_BOP5_Msk                (0x20UL)                  /*!< BOP5 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP4_Pos                (4UL)                     /*!< BOP4 (Bit 4)                                          */
#define GPIOB_BOP_BOP4_Msk                (0x10UL)                  /*!< BOP4 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP3_Pos                (3UL)                     /*!< BOP3 (Bit 3)                                          */
#define GPIOB_BOP_BOP3_Msk                (0x8UL)                   /*!< BOP3 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP2_Pos                (2UL)                     /*!< BOP2 (Bit 2)                                          */
#define GPIOB_BOP_BOP2_Msk                (0x4UL)                   /*!< BOP2 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP1_Pos                (1UL)                     /*!< BOP1 (Bit 1)                                          */
#define GPIOB_BOP_BOP1_Msk                (0x2UL)                   /*!< BOP1 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BOP_BOP0_Pos                (0UL)                     /*!< BOP0 (Bit 0)                                          */
#define GPIOB_BOP_BOP0_Msk                (0x1UL)                   /*!< BOP0 (Bitfield-Mask: 0x01)                            */
/* =========================================================  LOCK  ========================================================== */
#define GPIOB_LOCK_LKK_Pos                (16UL)                    /*!< LKK (Bit 16)                                          */
#define GPIOB_LOCK_LKK_Msk                (0x10000UL)               /*!< LKK (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK15_Pos               (15UL)                    /*!< LK15 (Bit 15)                                         */
#define GPIOB_LOCK_LK15_Msk               (0x8000UL)                /*!< LK15 (Bitfield-Mask: 0x01)                            */
#define GPIOB_LOCK_LK14_Pos               (14UL)                    /*!< LK14 (Bit 14)                                         */
#define GPIOB_LOCK_LK14_Msk               (0x4000UL)                /*!< LK14 (Bitfield-Mask: 0x01)                            */
#define GPIOB_LOCK_LK13_Pos               (13UL)                    /*!< LK13 (Bit 13)                                         */
#define GPIOB_LOCK_LK13_Msk               (0x2000UL)                /*!< LK13 (Bitfield-Mask: 0x01)                            */
#define GPIOB_LOCK_LK12_Pos               (12UL)                    /*!< LK12 (Bit 12)                                         */
#define GPIOB_LOCK_LK12_Msk               (0x1000UL)                /*!< LK12 (Bitfield-Mask: 0x01)                            */
#define GPIOB_LOCK_LK11_Pos               (11UL)                    /*!< LK11 (Bit 11)                                         */
#define GPIOB_LOCK_LK11_Msk               (0x800UL)                 /*!< LK11 (Bitfield-Mask: 0x01)                            */
#define GPIOB_LOCK_LK10_Pos               (10UL)                    /*!< LK10 (Bit 10)                                         */
#define GPIOB_LOCK_LK10_Msk               (0x400UL)                 /*!< LK10 (Bitfield-Mask: 0x01)                            */
#define GPIOB_LOCK_LK9_Pos                (9UL)                     /*!< LK9 (Bit 9)                                           */
#define GPIOB_LOCK_LK9_Msk                (0x200UL)                 /*!< LK9 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK8_Pos                (8UL)                     /*!< LK8 (Bit 8)                                           */
#define GPIOB_LOCK_LK8_Msk                (0x100UL)                 /*!< LK8 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK7_Pos                (7UL)                     /*!< LK7 (Bit 7)                                           */
#define GPIOB_LOCK_LK7_Msk                (0x80UL)                  /*!< LK7 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK6_Pos                (6UL)                     /*!< LK6 (Bit 6)                                           */
#define GPIOB_LOCK_LK6_Msk                (0x40UL)                  /*!< LK6 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK5_Pos                (5UL)                     /*!< LK5 (Bit 5)                                           */
#define GPIOB_LOCK_LK5_Msk                (0x20UL)                  /*!< LK5 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK4_Pos                (4UL)                     /*!< LK4 (Bit 4)                                           */
#define GPIOB_LOCK_LK4_Msk                (0x10UL)                  /*!< LK4 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK3_Pos                (3UL)                     /*!< LK3 (Bit 3)                                           */
#define GPIOB_LOCK_LK3_Msk                (0x8UL)                   /*!< LK3 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK2_Pos                (2UL)                     /*!< LK2 (Bit 2)                                           */
#define GPIOB_LOCK_LK2_Msk                (0x4UL)                   /*!< LK2 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK1_Pos                (1UL)                     /*!< LK1 (Bit 1)                                           */
#define GPIOB_LOCK_LK1_Msk                (0x2UL)                   /*!< LK1 (Bitfield-Mask: 0x01)                             */
#define GPIOB_LOCK_LK0_Pos                (0UL)                     /*!< LK0 (Bit 0)                                           */
#define GPIOB_LOCK_LK0_Msk                (0x1UL)                   /*!< LK0 (Bitfield-Mask: 0x01)                             */
/* ========================================================  AFSEL0  ========================================================= */
#define GPIOB_AFSEL0_SEL7_Pos             (28UL)                    /*!< SEL7 (Bit 28)                                         */
#define GPIOB_AFSEL0_SEL7_Msk             (0xf0000000UL)            /*!< SEL7 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL6_Pos             (24UL)                    /*!< SEL6 (Bit 24)                                         */
#define GPIOB_AFSEL0_SEL6_Msk             (0xf000000UL)             /*!< SEL6 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL5_Pos             (20UL)                    /*!< SEL5 (Bit 20)                                         */
#define GPIOB_AFSEL0_SEL5_Msk             (0xf00000UL)              /*!< SEL5 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL4_Pos             (16UL)                    /*!< SEL4 (Bit 16)                                         */
#define GPIOB_AFSEL0_SEL4_Msk             (0xf0000UL)               /*!< SEL4 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL3_Pos             (12UL)                    /*!< SEL3 (Bit 12)                                         */
#define GPIOB_AFSEL0_SEL3_Msk             (0xf000UL)                /*!< SEL3 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL2_Pos             (8UL)                     /*!< SEL2 (Bit 8)                                          */
#define GPIOB_AFSEL0_SEL2_Msk             (0xf00UL)                 /*!< SEL2 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL1_Pos             (4UL)                     /*!< SEL1 (Bit 4)                                          */
#define GPIOB_AFSEL0_SEL1_Msk             (0xf0UL)                  /*!< SEL1 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL0_SEL0_Pos             (0UL)                     /*!< SEL0 (Bit 0)                                          */
#define GPIOB_AFSEL0_SEL0_Msk             (0xfUL)                   /*!< SEL0 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  AFSEL1  ========================================================= */
#define GPIOB_AFSEL1_SEL15_Pos            (28UL)                    /*!< SEL15 (Bit 28)                                        */
#define GPIOB_AFSEL1_SEL15_Msk            (0xf0000000UL)            /*!< SEL15 (Bitfield-Mask: 0x0f)                           */
#define GPIOB_AFSEL1_SEL14_Pos            (24UL)                    /*!< SEL14 (Bit 24)                                        */
#define GPIOB_AFSEL1_SEL14_Msk            (0xf000000UL)             /*!< SEL14 (Bitfield-Mask: 0x0f)                           */
#define GPIOB_AFSEL1_SEL13_Pos            (20UL)                    /*!< SEL13 (Bit 20)                                        */
#define GPIOB_AFSEL1_SEL13_Msk            (0xf00000UL)              /*!< SEL13 (Bitfield-Mask: 0x0f)                           */
#define GPIOB_AFSEL1_SEL12_Pos            (16UL)                    /*!< SEL12 (Bit 16)                                        */
#define GPIOB_AFSEL1_SEL12_Msk            (0xf0000UL)               /*!< SEL12 (Bitfield-Mask: 0x0f)                           */
#define GPIOB_AFSEL1_SEL11_Pos            (12UL)                    /*!< SEL11 (Bit 12)                                        */
#define GPIOB_AFSEL1_SEL11_Msk            (0xf000UL)                /*!< SEL11 (Bitfield-Mask: 0x0f)                           */
#define GPIOB_AFSEL1_SEL10_Pos            (8UL)                     /*!< SEL10 (Bit 8)                                         */
#define GPIOB_AFSEL1_SEL10_Msk            (0xf00UL)                 /*!< SEL10 (Bitfield-Mask: 0x0f)                           */
#define GPIOB_AFSEL1_SEL9_Pos             (4UL)                     /*!< SEL9 (Bit 4)                                          */
#define GPIOB_AFSEL1_SEL9_Msk             (0xf0UL)                  /*!< SEL9 (Bitfield-Mask: 0x0f)                            */
#define GPIOB_AFSEL1_SEL8_Pos             (0UL)                     /*!< SEL8 (Bit 0)                                          */
#define GPIOB_AFSEL1_SEL8_Msk             (0xfUL)                   /*!< SEL8 (Bitfield-Mask: 0x0f)                            */
/* ==========================================================  BC  =========================================================== */
#define GPIOB_BC_CR0_Pos                  (0UL)                     /*!< CR0 (Bit 0)                                           */
#define GPIOB_BC_CR0_Msk                  (0x1UL)                   /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR1_Pos                  (1UL)                     /*!< CR1 (Bit 1)                                           */
#define GPIOB_BC_CR1_Msk                  (0x2UL)                   /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR2_Pos                  (2UL)                     /*!< CR2 (Bit 2)                                           */
#define GPIOB_BC_CR2_Msk                  (0x4UL)                   /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR3_Pos                  (3UL)                     /*!< CR3 (Bit 3)                                           */
#define GPIOB_BC_CR3_Msk                  (0x8UL)                   /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR4_Pos                  (4UL)                     /*!< CR4 (Bit 4)                                           */
#define GPIOB_BC_CR4_Msk                  (0x10UL)                  /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR5_Pos                  (5UL)                     /*!< CR5 (Bit 5)                                           */
#define GPIOB_BC_CR5_Msk                  (0x20UL)                  /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR6_Pos                  (6UL)                     /*!< CR6 (Bit 6)                                           */
#define GPIOB_BC_CR6_Msk                  (0x40UL)                  /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR7_Pos                  (7UL)                     /*!< CR7 (Bit 7)                                           */
#define GPIOB_BC_CR7_Msk                  (0x80UL)                  /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR8_Pos                  (8UL)                     /*!< CR8 (Bit 8)                                           */
#define GPIOB_BC_CR8_Msk                  (0x100UL)                 /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR9_Pos                  (9UL)                     /*!< CR9 (Bit 9)                                           */
#define GPIOB_BC_CR9_Msk                  (0x200UL)                 /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOB_BC_CR10_Pos                 (10UL)                    /*!< CR10 (Bit 10)                                         */
#define GPIOB_BC_CR10_Msk                 (0x400UL)                 /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BC_CR11_Pos                 (11UL)                    /*!< CR11 (Bit 11)                                         */
#define GPIOB_BC_CR11_Msk                 (0x800UL)                 /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BC_CR12_Pos                 (12UL)                    /*!< CR12 (Bit 12)                                         */
#define GPIOB_BC_CR12_Msk                 (0x1000UL)                /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BC_CR13_Pos                 (13UL)                    /*!< CR13 (Bit 13)                                         */
#define GPIOB_BC_CR13_Msk                 (0x2000UL)                /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BC_CR14_Pos                 (14UL)                    /*!< CR14 (Bit 14)                                         */
#define GPIOB_BC_CR14_Msk                 (0x4000UL)                /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOB_BC_CR15_Pos                 (15UL)                    /*!< CR15 (Bit 15)                                         */
#define GPIOB_BC_CR15_Msk                 (0x8000UL)                /*!< CR15 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  TG  =========================================================== */
#define GPIOB_TG_TG0_Pos                  (0UL)                     /*!< TG0 (Bit 0)                                           */
#define GPIOB_TG_TG0_Msk                  (0x1UL)                   /*!< TG0 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG1_Pos                  (1UL)                     /*!< TG1 (Bit 1)                                           */
#define GPIOB_TG_TG1_Msk                  (0x2UL)                   /*!< TG1 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG2_Pos                  (2UL)                     /*!< TG2 (Bit 2)                                           */
#define GPIOB_TG_TG2_Msk                  (0x4UL)                   /*!< TG2 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG3_Pos                  (3UL)                     /*!< TG3 (Bit 3)                                           */
#define GPIOB_TG_TG3_Msk                  (0x8UL)                   /*!< TG3 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG4_Pos                  (4UL)                     /*!< TG4 (Bit 4)                                           */
#define GPIOB_TG_TG4_Msk                  (0x10UL)                  /*!< TG4 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG5_Pos                  (5UL)                     /*!< TG5 (Bit 5)                                           */
#define GPIOB_TG_TG5_Msk                  (0x20UL)                  /*!< TG5 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG6_Pos                  (6UL)                     /*!< TG6 (Bit 6)                                           */
#define GPIOB_TG_TG6_Msk                  (0x40UL)                  /*!< TG6 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG7_Pos                  (7UL)                     /*!< TG7 (Bit 7)                                           */
#define GPIOB_TG_TG7_Msk                  (0x80UL)                  /*!< TG7 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG8_Pos                  (8UL)                     /*!< TG8 (Bit 8)                                           */
#define GPIOB_TG_TG8_Msk                  (0x100UL)                 /*!< TG8 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG9_Pos                  (9UL)                     /*!< TG9 (Bit 9)                                           */
#define GPIOB_TG_TG9_Msk                  (0x200UL)                 /*!< TG9 (Bitfield-Mask: 0x01)                             */
#define GPIOB_TG_TG10_Pos                 (10UL)                    /*!< TG10 (Bit 10)                                         */
#define GPIOB_TG_TG10_Msk                 (0x400UL)                 /*!< TG10 (Bitfield-Mask: 0x01)                            */
#define GPIOB_TG_TG11_Pos                 (11UL)                    /*!< TG11 (Bit 11)                                         */
#define GPIOB_TG_TG11_Msk                 (0x800UL)                 /*!< TG11 (Bitfield-Mask: 0x01)                            */
#define GPIOB_TG_TG12_Pos                 (12UL)                    /*!< TG12 (Bit 12)                                         */
#define GPIOB_TG_TG12_Msk                 (0x1000UL)                /*!< TG12 (Bitfield-Mask: 0x01)                            */
#define GPIOB_TG_TG13_Pos                 (13UL)                    /*!< TG13 (Bit 13)                                         */
#define GPIOB_TG_TG13_Msk                 (0x2000UL)                /*!< TG13 (Bitfield-Mask: 0x01)                            */
#define GPIOB_TG_TG14_Pos                 (14UL)                    /*!< TG14 (Bit 14)                                         */
#define GPIOB_TG_TG14_Msk                 (0x4000UL)                /*!< TG14 (Bitfield-Mask: 0x01)                            */
#define GPIOB_TG_TG15_Pos                 (15UL)                    /*!< TG15 (Bit 15)                                         */
#define GPIOB_TG_TG15_Msk                 (0x8000UL)                /*!< TG15 (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           GPIOC                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define GPIOC_CTL_CTL15_Pos               (30UL)                    /*!< CTL15 (Bit 30)                                        */
#define GPIOC_CTL_CTL15_Msk               (0xc0000000UL)            /*!< CTL15 (Bitfield-Mask: 0x03)                           */
#define GPIOC_CTL_CTL14_Pos               (28UL)                    /*!< CTL14 (Bit 28)                                        */
#define GPIOC_CTL_CTL14_Msk               (0x30000000UL)            /*!< CTL14 (Bitfield-Mask: 0x03)                           */
#define GPIOC_CTL_CTL13_Pos               (26UL)                    /*!< CTL13 (Bit 26)                                        */
#define GPIOC_CTL_CTL13_Msk               (0xc000000UL)             /*!< CTL13 (Bitfield-Mask: 0x03)                           */
#define GPIOC_CTL_CTL12_Pos               (24UL)                    /*!< CTL12 (Bit 24)                                        */
#define GPIOC_CTL_CTL12_Msk               (0x3000000UL)             /*!< CTL12 (Bitfield-Mask: 0x03)                           */
#define GPIOC_CTL_CTL11_Pos               (22UL)                    /*!< CTL11 (Bit 22)                                        */
#define GPIOC_CTL_CTL11_Msk               (0xc00000UL)              /*!< CTL11 (Bitfield-Mask: 0x03)                           */
#define GPIOC_CTL_CTL10_Pos               (20UL)                    /*!< CTL10 (Bit 20)                                        */
#define GPIOC_CTL_CTL10_Msk               (0x300000UL)              /*!< CTL10 (Bitfield-Mask: 0x03)                           */
#define GPIOC_CTL_CTL9_Pos                (18UL)                    /*!< CTL9 (Bit 18)                                         */
#define GPIOC_CTL_CTL9_Msk                (0xc0000UL)               /*!< CTL9 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL8_Pos                (16UL)                    /*!< CTL8 (Bit 16)                                         */
#define GPIOC_CTL_CTL8_Msk                (0x30000UL)               /*!< CTL8 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL7_Pos                (14UL)                    /*!< CTL7 (Bit 14)                                         */
#define GPIOC_CTL_CTL7_Msk                (0xc000UL)                /*!< CTL7 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL6_Pos                (12UL)                    /*!< CTL6 (Bit 12)                                         */
#define GPIOC_CTL_CTL6_Msk                (0x3000UL)                /*!< CTL6 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL5_Pos                (10UL)                    /*!< CTL5 (Bit 10)                                         */
#define GPIOC_CTL_CTL5_Msk                (0xc00UL)                 /*!< CTL5 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL4_Pos                (8UL)                     /*!< CTL4 (Bit 8)                                          */
#define GPIOC_CTL_CTL4_Msk                (0x300UL)                 /*!< CTL4 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL3_Pos                (6UL)                     /*!< CTL3 (Bit 6)                                          */
#define GPIOC_CTL_CTL3_Msk                (0xc0UL)                  /*!< CTL3 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL2_Pos                (4UL)                     /*!< CTL2 (Bit 4)                                          */
#define GPIOC_CTL_CTL2_Msk                (0x30UL)                  /*!< CTL2 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL1_Pos                (2UL)                     /*!< CTL1 (Bit 2)                                          */
#define GPIOC_CTL_CTL1_Msk                (0xcUL)                   /*!< CTL1 (Bitfield-Mask: 0x03)                            */
#define GPIOC_CTL_CTL0_Pos                (0UL)                     /*!< CTL0 (Bit 0)                                          */
#define GPIOC_CTL_CTL0_Msk                (0x3UL)                   /*!< CTL0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  OMODE  ========================================================= */
#define GPIOC_OMODE_OM15_Pos              (15UL)                    /*!< OM15 (Bit 15)                                         */
#define GPIOC_OMODE_OM15_Msk              (0x8000UL)                /*!< OM15 (Bitfield-Mask: 0x01)                            */
#define GPIOC_OMODE_OM14_Pos              (14UL)                    /*!< OM14 (Bit 14)                                         */
#define GPIOC_OMODE_OM14_Msk              (0x4000UL)                /*!< OM14 (Bitfield-Mask: 0x01)                            */
#define GPIOC_OMODE_OM13_Pos              (13UL)                    /*!< OM13 (Bit 13)                                         */
#define GPIOC_OMODE_OM13_Msk              (0x2000UL)                /*!< OM13 (Bitfield-Mask: 0x01)                            */
#define GPIOC_OMODE_OM12_Pos              (12UL)                    /*!< OM12 (Bit 12)                                         */
#define GPIOC_OMODE_OM12_Msk              (0x1000UL)                /*!< OM12 (Bitfield-Mask: 0x01)                            */
#define GPIOC_OMODE_OM11_Pos              (11UL)                    /*!< OM11 (Bit 11)                                         */
#define GPIOC_OMODE_OM11_Msk              (0x800UL)                 /*!< OM11 (Bitfield-Mask: 0x01)                            */
#define GPIOC_OMODE_OM10_Pos              (10UL)                    /*!< OM10 (Bit 10)                                         */
#define GPIOC_OMODE_OM10_Msk              (0x400UL)                 /*!< OM10 (Bitfield-Mask: 0x01)                            */
#define GPIOC_OMODE_OM9_Pos               (9UL)                     /*!< OM9 (Bit 9)                                           */
#define GPIOC_OMODE_OM9_Msk               (0x200UL)                 /*!< OM9 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM8_Pos               (8UL)                     /*!< OM8 (Bit 8)                                           */
#define GPIOC_OMODE_OM8_Msk               (0x100UL)                 /*!< OM8 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM7_Pos               (7UL)                     /*!< OM7 (Bit 7)                                           */
#define GPIOC_OMODE_OM7_Msk               (0x80UL)                  /*!< OM7 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM6_Pos               (6UL)                     /*!< OM6 (Bit 6)                                           */
#define GPIOC_OMODE_OM6_Msk               (0x40UL)                  /*!< OM6 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM5_Pos               (5UL)                     /*!< OM5 (Bit 5)                                           */
#define GPIOC_OMODE_OM5_Msk               (0x20UL)                  /*!< OM5 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM4_Pos               (4UL)                     /*!< OM4 (Bit 4)                                           */
#define GPIOC_OMODE_OM4_Msk               (0x10UL)                  /*!< OM4 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM3_Pos               (3UL)                     /*!< OM3 (Bit 3)                                           */
#define GPIOC_OMODE_OM3_Msk               (0x8UL)                   /*!< OM3 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM2_Pos               (2UL)                     /*!< OM2 (Bit 2)                                           */
#define GPIOC_OMODE_OM2_Msk               (0x4UL)                   /*!< OM2 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM1_Pos               (1UL)                     /*!< OM1 (Bit 1)                                           */
#define GPIOC_OMODE_OM1_Msk               (0x2UL)                   /*!< OM1 (Bitfield-Mask: 0x01)                             */
#define GPIOC_OMODE_OM0_Pos               (0UL)                     /*!< OM0 (Bit 0)                                           */
#define GPIOC_OMODE_OM0_Msk               (0x1UL)                   /*!< OM0 (Bitfield-Mask: 0x01)                             */
/* =========================================================  OSPD  ========================================================== */
#define GPIOC_OSPD_OSPD15_Pos             (30UL)                    /*!< OSPD15 (Bit 30)                                       */
#define GPIOC_OSPD_OSPD15_Msk             (0xc0000000UL)            /*!< OSPD15 (Bitfield-Mask: 0x03)                          */
#define GPIOC_OSPD_OSPD14_Pos             (28UL)                    /*!< OSPD14 (Bit 28)                                       */
#define GPIOC_OSPD_OSPD14_Msk             (0x30000000UL)            /*!< OSPD14 (Bitfield-Mask: 0x03)                          */
#define GPIOC_OSPD_OSPD13_Pos             (26UL)                    /*!< OSPD13 (Bit 26)                                       */
#define GPIOC_OSPD_OSPD13_Msk             (0xc000000UL)             /*!< OSPD13 (Bitfield-Mask: 0x03)                          */
#define GPIOC_OSPD_OSPD12_Pos             (24UL)                    /*!< OSPD12 (Bit 24)                                       */
#define GPIOC_OSPD_OSPD12_Msk             (0x3000000UL)             /*!< OSPD12 (Bitfield-Mask: 0x03)                          */
#define GPIOC_OSPD_OSPD11_Pos             (22UL)                    /*!< OSPD11 (Bit 22)                                       */
#define GPIOC_OSPD_OSPD11_Msk             (0xc00000UL)              /*!< OSPD11 (Bitfield-Mask: 0x03)                          */
#define GPIOC_OSPD_OSPD10_Pos             (20UL)                    /*!< OSPD10 (Bit 20)                                       */
#define GPIOC_OSPD_OSPD10_Msk             (0x300000UL)              /*!< OSPD10 (Bitfield-Mask: 0x03)                          */
#define GPIOC_OSPD_OSPD9_Pos              (18UL)                    /*!< OSPD9 (Bit 18)                                        */
#define GPIOC_OSPD_OSPD9_Msk              (0xc0000UL)               /*!< OSPD9 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD8_Pos              (16UL)                    /*!< OSPD8 (Bit 16)                                        */
#define GPIOC_OSPD_OSPD8_Msk              (0x30000UL)               /*!< OSPD8 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD7_Pos              (14UL)                    /*!< OSPD7 (Bit 14)                                        */
#define GPIOC_OSPD_OSPD7_Msk              (0xc000UL)                /*!< OSPD7 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD6_Pos              (12UL)                    /*!< OSPD6 (Bit 12)                                        */
#define GPIOC_OSPD_OSPD6_Msk              (0x3000UL)                /*!< OSPD6 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD5_Pos              (10UL)                    /*!< OSPD5 (Bit 10)                                        */
#define GPIOC_OSPD_OSPD5_Msk              (0xc00UL)                 /*!< OSPD5 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD4_Pos              (8UL)                     /*!< OSPD4 (Bit 8)                                         */
#define GPIOC_OSPD_OSPD4_Msk              (0x300UL)                 /*!< OSPD4 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD3_Pos              (6UL)                     /*!< OSPD3 (Bit 6)                                         */
#define GPIOC_OSPD_OSPD3_Msk              (0xc0UL)                  /*!< OSPD3 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD2_Pos              (4UL)                     /*!< OSPD2 (Bit 4)                                         */
#define GPIOC_OSPD_OSPD2_Msk              (0x30UL)                  /*!< OSPD2 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD1_Pos              (2UL)                     /*!< OSPD1 (Bit 2)                                         */
#define GPIOC_OSPD_OSPD1_Msk              (0xcUL)                   /*!< OSPD1 (Bitfield-Mask: 0x03)                           */
#define GPIOC_OSPD_OSPD0_Pos              (0UL)                     /*!< OSPD0 (Bit 0)                                         */
#define GPIOC_OSPD_OSPD0_Msk              (0x3UL)                   /*!< OSPD0 (Bitfield-Mask: 0x03)                           */
/* ==========================================================  PUD  ========================================================== */
#define GPIOC_PUD_PUD15_Pos               (30UL)                    /*!< PUD15 (Bit 30)                                        */
#define GPIOC_PUD_PUD15_Msk               (0xc0000000UL)            /*!< PUD15 (Bitfield-Mask: 0x03)                           */
#define GPIOC_PUD_PUD14_Pos               (28UL)                    /*!< PUD14 (Bit 28)                                        */
#define GPIOC_PUD_PUD14_Msk               (0x30000000UL)            /*!< PUD14 (Bitfield-Mask: 0x03)                           */
#define GPIOC_PUD_PUD13_Pos               (26UL)                    /*!< PUD13 (Bit 26)                                        */
#define GPIOC_PUD_PUD13_Msk               (0xc000000UL)             /*!< PUD13 (Bitfield-Mask: 0x03)                           */
#define GPIOC_PUD_PUD12_Pos               (24UL)                    /*!< PUD12 (Bit 24)                                        */
#define GPIOC_PUD_PUD12_Msk               (0x3000000UL)             /*!< PUD12 (Bitfield-Mask: 0x03)                           */
#define GPIOC_PUD_PUD11_Pos               (22UL)                    /*!< PUD11 (Bit 22)                                        */
#define GPIOC_PUD_PUD11_Msk               (0xc00000UL)              /*!< PUD11 (Bitfield-Mask: 0x03)                           */
#define GPIOC_PUD_PUD10_Pos               (20UL)                    /*!< PUD10 (Bit 20)                                        */
#define GPIOC_PUD_PUD10_Msk               (0x300000UL)              /*!< PUD10 (Bitfield-Mask: 0x03)                           */
#define GPIOC_PUD_PUD9_Pos                (18UL)                    /*!< PUD9 (Bit 18)                                         */
#define GPIOC_PUD_PUD9_Msk                (0xc0000UL)               /*!< PUD9 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD8_Pos                (16UL)                    /*!< PUD8 (Bit 16)                                         */
#define GPIOC_PUD_PUD8_Msk                (0x30000UL)               /*!< PUD8 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD7_Pos                (14UL)                    /*!< PUD7 (Bit 14)                                         */
#define GPIOC_PUD_PUD7_Msk                (0xc000UL)                /*!< PUD7 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD6_Pos                (12UL)                    /*!< PUD6 (Bit 12)                                         */
#define GPIOC_PUD_PUD6_Msk                (0x3000UL)                /*!< PUD6 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD5_Pos                (10UL)                    /*!< PUD5 (Bit 10)                                         */
#define GPIOC_PUD_PUD5_Msk                (0xc00UL)                 /*!< PUD5 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD4_Pos                (8UL)                     /*!< PUD4 (Bit 8)                                          */
#define GPIOC_PUD_PUD4_Msk                (0x300UL)                 /*!< PUD4 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD3_Pos                (6UL)                     /*!< PUD3 (Bit 6)                                          */
#define GPIOC_PUD_PUD3_Msk                (0xc0UL)                  /*!< PUD3 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD2_Pos                (4UL)                     /*!< PUD2 (Bit 4)                                          */
#define GPIOC_PUD_PUD2_Msk                (0x30UL)                  /*!< PUD2 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD1_Pos                (2UL)                     /*!< PUD1 (Bit 2)                                          */
#define GPIOC_PUD_PUD1_Msk                (0xcUL)                   /*!< PUD1 (Bitfield-Mask: 0x03)                            */
#define GPIOC_PUD_PUD0_Pos                (0UL)                     /*!< PUD0 (Bit 0)                                          */
#define GPIOC_PUD_PUD0_Msk                (0x3UL)                   /*!< PUD0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  ISTAT  ========================================================= */
#define GPIOC_ISTAT_ISTAT15_Pos           (15UL)                    /*!< ISTAT15 (Bit 15)                                      */
#define GPIOC_ISTAT_ISTAT15_Msk           (0x8000UL)                /*!< ISTAT15 (Bitfield-Mask: 0x01)                         */
#define GPIOC_ISTAT_ISTAT14_Pos           (14UL)                    /*!< ISTAT14 (Bit 14)                                      */
#define GPIOC_ISTAT_ISTAT14_Msk           (0x4000UL)                /*!< ISTAT14 (Bitfield-Mask: 0x01)                         */
#define GPIOC_ISTAT_ISTAT13_Pos           (13UL)                    /*!< ISTAT13 (Bit 13)                                      */
#define GPIOC_ISTAT_ISTAT13_Msk           (0x2000UL)                /*!< ISTAT13 (Bitfield-Mask: 0x01)                         */
#define GPIOC_ISTAT_ISTAT12_Pos           (12UL)                    /*!< ISTAT12 (Bit 12)                                      */
#define GPIOC_ISTAT_ISTAT12_Msk           (0x1000UL)                /*!< ISTAT12 (Bitfield-Mask: 0x01)                         */
#define GPIOC_ISTAT_ISTAT11_Pos           (11UL)                    /*!< ISTAT11 (Bit 11)                                      */
#define GPIOC_ISTAT_ISTAT11_Msk           (0x800UL)                 /*!< ISTAT11 (Bitfield-Mask: 0x01)                         */
#define GPIOC_ISTAT_ISTAT10_Pos           (10UL)                    /*!< ISTAT10 (Bit 10)                                      */
#define GPIOC_ISTAT_ISTAT10_Msk           (0x400UL)                 /*!< ISTAT10 (Bitfield-Mask: 0x01)                         */
#define GPIOC_ISTAT_ISTAT9_Pos            (9UL)                     /*!< ISTAT9 (Bit 9)                                        */
#define GPIOC_ISTAT_ISTAT9_Msk            (0x200UL)                 /*!< ISTAT9 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT8_Pos            (8UL)                     /*!< ISTAT8 (Bit 8)                                        */
#define GPIOC_ISTAT_ISTAT8_Msk            (0x100UL)                 /*!< ISTAT8 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT7_Pos            (7UL)                     /*!< ISTAT7 (Bit 7)                                        */
#define GPIOC_ISTAT_ISTAT7_Msk            (0x80UL)                  /*!< ISTAT7 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT6_Pos            (6UL)                     /*!< ISTAT6 (Bit 6)                                        */
#define GPIOC_ISTAT_ISTAT6_Msk            (0x40UL)                  /*!< ISTAT6 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT5_Pos            (5UL)                     /*!< ISTAT5 (Bit 5)                                        */
#define GPIOC_ISTAT_ISTAT5_Msk            (0x20UL)                  /*!< ISTAT5 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT4_Pos            (4UL)                     /*!< ISTAT4 (Bit 4)                                        */
#define GPIOC_ISTAT_ISTAT4_Msk            (0x10UL)                  /*!< ISTAT4 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT3_Pos            (3UL)                     /*!< ISTAT3 (Bit 3)                                        */
#define GPIOC_ISTAT_ISTAT3_Msk            (0x8UL)                   /*!< ISTAT3 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT2_Pos            (2UL)                     /*!< ISTAT2 (Bit 2)                                        */
#define GPIOC_ISTAT_ISTAT2_Msk            (0x4UL)                   /*!< ISTAT2 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT1_Pos            (1UL)                     /*!< ISTAT1 (Bit 1)                                        */
#define GPIOC_ISTAT_ISTAT1_Msk            (0x2UL)                   /*!< ISTAT1 (Bitfield-Mask: 0x01)                          */
#define GPIOC_ISTAT_ISTAT0_Pos            (0UL)                     /*!< ISTAT0 (Bit 0)                                        */
#define GPIOC_ISTAT_ISTAT0_Msk            (0x1UL)                   /*!< ISTAT0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  OCTL  ========================================================== */
#define GPIOC_OCTL_OCTL15_Pos             (15UL)                    /*!< OCTL15 (Bit 15)                                       */
#define GPIOC_OCTL_OCTL15_Msk             (0x8000UL)                /*!< OCTL15 (Bitfield-Mask: 0x01)                          */
#define GPIOC_OCTL_OCTL14_Pos             (14UL)                    /*!< OCTL14 (Bit 14)                                       */
#define GPIOC_OCTL_OCTL14_Msk             (0x4000UL)                /*!< OCTL14 (Bitfield-Mask: 0x01)                          */
#define GPIOC_OCTL_OCTL13_Pos             (13UL)                    /*!< OCTL13 (Bit 13)                                       */
#define GPIOC_OCTL_OCTL13_Msk             (0x2000UL)                /*!< OCTL13 (Bitfield-Mask: 0x01)                          */
#define GPIOC_OCTL_OCTL12_Pos             (12UL)                    /*!< OCTL12 (Bit 12)                                       */
#define GPIOC_OCTL_OCTL12_Msk             (0x1000UL)                /*!< OCTL12 (Bitfield-Mask: 0x01)                          */
#define GPIOC_OCTL_OCTL11_Pos             (11UL)                    /*!< OCTL11 (Bit 11)                                       */
#define GPIOC_OCTL_OCTL11_Msk             (0x800UL)                 /*!< OCTL11 (Bitfield-Mask: 0x01)                          */
#define GPIOC_OCTL_OCTL10_Pos             (10UL)                    /*!< OCTL10 (Bit 10)                                       */
#define GPIOC_OCTL_OCTL10_Msk             (0x400UL)                 /*!< OCTL10 (Bitfield-Mask: 0x01)                          */
#define GPIOC_OCTL_OCTL9_Pos              (9UL)                     /*!< OCTL9 (Bit 9)                                         */
#define GPIOC_OCTL_OCTL9_Msk              (0x200UL)                 /*!< OCTL9 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL8_Pos              (8UL)                     /*!< OCTL8 (Bit 8)                                         */
#define GPIOC_OCTL_OCTL8_Msk              (0x100UL)                 /*!< OCTL8 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL7_Pos              (7UL)                     /*!< OCTL7 (Bit 7)                                         */
#define GPIOC_OCTL_OCTL7_Msk              (0x80UL)                  /*!< OCTL7 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL6_Pos              (6UL)                     /*!< OCTL6 (Bit 6)                                         */
#define GPIOC_OCTL_OCTL6_Msk              (0x40UL)                  /*!< OCTL6 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL5_Pos              (5UL)                     /*!< OCTL5 (Bit 5)                                         */
#define GPIOC_OCTL_OCTL5_Msk              (0x20UL)                  /*!< OCTL5 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL4_Pos              (4UL)                     /*!< OCTL4 (Bit 4)                                         */
#define GPIOC_OCTL_OCTL4_Msk              (0x10UL)                  /*!< OCTL4 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL3_Pos              (3UL)                     /*!< OCTL3 (Bit 3)                                         */
#define GPIOC_OCTL_OCTL3_Msk              (0x8UL)                   /*!< OCTL3 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL2_Pos              (2UL)                     /*!< OCTL2 (Bit 2)                                         */
#define GPIOC_OCTL_OCTL2_Msk              (0x4UL)                   /*!< OCTL2 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL1_Pos              (1UL)                     /*!< OCTL1 (Bit 1)                                         */
#define GPIOC_OCTL_OCTL1_Msk              (0x2UL)                   /*!< OCTL1 (Bitfield-Mask: 0x01)                           */
#define GPIOC_OCTL_OCTL0_Pos              (0UL)                     /*!< OCTL0 (Bit 0)                                         */
#define GPIOC_OCTL_OCTL0_Msk              (0x1UL)                   /*!< OCTL0 (Bitfield-Mask: 0x01)                           */
/* ==========================================================  BOP  ========================================================== */
#define GPIOC_BOP_CR15_Pos                (31UL)                    /*!< CR15 (Bit 31)                                         */
#define GPIOC_BOP_CR15_Msk                (0x80000000UL)            /*!< CR15 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_CR14_Pos                (30UL)                    /*!< CR14 (Bit 30)                                         */
#define GPIOC_BOP_CR14_Msk                (0x40000000UL)            /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_CR13_Pos                (29UL)                    /*!< CR13 (Bit 29)                                         */
#define GPIOC_BOP_CR13_Msk                (0x20000000UL)            /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_CR12_Pos                (28UL)                    /*!< CR12 (Bit 28)                                         */
#define GPIOC_BOP_CR12_Msk                (0x10000000UL)            /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_CR11_Pos                (27UL)                    /*!< CR11 (Bit 27)                                         */
#define GPIOC_BOP_CR11_Msk                (0x8000000UL)             /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_CR10_Pos                (26UL)                    /*!< CR10 (Bit 26)                                         */
#define GPIOC_BOP_CR10_Msk                (0x4000000UL)             /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_CR9_Pos                 (25UL)                    /*!< CR9 (Bit 25)                                          */
#define GPIOC_BOP_CR9_Msk                 (0x2000000UL)             /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR8_Pos                 (24UL)                    /*!< CR8 (Bit 24)                                          */
#define GPIOC_BOP_CR8_Msk                 (0x1000000UL)             /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR7_Pos                 (23UL)                    /*!< CR7 (Bit 23)                                          */
#define GPIOC_BOP_CR7_Msk                 (0x800000UL)              /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR6_Pos                 (22UL)                    /*!< CR6 (Bit 22)                                          */
#define GPIOC_BOP_CR6_Msk                 (0x400000UL)              /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR5_Pos                 (21UL)                    /*!< CR5 (Bit 21)                                          */
#define GPIOC_BOP_CR5_Msk                 (0x200000UL)              /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR4_Pos                 (20UL)                    /*!< CR4 (Bit 20)                                          */
#define GPIOC_BOP_CR4_Msk                 (0x100000UL)              /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR3_Pos                 (19UL)                    /*!< CR3 (Bit 19)                                          */
#define GPIOC_BOP_CR3_Msk                 (0x80000UL)               /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR2_Pos                 (18UL)                    /*!< CR2 (Bit 18)                                          */
#define GPIOC_BOP_CR2_Msk                 (0x40000UL)               /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR1_Pos                 (17UL)                    /*!< CR1 (Bit 17)                                          */
#define GPIOC_BOP_CR1_Msk                 (0x20000UL)               /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_CR0_Pos                 (16UL)                    /*!< CR0 (Bit 16)                                          */
#define GPIOC_BOP_CR0_Msk                 (0x10000UL)               /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BOP_BOP15_Pos               (15UL)                    /*!< BOP15 (Bit 15)                                        */
#define GPIOC_BOP_BOP15_Msk               (0x8000UL)                /*!< BOP15 (Bitfield-Mask: 0x01)                           */
#define GPIOC_BOP_BOP14_Pos               (14UL)                    /*!< BOP14 (Bit 14)                                        */
#define GPIOC_BOP_BOP14_Msk               (0x4000UL)                /*!< BOP14 (Bitfield-Mask: 0x01)                           */
#define GPIOC_BOP_BOP13_Pos               (13UL)                    /*!< BOP13 (Bit 13)                                        */
#define GPIOC_BOP_BOP13_Msk               (0x2000UL)                /*!< BOP13 (Bitfield-Mask: 0x01)                           */
#define GPIOC_BOP_BOP12_Pos               (12UL)                    /*!< BOP12 (Bit 12)                                        */
#define GPIOC_BOP_BOP12_Msk               (0x1000UL)                /*!< BOP12 (Bitfield-Mask: 0x01)                           */
#define GPIOC_BOP_BOP11_Pos               (11UL)                    /*!< BOP11 (Bit 11)                                        */
#define GPIOC_BOP_BOP11_Msk               (0x800UL)                 /*!< BOP11 (Bitfield-Mask: 0x01)                           */
#define GPIOC_BOP_BOP10_Pos               (10UL)                    /*!< BOP10 (Bit 10)                                        */
#define GPIOC_BOP_BOP10_Msk               (0x400UL)                 /*!< BOP10 (Bitfield-Mask: 0x01)                           */
#define GPIOC_BOP_BOP9_Pos                (9UL)                     /*!< BOP9 (Bit 9)                                          */
#define GPIOC_BOP_BOP9_Msk                (0x200UL)                 /*!< BOP9 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP8_Pos                (8UL)                     /*!< BOP8 (Bit 8)                                          */
#define GPIOC_BOP_BOP8_Msk                (0x100UL)                 /*!< BOP8 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP7_Pos                (7UL)                     /*!< BOP7 (Bit 7)                                          */
#define GPIOC_BOP_BOP7_Msk                (0x80UL)                  /*!< BOP7 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP6_Pos                (6UL)                     /*!< BOP6 (Bit 6)                                          */
#define GPIOC_BOP_BOP6_Msk                (0x40UL)                  /*!< BOP6 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP5_Pos                (5UL)                     /*!< BOP5 (Bit 5)                                          */
#define GPIOC_BOP_BOP5_Msk                (0x20UL)                  /*!< BOP5 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP4_Pos                (4UL)                     /*!< BOP4 (Bit 4)                                          */
#define GPIOC_BOP_BOP4_Msk                (0x10UL)                  /*!< BOP4 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP3_Pos                (3UL)                     /*!< BOP3 (Bit 3)                                          */
#define GPIOC_BOP_BOP3_Msk                (0x8UL)                   /*!< BOP3 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP2_Pos                (2UL)                     /*!< BOP2 (Bit 2)                                          */
#define GPIOC_BOP_BOP2_Msk                (0x4UL)                   /*!< BOP2 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP1_Pos                (1UL)                     /*!< BOP1 (Bit 1)                                          */
#define GPIOC_BOP_BOP1_Msk                (0x2UL)                   /*!< BOP1 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BOP_BOP0_Pos                (0UL)                     /*!< BOP0 (Bit 0)                                          */
#define GPIOC_BOP_BOP0_Msk                (0x1UL)                   /*!< BOP0 (Bitfield-Mask: 0x01)                            */
/* ========================================================  AFSEL0  ========================================================= */
#define GPIOC_AFSEL0_SEL7_Pos             (28UL)                    /*!< SEL7 (Bit 28)                                         */
#define GPIOC_AFSEL0_SEL7_Msk             (0xf0000000UL)            /*!< SEL7 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL6_Pos             (24UL)                    /*!< SEL6 (Bit 24)                                         */
#define GPIOC_AFSEL0_SEL6_Msk             (0xf000000UL)             /*!< SEL6 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL5_Pos             (20UL)                    /*!< SEL5 (Bit 20)                                         */
#define GPIOC_AFSEL0_SEL5_Msk             (0xf00000UL)              /*!< SEL5 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL4_Pos             (16UL)                    /*!< SEL4 (Bit 16)                                         */
#define GPIOC_AFSEL0_SEL4_Msk             (0xf0000UL)               /*!< SEL4 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL3_Pos             (12UL)                    /*!< SEL3 (Bit 12)                                         */
#define GPIOC_AFSEL0_SEL3_Msk             (0xf000UL)                /*!< SEL3 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL2_Pos             (8UL)                     /*!< SEL2 (Bit 8)                                          */
#define GPIOC_AFSEL0_SEL2_Msk             (0xf00UL)                 /*!< SEL2 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL1_Pos             (4UL)                     /*!< SEL1 (Bit 4)                                          */
#define GPIOC_AFSEL0_SEL1_Msk             (0xf0UL)                  /*!< SEL1 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL0_SEL0_Pos             (0UL)                     /*!< SEL0 (Bit 0)                                          */
#define GPIOC_AFSEL0_SEL0_Msk             (0xfUL)                   /*!< SEL0 (Bitfield-Mask: 0x0f)                            */
/* ========================================================  AFSEL1  ========================================================= */
#define GPIOC_AFSEL1_SEL15_Pos            (28UL)                    /*!< SEL15 (Bit 28)                                        */
#define GPIOC_AFSEL1_SEL15_Msk            (0xf0000000UL)            /*!< SEL15 (Bitfield-Mask: 0x0f)                           */
#define GPIOC_AFSEL1_SEL14_Pos            (24UL)                    /*!< SEL14 (Bit 24)                                        */
#define GPIOC_AFSEL1_SEL14_Msk            (0xf000000UL)             /*!< SEL14 (Bitfield-Mask: 0x0f)                           */
#define GPIOC_AFSEL1_SEL13_Pos            (20UL)                    /*!< SEL13 (Bit 20)                                        */
#define GPIOC_AFSEL1_SEL13_Msk            (0xf00000UL)              /*!< SEL13 (Bitfield-Mask: 0x0f)                           */
#define GPIOC_AFSEL1_SEL12_Pos            (16UL)                    /*!< SEL12 (Bit 16)                                        */
#define GPIOC_AFSEL1_SEL12_Msk            (0xf0000UL)               /*!< SEL12 (Bitfield-Mask: 0x0f)                           */
#define GPIOC_AFSEL1_SEL11_Pos            (12UL)                    /*!< SEL11 (Bit 12)                                        */
#define GPIOC_AFSEL1_SEL11_Msk            (0xf000UL)                /*!< SEL11 (Bitfield-Mask: 0x0f)                           */
#define GPIOC_AFSEL1_SEL10_Pos            (8UL)                     /*!< SEL10 (Bit 8)                                         */
#define GPIOC_AFSEL1_SEL10_Msk            (0xf00UL)                 /*!< SEL10 (Bitfield-Mask: 0x0f)                           */
#define GPIOC_AFSEL1_SEL9_Pos             (4UL)                     /*!< SEL9 (Bit 4)                                          */
#define GPIOC_AFSEL1_SEL9_Msk             (0xf0UL)                  /*!< SEL9 (Bitfield-Mask: 0x0f)                            */
#define GPIOC_AFSEL1_SEL8_Pos             (0UL)                     /*!< SEL8 (Bit 0)                                          */
#define GPIOC_AFSEL1_SEL8_Msk             (0xfUL)                   /*!< SEL8 (Bitfield-Mask: 0x0f)                            */
/* ==========================================================  BC  =========================================================== */
#define GPIOC_BC_CR0_Pos                  (0UL)                     /*!< CR0 (Bit 0)                                           */
#define GPIOC_BC_CR0_Msk                  (0x1UL)                   /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR1_Pos                  (1UL)                     /*!< CR1 (Bit 1)                                           */
#define GPIOC_BC_CR1_Msk                  (0x2UL)                   /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR2_Pos                  (2UL)                     /*!< CR2 (Bit 2)                                           */
#define GPIOC_BC_CR2_Msk                  (0x4UL)                   /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR3_Pos                  (3UL)                     /*!< CR3 (Bit 3)                                           */
#define GPIOC_BC_CR3_Msk                  (0x8UL)                   /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR4_Pos                  (4UL)                     /*!< CR4 (Bit 4)                                           */
#define GPIOC_BC_CR4_Msk                  (0x10UL)                  /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR5_Pos                  (5UL)                     /*!< CR5 (Bit 5)                                           */
#define GPIOC_BC_CR5_Msk                  (0x20UL)                  /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR6_Pos                  (6UL)                     /*!< CR6 (Bit 6)                                           */
#define GPIOC_BC_CR6_Msk                  (0x40UL)                  /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR7_Pos                  (7UL)                     /*!< CR7 (Bit 7)                                           */
#define GPIOC_BC_CR7_Msk                  (0x80UL)                  /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR8_Pos                  (8UL)                     /*!< CR8 (Bit 8)                                           */
#define GPIOC_BC_CR8_Msk                  (0x100UL)                 /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR9_Pos                  (9UL)                     /*!< CR9 (Bit 9)                                           */
#define GPIOC_BC_CR9_Msk                  (0x200UL)                 /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOC_BC_CR10_Pos                 (10UL)                    /*!< CR10 (Bit 10)                                         */
#define GPIOC_BC_CR10_Msk                 (0x400UL)                 /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BC_CR11_Pos                 (11UL)                    /*!< CR11 (Bit 11)                                         */
#define GPIOC_BC_CR11_Msk                 (0x800UL)                 /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BC_CR12_Pos                 (12UL)                    /*!< CR12 (Bit 12)                                         */
#define GPIOC_BC_CR12_Msk                 (0x1000UL)                /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BC_CR13_Pos                 (13UL)                    /*!< CR13 (Bit 13)                                         */
#define GPIOC_BC_CR13_Msk                 (0x2000UL)                /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BC_CR14_Pos                 (14UL)                    /*!< CR14 (Bit 14)                                         */
#define GPIOC_BC_CR14_Msk                 (0x4000UL)                /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOC_BC_CR15_Pos                 (15UL)                    /*!< CR15 (Bit 15)                                         */
#define GPIOC_BC_CR15_Msk                 (0x8000UL)                /*!< CR15 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  TG  =========================================================== */
#define GPIOC_TG_TG0_Pos                  (0UL)                     /*!< TG0 (Bit 0)                                           */
#define GPIOC_TG_TG0_Msk                  (0x1UL)                   /*!< TG0 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG1_Pos                  (1UL)                     /*!< TG1 (Bit 1)                                           */
#define GPIOC_TG_TG1_Msk                  (0x2UL)                   /*!< TG1 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG2_Pos                  (2UL)                     /*!< TG2 (Bit 2)                                           */
#define GPIOC_TG_TG2_Msk                  (0x4UL)                   /*!< TG2 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG3_Pos                  (3UL)                     /*!< TG3 (Bit 3)                                           */
#define GPIOC_TG_TG3_Msk                  (0x8UL)                   /*!< TG3 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG4_Pos                  (4UL)                     /*!< TG4 (Bit 4)                                           */
#define GPIOC_TG_TG4_Msk                  (0x10UL)                  /*!< TG4 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG5_Pos                  (5UL)                     /*!< TG5 (Bit 5)                                           */
#define GPIOC_TG_TG5_Msk                  (0x20UL)                  /*!< TG5 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG6_Pos                  (6UL)                     /*!< TG6 (Bit 6)                                           */
#define GPIOC_TG_TG6_Msk                  (0x40UL)                  /*!< TG6 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG7_Pos                  (7UL)                     /*!< TG7 (Bit 7)                                           */
#define GPIOC_TG_TG7_Msk                  (0x80UL)                  /*!< TG7 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG8_Pos                  (8UL)                     /*!< TG8 (Bit 8)                                           */
#define GPIOC_TG_TG8_Msk                  (0x100UL)                 /*!< TG8 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG9_Pos                  (9UL)                     /*!< TG9 (Bit 9)                                           */
#define GPIOC_TG_TG9_Msk                  (0x200UL)                 /*!< TG9 (Bitfield-Mask: 0x01)                             */
#define GPIOC_TG_TG10_Pos                 (10UL)                    /*!< TG10 (Bit 10)                                         */
#define GPIOC_TG_TG10_Msk                 (0x400UL)                 /*!< TG10 (Bitfield-Mask: 0x01)                            */
#define GPIOC_TG_TG11_Pos                 (11UL)                    /*!< TG11 (Bit 11)                                         */
#define GPIOC_TG_TG11_Msk                 (0x800UL)                 /*!< TG11 (Bitfield-Mask: 0x01)                            */
#define GPIOC_TG_TG12_Pos                 (12UL)                    /*!< TG12 (Bit 12)                                         */
#define GPIOC_TG_TG12_Msk                 (0x1000UL)                /*!< TG12 (Bitfield-Mask: 0x01)                            */
#define GPIOC_TG_TG13_Pos                 (13UL)                    /*!< TG13 (Bit 13)                                         */
#define GPIOC_TG_TG13_Msk                 (0x2000UL)                /*!< TG13 (Bitfield-Mask: 0x01)                            */
#define GPIOC_TG_TG14_Pos                 (14UL)                    /*!< TG14 (Bit 14)                                         */
#define GPIOC_TG_TG14_Msk                 (0x4000UL)                /*!< TG14 (Bitfield-Mask: 0x01)                            */
#define GPIOC_TG_TG15_Pos                 (15UL)                    /*!< TG15 (Bit 15)                                         */
#define GPIOC_TG_TG15_Msk                 (0x8000UL)                /*!< TG15 (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           GPIOF                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define GPIOF_CTL_CTL15_Pos               (30UL)                    /*!< CTL15 (Bit 30)                                        */
#define GPIOF_CTL_CTL15_Msk               (0xc0000000UL)            /*!< CTL15 (Bitfield-Mask: 0x03)                           */
#define GPIOF_CTL_CTL14_Pos               (28UL)                    /*!< CTL14 (Bit 28)                                        */
#define GPIOF_CTL_CTL14_Msk               (0x30000000UL)            /*!< CTL14 (Bitfield-Mask: 0x03)                           */
#define GPIOF_CTL_CTL13_Pos               (26UL)                    /*!< CTL13 (Bit 26)                                        */
#define GPIOF_CTL_CTL13_Msk               (0xc000000UL)             /*!< CTL13 (Bitfield-Mask: 0x03)                           */
#define GPIOF_CTL_CTL12_Pos               (24UL)                    /*!< CTL12 (Bit 24)                                        */
#define GPIOF_CTL_CTL12_Msk               (0x3000000UL)             /*!< CTL12 (Bitfield-Mask: 0x03)                           */
#define GPIOF_CTL_CTL11_Pos               (22UL)                    /*!< CTL11 (Bit 22)                                        */
#define GPIOF_CTL_CTL11_Msk               (0xc00000UL)              /*!< CTL11 (Bitfield-Mask: 0x03)                           */
#define GPIOF_CTL_CTL10_Pos               (20UL)                    /*!< CTL10 (Bit 20)                                        */
#define GPIOF_CTL_CTL10_Msk               (0x300000UL)              /*!< CTL10 (Bitfield-Mask: 0x03)                           */
#define GPIOF_CTL_CTL9_Pos                (18UL)                    /*!< CTL9 (Bit 18)                                         */
#define GPIOF_CTL_CTL9_Msk                (0xc0000UL)               /*!< CTL9 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL8_Pos                (16UL)                    /*!< CTL8 (Bit 16)                                         */
#define GPIOF_CTL_CTL8_Msk                (0x30000UL)               /*!< CTL8 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL7_Pos                (14UL)                    /*!< CTL7 (Bit 14)                                         */
#define GPIOF_CTL_CTL7_Msk                (0xc000UL)                /*!< CTL7 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL6_Pos                (12UL)                    /*!< CTL6 (Bit 12)                                         */
#define GPIOF_CTL_CTL6_Msk                (0x3000UL)                /*!< CTL6 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL5_Pos                (10UL)                    /*!< CTL5 (Bit 10)                                         */
#define GPIOF_CTL_CTL5_Msk                (0xc00UL)                 /*!< CTL5 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL4_Pos                (8UL)                     /*!< CTL4 (Bit 8)                                          */
#define GPIOF_CTL_CTL4_Msk                (0x300UL)                 /*!< CTL4 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL3_Pos                (6UL)                     /*!< CTL3 (Bit 6)                                          */
#define GPIOF_CTL_CTL3_Msk                (0xc0UL)                  /*!< CTL3 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL2_Pos                (4UL)                     /*!< CTL2 (Bit 4)                                          */
#define GPIOF_CTL_CTL2_Msk                (0x30UL)                  /*!< CTL2 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL1_Pos                (2UL)                     /*!< CTL1 (Bit 2)                                          */
#define GPIOF_CTL_CTL1_Msk                (0xcUL)                   /*!< CTL1 (Bitfield-Mask: 0x03)                            */
#define GPIOF_CTL_CTL0_Pos                (0UL)                     /*!< CTL0 (Bit 0)                                          */
#define GPIOF_CTL_CTL0_Msk                (0x3UL)                   /*!< CTL0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  OMODE  ========================================================= */
#define GPIOF_OMODE_OM15_Pos              (15UL)                    /*!< OM15 (Bit 15)                                         */
#define GPIOF_OMODE_OM15_Msk              (0x8000UL)                /*!< OM15 (Bitfield-Mask: 0x01)                            */
#define GPIOF_OMODE_OM14_Pos              (14UL)                    /*!< OM14 (Bit 14)                                         */
#define GPIOF_OMODE_OM14_Msk              (0x4000UL)                /*!< OM14 (Bitfield-Mask: 0x01)                            */
#define GPIOF_OMODE_OM13_Pos              (13UL)                    /*!< OM13 (Bit 13)                                         */
#define GPIOF_OMODE_OM13_Msk              (0x2000UL)                /*!< OM13 (Bitfield-Mask: 0x01)                            */
#define GPIOF_OMODE_OM12_Pos              (12UL)                    /*!< OM12 (Bit 12)                                         */
#define GPIOF_OMODE_OM12_Msk              (0x1000UL)                /*!< OM12 (Bitfield-Mask: 0x01)                            */
#define GPIOF_OMODE_OM11_Pos              (11UL)                    /*!< OM11 (Bit 11)                                         */
#define GPIOF_OMODE_OM11_Msk              (0x800UL)                 /*!< OM11 (Bitfield-Mask: 0x01)                            */
#define GPIOF_OMODE_OM10_Pos              (10UL)                    /*!< OM10 (Bit 10)                                         */
#define GPIOF_OMODE_OM10_Msk              (0x400UL)                 /*!< OM10 (Bitfield-Mask: 0x01)                            */
#define GPIOF_OMODE_OM9_Pos               (9UL)                     /*!< OM9 (Bit 9)                                           */
#define GPIOF_OMODE_OM9_Msk               (0x200UL)                 /*!< OM9 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM8_Pos               (8UL)                     /*!< OM8 (Bit 8)                                           */
#define GPIOF_OMODE_OM8_Msk               (0x100UL)                 /*!< OM8 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM7_Pos               (7UL)                     /*!< OM7 (Bit 7)                                           */
#define GPIOF_OMODE_OM7_Msk               (0x80UL)                  /*!< OM7 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM6_Pos               (6UL)                     /*!< OM6 (Bit 6)                                           */
#define GPIOF_OMODE_OM6_Msk               (0x40UL)                  /*!< OM6 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM5_Pos               (5UL)                     /*!< OM5 (Bit 5)                                           */
#define GPIOF_OMODE_OM5_Msk               (0x20UL)                  /*!< OM5 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM4_Pos               (4UL)                     /*!< OM4 (Bit 4)                                           */
#define GPIOF_OMODE_OM4_Msk               (0x10UL)                  /*!< OM4 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM3_Pos               (3UL)                     /*!< OM3 (Bit 3)                                           */
#define GPIOF_OMODE_OM3_Msk               (0x8UL)                   /*!< OM3 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM2_Pos               (2UL)                     /*!< OM2 (Bit 2)                                           */
#define GPIOF_OMODE_OM2_Msk               (0x4UL)                   /*!< OM2 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM1_Pos               (1UL)                     /*!< OM1 (Bit 1)                                           */
#define GPIOF_OMODE_OM1_Msk               (0x2UL)                   /*!< OM1 (Bitfield-Mask: 0x01)                             */
#define GPIOF_OMODE_OM0_Pos               (0UL)                     /*!< OM0 (Bit 0)                                           */
#define GPIOF_OMODE_OM0_Msk               (0x1UL)                   /*!< OM0 (Bitfield-Mask: 0x01)                             */
/* =========================================================  OSPD  ========================================================== */
#define GPIOF_OSPD_OSPD15_Pos             (30UL)                    /*!< OSPD15 (Bit 30)                                       */
#define GPIOF_OSPD_OSPD15_Msk             (0xc0000000UL)            /*!< OSPD15 (Bitfield-Mask: 0x03)                          */
#define GPIOF_OSPD_OSPD14_Pos             (28UL)                    /*!< OSPD14 (Bit 28)                                       */
#define GPIOF_OSPD_OSPD14_Msk             (0x30000000UL)            /*!< OSPD14 (Bitfield-Mask: 0x03)                          */
#define GPIOF_OSPD_OSPD13_Pos             (26UL)                    /*!< OSPD13 (Bit 26)                                       */
#define GPIOF_OSPD_OSPD13_Msk             (0xc000000UL)             /*!< OSPD13 (Bitfield-Mask: 0x03)                          */
#define GPIOF_OSPD_OSPD12_Pos             (24UL)                    /*!< OSPD12 (Bit 24)                                       */
#define GPIOF_OSPD_OSPD12_Msk             (0x3000000UL)             /*!< OSPD12 (Bitfield-Mask: 0x03)                          */
#define GPIOF_OSPD_OSPD11_Pos             (22UL)                    /*!< OSPD11 (Bit 22)                                       */
#define GPIOF_OSPD_OSPD11_Msk             (0xc00000UL)              /*!< OSPD11 (Bitfield-Mask: 0x03)                          */
#define GPIOF_OSPD_OSPD10_Pos             (20UL)                    /*!< OSPD10 (Bit 20)                                       */
#define GPIOF_OSPD_OSPD10_Msk             (0x300000UL)              /*!< OSPD10 (Bitfield-Mask: 0x03)                          */
#define GPIOF_OSPD_OSPD9_Pos              (18UL)                    /*!< OSPD9 (Bit 18)                                        */
#define GPIOF_OSPD_OSPD9_Msk              (0xc0000UL)               /*!< OSPD9 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD8_Pos              (16UL)                    /*!< OSPD8 (Bit 16)                                        */
#define GPIOF_OSPD_OSPD8_Msk              (0x30000UL)               /*!< OSPD8 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD7_Pos              (14UL)                    /*!< OSPD7 (Bit 14)                                        */
#define GPIOF_OSPD_OSPD7_Msk              (0xc000UL)                /*!< OSPD7 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD6_Pos              (12UL)                    /*!< OSPD6 (Bit 12)                                        */
#define GPIOF_OSPD_OSPD6_Msk              (0x3000UL)                /*!< OSPD6 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD5_Pos              (10UL)                    /*!< OSPD5 (Bit 10)                                        */
#define GPIOF_OSPD_OSPD5_Msk              (0xc00UL)                 /*!< OSPD5 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD4_Pos              (8UL)                     /*!< OSPD4 (Bit 8)                                         */
#define GPIOF_OSPD_OSPD4_Msk              (0x300UL)                 /*!< OSPD4 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD3_Pos              (6UL)                     /*!< OSPD3 (Bit 6)                                         */
#define GPIOF_OSPD_OSPD3_Msk              (0xc0UL)                  /*!< OSPD3 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD2_Pos              (4UL)                     /*!< OSPD2 (Bit 4)                                         */
#define GPIOF_OSPD_OSPD2_Msk              (0x30UL)                  /*!< OSPD2 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD1_Pos              (2UL)                     /*!< OSPD1 (Bit 2)                                         */
#define GPIOF_OSPD_OSPD1_Msk              (0xcUL)                   /*!< OSPD1 (Bitfield-Mask: 0x03)                           */
#define GPIOF_OSPD_OSPD0_Pos              (0UL)                     /*!< OSPD0 (Bit 0)                                         */
#define GPIOF_OSPD_OSPD0_Msk              (0x3UL)                   /*!< OSPD0 (Bitfield-Mask: 0x03)                           */
/* ==========================================================  PUD  ========================================================== */
#define GPIOF_PUD_PUD15_Pos               (30UL)                    /*!< PUD15 (Bit 30)                                        */
#define GPIOF_PUD_PUD15_Msk               (0xc0000000UL)            /*!< PUD15 (Bitfield-Mask: 0x03)                           */
#define GPIOF_PUD_PUD14_Pos               (28UL)                    /*!< PUD14 (Bit 28)                                        */
#define GPIOF_PUD_PUD14_Msk               (0x30000000UL)            /*!< PUD14 (Bitfield-Mask: 0x03)                           */
#define GPIOF_PUD_PUD13_Pos               (26UL)                    /*!< PUD13 (Bit 26)                                        */
#define GPIOF_PUD_PUD13_Msk               (0xc000000UL)             /*!< PUD13 (Bitfield-Mask: 0x03)                           */
#define GPIOF_PUD_PUD12_Pos               (24UL)                    /*!< PUD12 (Bit 24)                                        */
#define GPIOF_PUD_PUD12_Msk               (0x3000000UL)             /*!< PUD12 (Bitfield-Mask: 0x03)                           */
#define GPIOF_PUD_PUD11_Pos               (22UL)                    /*!< PUD11 (Bit 22)                                        */
#define GPIOF_PUD_PUD11_Msk               (0xc00000UL)              /*!< PUD11 (Bitfield-Mask: 0x03)                           */
#define GPIOF_PUD_PUD10_Pos               (20UL)                    /*!< PUD10 (Bit 20)                                        */
#define GPIOF_PUD_PUD10_Msk               (0x300000UL)              /*!< PUD10 (Bitfield-Mask: 0x03)                           */
#define GPIOF_PUD_PUD9_Pos                (18UL)                    /*!< PUD9 (Bit 18)                                         */
#define GPIOF_PUD_PUD9_Msk                (0xc0000UL)               /*!< PUD9 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD8_Pos                (16UL)                    /*!< PUD8 (Bit 16)                                         */
#define GPIOF_PUD_PUD8_Msk                (0x30000UL)               /*!< PUD8 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD7_Pos                (14UL)                    /*!< PUD7 (Bit 14)                                         */
#define GPIOF_PUD_PUD7_Msk                (0xc000UL)                /*!< PUD7 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD6_Pos                (12UL)                    /*!< PUD6 (Bit 12)                                         */
#define GPIOF_PUD_PUD6_Msk                (0x3000UL)                /*!< PUD6 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD5_Pos                (10UL)                    /*!< PUD5 (Bit 10)                                         */
#define GPIOF_PUD_PUD5_Msk                (0xc00UL)                 /*!< PUD5 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD4_Pos                (8UL)                     /*!< PUD4 (Bit 8)                                          */
#define GPIOF_PUD_PUD4_Msk                (0x300UL)                 /*!< PUD4 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD3_Pos                (6UL)                     /*!< PUD3 (Bit 6)                                          */
#define GPIOF_PUD_PUD3_Msk                (0xc0UL)                  /*!< PUD3 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD2_Pos                (4UL)                     /*!< PUD2 (Bit 4)                                          */
#define GPIOF_PUD_PUD2_Msk                (0x30UL)                  /*!< PUD2 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD1_Pos                (2UL)                     /*!< PUD1 (Bit 2)                                          */
#define GPIOF_PUD_PUD1_Msk                (0xcUL)                   /*!< PUD1 (Bitfield-Mask: 0x03)                            */
#define GPIOF_PUD_PUD0_Pos                (0UL)                     /*!< PUD0 (Bit 0)                                          */
#define GPIOF_PUD_PUD0_Msk                (0x3UL)                   /*!< PUD0 (Bitfield-Mask: 0x03)                            */
/* =========================================================  ISTAT  ========================================================= */
#define GPIOF_ISTAT_ISTAT15_Pos           (15UL)                    /*!< ISTAT15 (Bit 15)                                      */
#define GPIOF_ISTAT_ISTAT15_Msk           (0x8000UL)                /*!< ISTAT15 (Bitfield-Mask: 0x01)                         */
#define GPIOF_ISTAT_ISTAT14_Pos           (14UL)                    /*!< ISTAT14 (Bit 14)                                      */
#define GPIOF_ISTAT_ISTAT14_Msk           (0x4000UL)                /*!< ISTAT14 (Bitfield-Mask: 0x01)                         */
#define GPIOF_ISTAT_ISTAT13_Pos           (13UL)                    /*!< ISTAT13 (Bit 13)                                      */
#define GPIOF_ISTAT_ISTAT13_Msk           (0x2000UL)                /*!< ISTAT13 (Bitfield-Mask: 0x01)                         */
#define GPIOF_ISTAT_ISTAT12_Pos           (12UL)                    /*!< ISTAT12 (Bit 12)                                      */
#define GPIOF_ISTAT_ISTAT12_Msk           (0x1000UL)                /*!< ISTAT12 (Bitfield-Mask: 0x01)                         */
#define GPIOF_ISTAT_ISTAT11_Pos           (11UL)                    /*!< ISTAT11 (Bit 11)                                      */
#define GPIOF_ISTAT_ISTAT11_Msk           (0x800UL)                 /*!< ISTAT11 (Bitfield-Mask: 0x01)                         */
#define GPIOF_ISTAT_ISTAT10_Pos           (10UL)                    /*!< ISTAT10 (Bit 10)                                      */
#define GPIOF_ISTAT_ISTAT10_Msk           (0x400UL)                 /*!< ISTAT10 (Bitfield-Mask: 0x01)                         */
#define GPIOF_ISTAT_ISTAT9_Pos            (9UL)                     /*!< ISTAT9 (Bit 9)                                        */
#define GPIOF_ISTAT_ISTAT9_Msk            (0x200UL)                 /*!< ISTAT9 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT8_Pos            (8UL)                     /*!< ISTAT8 (Bit 8)                                        */
#define GPIOF_ISTAT_ISTAT8_Msk            (0x100UL)                 /*!< ISTAT8 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT7_Pos            (7UL)                     /*!< ISTAT7 (Bit 7)                                        */
#define GPIOF_ISTAT_ISTAT7_Msk            (0x80UL)                  /*!< ISTAT7 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT6_Pos            (6UL)                     /*!< ISTAT6 (Bit 6)                                        */
#define GPIOF_ISTAT_ISTAT6_Msk            (0x40UL)                  /*!< ISTAT6 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT5_Pos            (5UL)                     /*!< ISTAT5 (Bit 5)                                        */
#define GPIOF_ISTAT_ISTAT5_Msk            (0x20UL)                  /*!< ISTAT5 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT4_Pos            (4UL)                     /*!< ISTAT4 (Bit 4)                                        */
#define GPIOF_ISTAT_ISTAT4_Msk            (0x10UL)                  /*!< ISTAT4 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT3_Pos            (3UL)                     /*!< ISTAT3 (Bit 3)                                        */
#define GPIOF_ISTAT_ISTAT3_Msk            (0x8UL)                   /*!< ISTAT3 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT2_Pos            (2UL)                     /*!< ISTAT2 (Bit 2)                                        */
#define GPIOF_ISTAT_ISTAT2_Msk            (0x4UL)                   /*!< ISTAT2 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT1_Pos            (1UL)                     /*!< ISTAT1 (Bit 1)                                        */
#define GPIOF_ISTAT_ISTAT1_Msk            (0x2UL)                   /*!< ISTAT1 (Bitfield-Mask: 0x01)                          */
#define GPIOF_ISTAT_ISTAT0_Pos            (0UL)                     /*!< ISTAT0 (Bit 0)                                        */
#define GPIOF_ISTAT_ISTAT0_Msk            (0x1UL)                   /*!< ISTAT0 (Bitfield-Mask: 0x01)                          */
/* =========================================================  OCTL  ========================================================== */
#define GPIOF_OCTL_OCTL15_Pos             (15UL)                    /*!< OCTL15 (Bit 15)                                       */
#define GPIOF_OCTL_OCTL15_Msk             (0x8000UL)                /*!< OCTL15 (Bitfield-Mask: 0x01)                          */
#define GPIOF_OCTL_OCTL14_Pos             (14UL)                    /*!< OCTL14 (Bit 14)                                       */
#define GPIOF_OCTL_OCTL14_Msk             (0x4000UL)                /*!< OCTL14 (Bitfield-Mask: 0x01)                          */
#define GPIOF_OCTL_OCTL13_Pos             (13UL)                    /*!< OCTL13 (Bit 13)                                       */
#define GPIOF_OCTL_OCTL13_Msk             (0x2000UL)                /*!< OCTL13 (Bitfield-Mask: 0x01)                          */
#define GPIOF_OCTL_OCTL12_Pos             (12UL)                    /*!< OCTL12 (Bit 12)                                       */
#define GPIOF_OCTL_OCTL12_Msk             (0x1000UL)                /*!< OCTL12 (Bitfield-Mask: 0x01)                          */
#define GPIOF_OCTL_OCTL11_Pos             (11UL)                    /*!< OCTL11 (Bit 11)                                       */
#define GPIOF_OCTL_OCTL11_Msk             (0x800UL)                 /*!< OCTL11 (Bitfield-Mask: 0x01)                          */
#define GPIOF_OCTL_OCTL10_Pos             (10UL)                    /*!< OCTL10 (Bit 10)                                       */
#define GPIOF_OCTL_OCTL10_Msk             (0x400UL)                 /*!< OCTL10 (Bitfield-Mask: 0x01)                          */
#define GPIOF_OCTL_OCTL9_Pos              (9UL)                     /*!< OCTL9 (Bit 9)                                         */
#define GPIOF_OCTL_OCTL9_Msk              (0x200UL)                 /*!< OCTL9 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL8_Pos              (8UL)                     /*!< OCTL8 (Bit 8)                                         */
#define GPIOF_OCTL_OCTL8_Msk              (0x100UL)                 /*!< OCTL8 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL7_Pos              (7UL)                     /*!< OCTL7 (Bit 7)                                         */
#define GPIOF_OCTL_OCTL7_Msk              (0x80UL)                  /*!< OCTL7 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL6_Pos              (6UL)                     /*!< OCTL6 (Bit 6)                                         */
#define GPIOF_OCTL_OCTL6_Msk              (0x40UL)                  /*!< OCTL6 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL5_Pos              (5UL)                     /*!< OCTL5 (Bit 5)                                         */
#define GPIOF_OCTL_OCTL5_Msk              (0x20UL)                  /*!< OCTL5 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL4_Pos              (4UL)                     /*!< OCTL4 (Bit 4)                                         */
#define GPIOF_OCTL_OCTL4_Msk              (0x10UL)                  /*!< OCTL4 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL3_Pos              (3UL)                     /*!< OCTL3 (Bit 3)                                         */
#define GPIOF_OCTL_OCTL3_Msk              (0x8UL)                   /*!< OCTL3 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL2_Pos              (2UL)                     /*!< OCTL2 (Bit 2)                                         */
#define GPIOF_OCTL_OCTL2_Msk              (0x4UL)                   /*!< OCTL2 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL1_Pos              (1UL)                     /*!< OCTL1 (Bit 1)                                         */
#define GPIOF_OCTL_OCTL1_Msk              (0x2UL)                   /*!< OCTL1 (Bitfield-Mask: 0x01)                           */
#define GPIOF_OCTL_OCTL0_Pos              (0UL)                     /*!< OCTL0 (Bit 0)                                         */
#define GPIOF_OCTL_OCTL0_Msk              (0x1UL)                   /*!< OCTL0 (Bitfield-Mask: 0x01)                           */
/* ==========================================================  BOP  ========================================================== */
#define GPIOF_BOP_CR15_Pos                (31UL)                    /*!< CR15 (Bit 31)                                         */
#define GPIOF_BOP_CR15_Msk                (0x80000000UL)            /*!< CR15 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_CR14_Pos                (30UL)                    /*!< CR14 (Bit 30)                                         */
#define GPIOF_BOP_CR14_Msk                (0x40000000UL)            /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_CR13_Pos                (29UL)                    /*!< CR13 (Bit 29)                                         */
#define GPIOF_BOP_CR13_Msk                (0x20000000UL)            /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_CR12_Pos                (28UL)                    /*!< CR12 (Bit 28)                                         */
#define GPIOF_BOP_CR12_Msk                (0x10000000UL)            /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_CR11_Pos                (27UL)                    /*!< CR11 (Bit 27)                                         */
#define GPIOF_BOP_CR11_Msk                (0x8000000UL)             /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_CR10_Pos                (26UL)                    /*!< CR10 (Bit 26)                                         */
#define GPIOF_BOP_CR10_Msk                (0x4000000UL)             /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_CR9_Pos                 (25UL)                    /*!< CR9 (Bit 25)                                          */
#define GPIOF_BOP_CR9_Msk                 (0x2000000UL)             /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR8_Pos                 (24UL)                    /*!< CR8 (Bit 24)                                          */
#define GPIOF_BOP_CR8_Msk                 (0x1000000UL)             /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR7_Pos                 (23UL)                    /*!< CR7 (Bit 23)                                          */
#define GPIOF_BOP_CR7_Msk                 (0x800000UL)              /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR6_Pos                 (22UL)                    /*!< CR6 (Bit 22)                                          */
#define GPIOF_BOP_CR6_Msk                 (0x400000UL)              /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR5_Pos                 (21UL)                    /*!< CR5 (Bit 21)                                          */
#define GPIOF_BOP_CR5_Msk                 (0x200000UL)              /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR4_Pos                 (20UL)                    /*!< CR4 (Bit 20)                                          */
#define GPIOF_BOP_CR4_Msk                 (0x100000UL)              /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR3_Pos                 (19UL)                    /*!< CR3 (Bit 19)                                          */
#define GPIOF_BOP_CR3_Msk                 (0x80000UL)               /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR2_Pos                 (18UL)                    /*!< CR2 (Bit 18)                                          */
#define GPIOF_BOP_CR2_Msk                 (0x40000UL)               /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR1_Pos                 (17UL)                    /*!< CR1 (Bit 17)                                          */
#define GPIOF_BOP_CR1_Msk                 (0x20000UL)               /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_CR0_Pos                 (16UL)                    /*!< CR0 (Bit 16)                                          */
#define GPIOF_BOP_CR0_Msk                 (0x10000UL)               /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BOP_BOP15_Pos               (15UL)                    /*!< BOP15 (Bit 15)                                        */
#define GPIOF_BOP_BOP15_Msk               (0x8000UL)                /*!< BOP15 (Bitfield-Mask: 0x01)                           */
#define GPIOF_BOP_BOP14_Pos               (14UL)                    /*!< BOP14 (Bit 14)                                        */
#define GPIOF_BOP_BOP14_Msk               (0x4000UL)                /*!< BOP14 (Bitfield-Mask: 0x01)                           */
#define GPIOF_BOP_BOP13_Pos               (13UL)                    /*!< BOP13 (Bit 13)                                        */
#define GPIOF_BOP_BOP13_Msk               (0x2000UL)                /*!< BOP13 (Bitfield-Mask: 0x01)                           */
#define GPIOF_BOP_BOP12_Pos               (12UL)                    /*!< BOP12 (Bit 12)                                        */
#define GPIOF_BOP_BOP12_Msk               (0x1000UL)                /*!< BOP12 (Bitfield-Mask: 0x01)                           */
#define GPIOF_BOP_BOP11_Pos               (11UL)                    /*!< BOP11 (Bit 11)                                        */
#define GPIOF_BOP_BOP11_Msk               (0x800UL)                 /*!< BOP11 (Bitfield-Mask: 0x01)                           */
#define GPIOF_BOP_BOP10_Pos               (10UL)                    /*!< BOP10 (Bit 10)                                        */
#define GPIOF_BOP_BOP10_Msk               (0x400UL)                 /*!< BOP10 (Bitfield-Mask: 0x01)                           */
#define GPIOF_BOP_BOP9_Pos                (9UL)                     /*!< BOP9 (Bit 9)                                          */
#define GPIOF_BOP_BOP9_Msk                (0x200UL)                 /*!< BOP9 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP8_Pos                (8UL)                     /*!< BOP8 (Bit 8)                                          */
#define GPIOF_BOP_BOP8_Msk                (0x100UL)                 /*!< BOP8 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP7_Pos                (7UL)                     /*!< BOP7 (Bit 7)                                          */
#define GPIOF_BOP_BOP7_Msk                (0x80UL)                  /*!< BOP7 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP6_Pos                (6UL)                     /*!< BOP6 (Bit 6)                                          */
#define GPIOF_BOP_BOP6_Msk                (0x40UL)                  /*!< BOP6 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP5_Pos                (5UL)                     /*!< BOP5 (Bit 5)                                          */
#define GPIOF_BOP_BOP5_Msk                (0x20UL)                  /*!< BOP5 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP4_Pos                (4UL)                     /*!< BOP4 (Bit 4)                                          */
#define GPIOF_BOP_BOP4_Msk                (0x10UL)                  /*!< BOP4 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP3_Pos                (3UL)                     /*!< BOP3 (Bit 3)                                          */
#define GPIOF_BOP_BOP3_Msk                (0x8UL)                   /*!< BOP3 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP2_Pos                (2UL)                     /*!< BOP2 (Bit 2)                                          */
#define GPIOF_BOP_BOP2_Msk                (0x4UL)                   /*!< BOP2 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP1_Pos                (1UL)                     /*!< BOP1 (Bit 1)                                          */
#define GPIOF_BOP_BOP1_Msk                (0x2UL)                   /*!< BOP1 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BOP_BOP0_Pos                (0UL)                     /*!< BOP0 (Bit 0)                                          */
#define GPIOF_BOP_BOP0_Msk                (0x1UL)                   /*!< BOP0 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  BC  =========================================================== */
#define GPIOF_BC_CR0_Pos                  (0UL)                     /*!< CR0 (Bit 0)                                           */
#define GPIOF_BC_CR0_Msk                  (0x1UL)                   /*!< CR0 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR1_Pos                  (1UL)                     /*!< CR1 (Bit 1)                                           */
#define GPIOF_BC_CR1_Msk                  (0x2UL)                   /*!< CR1 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR2_Pos                  (2UL)                     /*!< CR2 (Bit 2)                                           */
#define GPIOF_BC_CR2_Msk                  (0x4UL)                   /*!< CR2 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR3_Pos                  (3UL)                     /*!< CR3 (Bit 3)                                           */
#define GPIOF_BC_CR3_Msk                  (0x8UL)                   /*!< CR3 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR4_Pos                  (4UL)                     /*!< CR4 (Bit 4)                                           */
#define GPIOF_BC_CR4_Msk                  (0x10UL)                  /*!< CR4 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR5_Pos                  (5UL)                     /*!< CR5 (Bit 5)                                           */
#define GPIOF_BC_CR5_Msk                  (0x20UL)                  /*!< CR5 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR6_Pos                  (6UL)                     /*!< CR6 (Bit 6)                                           */
#define GPIOF_BC_CR6_Msk                  (0x40UL)                  /*!< CR6 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR7_Pos                  (7UL)                     /*!< CR7 (Bit 7)                                           */
#define GPIOF_BC_CR7_Msk                  (0x80UL)                  /*!< CR7 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR8_Pos                  (8UL)                     /*!< CR8 (Bit 8)                                           */
#define GPIOF_BC_CR8_Msk                  (0x100UL)                 /*!< CR8 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR9_Pos                  (9UL)                     /*!< CR9 (Bit 9)                                           */
#define GPIOF_BC_CR9_Msk                  (0x200UL)                 /*!< CR9 (Bitfield-Mask: 0x01)                             */
#define GPIOF_BC_CR10_Pos                 (10UL)                    /*!< CR10 (Bit 10)                                         */
#define GPIOF_BC_CR10_Msk                 (0x400UL)                 /*!< CR10 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BC_CR11_Pos                 (11UL)                    /*!< CR11 (Bit 11)                                         */
#define GPIOF_BC_CR11_Msk                 (0x800UL)                 /*!< CR11 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BC_CR12_Pos                 (12UL)                    /*!< CR12 (Bit 12)                                         */
#define GPIOF_BC_CR12_Msk                 (0x1000UL)                /*!< CR12 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BC_CR13_Pos                 (13UL)                    /*!< CR13 (Bit 13)                                         */
#define GPIOF_BC_CR13_Msk                 (0x2000UL)                /*!< CR13 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BC_CR14_Pos                 (14UL)                    /*!< CR14 (Bit 14)                                         */
#define GPIOF_BC_CR14_Msk                 (0x4000UL)                /*!< CR14 (Bitfield-Mask: 0x01)                            */
#define GPIOF_BC_CR15_Pos                 (15UL)                    /*!< CR15 (Bit 15)                                         */
#define GPIOF_BC_CR15_Msk                 (0x8000UL)                /*!< CR15 (Bitfield-Mask: 0x01)                            */
/* ==========================================================  TG  =========================================================== */
#define GPIOF_TG_TG0_Pos                  (0UL)                     /*!< TG0 (Bit 0)                                           */
#define GPIOF_TG_TG0_Msk                  (0x1UL)                   /*!< TG0 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG1_Pos                  (1UL)                     /*!< TG1 (Bit 1)                                           */
#define GPIOF_TG_TG1_Msk                  (0x2UL)                   /*!< TG1 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG2_Pos                  (2UL)                     /*!< TG2 (Bit 2)                                           */
#define GPIOF_TG_TG2_Msk                  (0x4UL)                   /*!< TG2 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG3_Pos                  (3UL)                     /*!< TG3 (Bit 3)                                           */
#define GPIOF_TG_TG3_Msk                  (0x8UL)                   /*!< TG3 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG4_Pos                  (4UL)                     /*!< TG4 (Bit 4)                                           */
#define GPIOF_TG_TG4_Msk                  (0x10UL)                  /*!< TG4 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG5_Pos                  (5UL)                     /*!< TG5 (Bit 5)                                           */
#define GPIOF_TG_TG5_Msk                  (0x20UL)                  /*!< TG5 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG6_Pos                  (6UL)                     /*!< TG6 (Bit 6)                                           */
#define GPIOF_TG_TG6_Msk                  (0x40UL)                  /*!< TG6 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG7_Pos                  (7UL)                     /*!< TG7 (Bit 7)                                           */
#define GPIOF_TG_TG7_Msk                  (0x80UL)                  /*!< TG7 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG8_Pos                  (8UL)                     /*!< TG8 (Bit 8)                                           */
#define GPIOF_TG_TG8_Msk                  (0x100UL)                 /*!< TG8 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG9_Pos                  (9UL)                     /*!< TG9 (Bit 9)                                           */
#define GPIOF_TG_TG9_Msk                  (0x200UL)                 /*!< TG9 (Bitfield-Mask: 0x01)                             */
#define GPIOF_TG_TG10_Pos                 (10UL)                    /*!< TG10 (Bit 10)                                         */
#define GPIOF_TG_TG10_Msk                 (0x400UL)                 /*!< TG10 (Bitfield-Mask: 0x01)                            */
#define GPIOF_TG_TG11_Pos                 (11UL)                    /*!< TG11 (Bit 11)                                         */
#define GPIOF_TG_TG11_Msk                 (0x800UL)                 /*!< TG11 (Bitfield-Mask: 0x01)                            */
#define GPIOF_TG_TG12_Pos                 (12UL)                    /*!< TG12 (Bit 12)                                         */
#define GPIOF_TG_TG12_Msk                 (0x1000UL)                /*!< TG12 (Bitfield-Mask: 0x01)                            */
#define GPIOF_TG_TG13_Pos                 (13UL)                    /*!< TG13 (Bit 13)                                         */
#define GPIOF_TG_TG13_Msk                 (0x2000UL)                /*!< TG13 (Bitfield-Mask: 0x01)                            */
#define GPIOF_TG_TG14_Pos                 (14UL)                    /*!< TG14 (Bit 14)                                         */
#define GPIOF_TG_TG14_Msk                 (0x4000UL)                /*!< TG14 (Bitfield-Mask: 0x01)                            */
#define GPIOF_TG_TG15_Pos                 (15UL)                    /*!< TG15 (Bit 15)                                         */
#define GPIOF_TG_TG15_Msk                 (0x8000UL)                /*!< TG15 (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                           I2C0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define I2C0_CTL0_SRESET_Pos              (15UL)                    /*!< SRESET (Bit 15)                                       */
#define I2C0_CTL0_SRESET_Msk              (0x8000UL)                /*!< SRESET (Bitfield-Mask: 0x01)                          */
#define I2C0_CTL0_SALT_Pos                (13UL)                    /*!< SALT (Bit 13)                                         */
#define I2C0_CTL0_SALT_Msk                (0x2000UL)                /*!< SALT (Bitfield-Mask: 0x01)                            */
#define I2C0_CTL0_PECTRANS_Pos            (12UL)                    /*!< PECTRANS (Bit 12)                                     */
#define I2C0_CTL0_PECTRANS_Msk            (0x1000UL)                /*!< PECTRANS (Bitfield-Mask: 0x01)                        */
#define I2C0_CTL0_POAP_Pos                (11UL)                    /*!< POAP (Bit 11)                                         */
#define I2C0_CTL0_POAP_Msk                (0x800UL)                 /*!< POAP (Bitfield-Mask: 0x01)                            */
#define I2C0_CTL0_ACKEN_Pos               (10UL)                    /*!< ACKEN (Bit 10)                                        */
#define I2C0_CTL0_ACKEN_Msk               (0x400UL)                 /*!< ACKEN (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL0_STOP_Pos                (9UL)                     /*!< STOP (Bit 9)                                          */
#define I2C0_CTL0_STOP_Msk                (0x200UL)                 /*!< STOP (Bitfield-Mask: 0x01)                            */
#define I2C0_CTL0_START_Pos               (8UL)                     /*!< START (Bit 8)                                         */
#define I2C0_CTL0_START_Msk               (0x100UL)                 /*!< START (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL0_SS_Pos                  (7UL)                     /*!< SS (Bit 7)                                            */
#define I2C0_CTL0_SS_Msk                  (0x80UL)                  /*!< SS (Bitfield-Mask: 0x01)                              */
#define I2C0_CTL0_GCEN_Pos                (6UL)                     /*!< GCEN (Bit 6)                                          */
#define I2C0_CTL0_GCEN_Msk                (0x40UL)                  /*!< GCEN (Bitfield-Mask: 0x01)                            */
#define I2C0_CTL0_PECEN_Pos               (5UL)                     /*!< PECEN (Bit 5)                                         */
#define I2C0_CTL0_PECEN_Msk               (0x20UL)                  /*!< PECEN (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL0_ARPEN_Pos               (4UL)                     /*!< ARPEN (Bit 4)                                         */
#define I2C0_CTL0_ARPEN_Msk               (0x10UL)                  /*!< ARPEN (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL0_SMBSEL_Pos              (3UL)                     /*!< SMBSEL (Bit 3)                                        */
#define I2C0_CTL0_SMBSEL_Msk              (0x8UL)                   /*!< SMBSEL (Bitfield-Mask: 0x01)                          */
#define I2C0_CTL0_SMBEN_Pos               (1UL)                     /*!< SMBEN (Bit 1)                                         */
#define I2C0_CTL0_SMBEN_Msk               (0x2UL)                   /*!< SMBEN (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL0_I2CEN_Pos               (0UL)                     /*!< I2CEN (Bit 0)                                         */
#define I2C0_CTL0_I2CEN_Msk               (0x1UL)                   /*!< I2CEN (Bitfield-Mask: 0x01)                           */
/* =========================================================  CTL1  ========================================================== */
#define I2C0_CTL1_DMALST_Pos              (12UL)                    /*!< DMALST (Bit 12)                                       */
#define I2C0_CTL1_DMALST_Msk              (0x1000UL)                /*!< DMALST (Bitfield-Mask: 0x01)                          */
#define I2C0_CTL1_DMAON_Pos               (11UL)                    /*!< DMAON (Bit 11)                                        */
#define I2C0_CTL1_DMAON_Msk               (0x800UL)                 /*!< DMAON (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL1_BUFIE_Pos               (10UL)                    /*!< BUFIE (Bit 10)                                        */
#define I2C0_CTL1_BUFIE_Msk               (0x400UL)                 /*!< BUFIE (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL1_EVIE_Pos                (9UL)                     /*!< EVIE (Bit 9)                                          */
#define I2C0_CTL1_EVIE_Msk                (0x200UL)                 /*!< EVIE (Bitfield-Mask: 0x01)                            */
#define I2C0_CTL1_ERRIE_Pos               (8UL)                     /*!< ERRIE (Bit 8)                                         */
#define I2C0_CTL1_ERRIE_Msk               (0x100UL)                 /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define I2C0_CTL1_I2CCLK_Pos              (0UL)                     /*!< I2CCLK (Bit 0)                                        */
#define I2C0_CTL1_I2CCLK_Msk              (0x7fUL)                  /*!< I2CCLK (Bitfield-Mask: 0x7f)                          */
/* ========================================================  SADDR0  ========================================================= */
#define I2C0_SADDR0_ADDFORMAT_Pos         (15UL)                    /*!< ADDFORMAT (Bit 15)                                    */
#define I2C0_SADDR0_ADDFORMAT_Msk         (0x8000UL)                /*!< ADDFORMAT (Bitfield-Mask: 0x01)                       */
#define I2C0_SADDR0_ADDRESS_Pos           (0UL)                     /*!< ADDRESS (Bit 0)                                       */
#define I2C0_SADDR0_ADDRESS_Msk           (0x3ffUL)                 /*!< ADDRESS (Bitfield-Mask: 0x3ff)                        */
/* ========================================================  SADDR1  ========================================================= */
#define I2C0_SADDR1_ADDRESS2_Pos          (1UL)                     /*!< ADDRESS2 (Bit 1)                                      */
#define I2C0_SADDR1_ADDRESS2_Msk          (0xfeUL)                  /*!< ADDRESS2 (Bitfield-Mask: 0x7f)                        */
#define I2C0_SADDR1_DUADEN_Pos            (0UL)                     /*!< DUADEN (Bit 0)                                        */
#define I2C0_SADDR1_DUADEN_Msk            (0x1UL)                   /*!< DUADEN (Bitfield-Mask: 0x01)                          */
/* =========================================================  DATA  ========================================================== */
#define I2C0_DATA_TRB_Pos                 (0UL)                     /*!< TRB (Bit 0)                                           */
#define I2C0_DATA_TRB_Msk                 (0xffUL)                  /*!< TRB (Bitfield-Mask: 0xff)                             */
/* =========================================================  STAT0  ========================================================= */
#define I2C0_STAT0_SMBALT_Pos             (15UL)                    /*!< SMBALT (Bit 15)                                       */
#define I2C0_STAT0_SMBALT_Msk             (0x8000UL)                /*!< SMBALT (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT0_SMBTO_Pos              (14UL)                    /*!< SMBTO (Bit 14)                                        */
#define I2C0_STAT0_SMBTO_Msk              (0x4000UL)                /*!< SMBTO (Bitfield-Mask: 0x01)                           */
#define I2C0_STAT0_PECERR_Pos             (12UL)                    /*!< PECERR (Bit 12)                                       */
#define I2C0_STAT0_PECERR_Msk             (0x1000UL)                /*!< PECERR (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT0_OUERR_Pos              (11UL)                    /*!< OUERR (Bit 11)                                        */
#define I2C0_STAT0_OUERR_Msk              (0x800UL)                 /*!< OUERR (Bitfield-Mask: 0x01)                           */
#define I2C0_STAT0_AERR_Pos               (10UL)                    /*!< AERR (Bit 10)                                         */
#define I2C0_STAT0_AERR_Msk               (0x400UL)                 /*!< AERR (Bitfield-Mask: 0x01)                            */
#define I2C0_STAT0_LOSTARB_Pos            (9UL)                     /*!< LOSTARB (Bit 9)                                       */
#define I2C0_STAT0_LOSTARB_Msk            (0x200UL)                 /*!< LOSTARB (Bitfield-Mask: 0x01)                         */
#define I2C0_STAT0_BERR_Pos               (8UL)                     /*!< BERR (Bit 8)                                          */
#define I2C0_STAT0_BERR_Msk               (0x100UL)                 /*!< BERR (Bitfield-Mask: 0x01)                            */
#define I2C0_STAT0_TBE_Pos                (7UL)                     /*!< TBE (Bit 7)                                           */
#define I2C0_STAT0_TBE_Msk                (0x80UL)                  /*!< TBE (Bitfield-Mask: 0x01)                             */
#define I2C0_STAT0_RBNE_Pos               (6UL)                     /*!< RBNE (Bit 6)                                          */
#define I2C0_STAT0_RBNE_Msk               (0x40UL)                  /*!< RBNE (Bitfield-Mask: 0x01)                            */
#define I2C0_STAT0_STPDET_Pos             (4UL)                     /*!< STPDET (Bit 4)                                        */
#define I2C0_STAT0_STPDET_Msk             (0x10UL)                  /*!< STPDET (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT0_ADD10SEND_Pos          (3UL)                     /*!< ADD10SEND (Bit 3)                                     */
#define I2C0_STAT0_ADD10SEND_Msk          (0x8UL)                   /*!< ADD10SEND (Bitfield-Mask: 0x01)                       */
#define I2C0_STAT0_BTC_Pos                (2UL)                     /*!< BTC (Bit 2)                                           */
#define I2C0_STAT0_BTC_Msk                (0x4UL)                   /*!< BTC (Bitfield-Mask: 0x01)                             */
#define I2C0_STAT0_ADDSEND_Pos            (1UL)                     /*!< ADDSEND (Bit 1)                                       */
#define I2C0_STAT0_ADDSEND_Msk            (0x2UL)                   /*!< ADDSEND (Bitfield-Mask: 0x01)                         */
#define I2C0_STAT0_SBSEND_Pos             (0UL)                     /*!< SBSEND (Bit 0)                                        */
#define I2C0_STAT0_SBSEND_Msk             (0x1UL)                   /*!< SBSEND (Bitfield-Mask: 0x01)                          */
/* =========================================================  STAT1  ========================================================= */
#define I2C0_STAT1_PECV_Pos               (8UL)                     /*!< PECV (Bit 8)                                          */
#define I2C0_STAT1_PECV_Msk               (0xff00UL)                /*!< PECV (Bitfield-Mask: 0xff)                            */
#define I2C0_STAT1_DUMODF_Pos             (7UL)                     /*!< DUMODF (Bit 7)                                        */
#define I2C0_STAT1_DUMODF_Msk             (0x80UL)                  /*!< DUMODF (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT1_HSTSMB_Pos             (6UL)                     /*!< HSTSMB (Bit 6)                                        */
#define I2C0_STAT1_HSTSMB_Msk             (0x40UL)                  /*!< HSTSMB (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT1_DEFSMB_Pos             (5UL)                     /*!< DEFSMB (Bit 5)                                        */
#define I2C0_STAT1_DEFSMB_Msk             (0x20UL)                  /*!< DEFSMB (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT1_RXGC_Pos               (4UL)                     /*!< RXGC (Bit 4)                                          */
#define I2C0_STAT1_RXGC_Msk               (0x10UL)                  /*!< RXGC (Bitfield-Mask: 0x01)                            */
#define I2C0_STAT1_TR_Pos                 (2UL)                     /*!< TR (Bit 2)                                            */
#define I2C0_STAT1_TR_Msk                 (0x4UL)                   /*!< TR (Bitfield-Mask: 0x01)                              */
#define I2C0_STAT1_I2CBSY_Pos             (1UL)                     /*!< I2CBSY (Bit 1)                                        */
#define I2C0_STAT1_I2CBSY_Msk             (0x2UL)                   /*!< I2CBSY (Bitfield-Mask: 0x01)                          */
#define I2C0_STAT1_MASTER_Pos             (0UL)                     /*!< MASTER (Bit 0)                                        */
#define I2C0_STAT1_MASTER_Msk             (0x1UL)                   /*!< MASTER (Bitfield-Mask: 0x01)                          */
/* =========================================================  CKCFG  ========================================================= */
#define I2C0_CKCFG_FAST_Pos               (15UL)                    /*!< FAST (Bit 15)                                         */
#define I2C0_CKCFG_FAST_Msk               (0x8000UL)                /*!< FAST (Bitfield-Mask: 0x01)                            */
#define I2C0_CKCFG_DTCY_Pos               (14UL)                    /*!< DTCY (Bit 14)                                         */
#define I2C0_CKCFG_DTCY_Msk               (0x4000UL)                /*!< DTCY (Bitfield-Mask: 0x01)                            */
#define I2C0_CKCFG_CLKC_Pos               (0UL)                     /*!< CLKC (Bit 0)                                          */
#define I2C0_CKCFG_CLKC_Msk               (0xfffUL)                 /*!< CLKC (Bitfield-Mask: 0xfff)                           */
/* ==========================================================  RT  =========================================================== */
#define I2C0_RT_RISETIME_Pos              (0UL)                     /*!< RISETIME (Bit 0)                                      */
#define I2C0_RT_RISETIME_Msk              (0x7fUL)                  /*!< RISETIME (Bitfield-Mask: 0x7f)                        */
/* =========================================================  SAMCS  ========================================================= */
#define I2C0_SAMCS_RFR_Pos                (15UL)                    /*!< RFR (Bit 15)                                          */
#define I2C0_SAMCS_RFR_Msk                (0x8000UL)                /*!< RFR (Bitfield-Mask: 0x01)                             */
#define I2C0_SAMCS_RFF_Pos                (14UL)                    /*!< RFF (Bit 14)                                          */
#define I2C0_SAMCS_RFF_Msk                (0x4000UL)                /*!< RFF (Bitfield-Mask: 0x01)                             */
#define I2C0_SAMCS_TFR_Pos                (13UL)                    /*!< TFR (Bit 13)                                          */
#define I2C0_SAMCS_TFR_Msk                (0x2000UL)                /*!< TFR (Bitfield-Mask: 0x01)                             */
#define I2C0_SAMCS_TFF_Pos                (12UL)                    /*!< TFF (Bit 12)                                          */
#define I2C0_SAMCS_TFF_Msk                (0x1000UL)                /*!< TFF (Bitfield-Mask: 0x01)                             */
#define I2C0_SAMCS_RXF_Pos                (9UL)                     /*!< RXF (Bit 9)                                           */
#define I2C0_SAMCS_RXF_Msk                (0x200UL)                 /*!< RXF (Bitfield-Mask: 0x01)                             */
#define I2C0_SAMCS_TXF_Pos                (8UL)                     /*!< TXF (Bit 8)                                           */
#define I2C0_SAMCS_TXF_Msk                (0x100UL)                 /*!< TXF (Bitfield-Mask: 0x01)                             */
#define I2C0_SAMCS_RFRIE_Pos              (7UL)                     /*!< RFRIE (Bit 7)                                         */
#define I2C0_SAMCS_RFRIE_Msk              (0x80UL)                  /*!< RFRIE (Bitfield-Mask: 0x01)                           */
#define I2C0_SAMCS_RFFIE_Pos              (6UL)                     /*!< RFFIE (Bit 6)                                         */
#define I2C0_SAMCS_RFFIE_Msk              (0x40UL)                  /*!< RFFIE (Bitfield-Mask: 0x01)                           */
#define I2C0_SAMCS_TFRIE_Pos              (5UL)                     /*!< TFRIE (Bit 5)                                         */
#define I2C0_SAMCS_TFRIE_Msk              (0x20UL)                  /*!< TFRIE (Bitfield-Mask: 0x01)                           */
#define I2C0_SAMCS_TFFIE_Pos              (4UL)                     /*!< TFFIE (Bit 4)                                         */
#define I2C0_SAMCS_TFFIE_Msk              (0x10UL)                  /*!< TFFIE (Bitfield-Mask: 0x01)                           */
#define I2C0_SAMCS_STOEN_Pos              (1UL)                     /*!< STOEN (Bit 1)                                         */
#define I2C0_SAMCS_STOEN_Msk              (0x2UL)                   /*!< STOEN (Bitfield-Mask: 0x01)                           */
#define I2C0_SAMCS_SAMEN_Pos              (0UL)                     /*!< SAMEN (Bit 0)                                         */
#define I2C0_SAMCS_SAMEN_Msk              (0x1UL)                   /*!< SAMEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  FMPCFG  ========================================================= */
#define I2C0_FMPCFG_FMPEN_Pos             (0UL)                     /*!< FMPEN (Bit 0)                                         */
#define I2C0_FMPCFG_FMPEN_Msk             (0x1UL)                   /*!< FMPEN (Bitfield-Mask: 0x01)                           */


/* =========================================================================================================================== */
/* ================                                           NVIC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  ISER0  ========================================================= */
#define NVIC_ISER0_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER0_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER1  ========================================================= */
#define NVIC_ISER1_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER1_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER2  ========================================================= */
#define NVIC_ISER2_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER2_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER3  ========================================================= */
#define NVIC_ISER3_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER3_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER4  ========================================================= */
#define NVIC_ISER4_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER4_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER5  ========================================================= */
#define NVIC_ISER5_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER5_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER6  ========================================================= */
#define NVIC_ISER6_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER6_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER7  ========================================================= */
#define NVIC_ISER7_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER7_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER8  ========================================================= */
#define NVIC_ISER8_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER8_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISER9  ========================================================= */
#define NVIC_ISER9_SETENA_Pos             (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER9_SETENA_Msk             (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ISER10  ========================================================= */
#define NVIC_ISER10_SETENA_Pos            (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER10_SETENA_Msk            (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ISER11  ========================================================= */
#define NVIC_ISER11_SETENA_Pos            (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER11_SETENA_Msk            (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ISER12  ========================================================= */
#define NVIC_ISER12_SETENA_Pos            (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER12_SETENA_Msk            (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ISER13  ========================================================= */
#define NVIC_ISER13_SETENA_Pos            (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER13_SETENA_Msk            (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ISER14  ========================================================= */
#define NVIC_ISER14_SETENA_Pos            (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER14_SETENA_Msk            (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ISER15  ========================================================= */
#define NVIC_ISER15_SETENA_Pos            (0UL)                     /*!< SETENA (Bit 0)                                        */
#define NVIC_ISER15_SETENA_Msk            (0xffffffffUL)            /*!< SETENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER0  ========================================================= */
#define NVIC_ICER0_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER0_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER1  ========================================================= */
#define NVIC_ICER1_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER1_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER2  ========================================================= */
#define NVIC_ICER2_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER2_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER3  ========================================================= */
#define NVIC_ICER3_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER3_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER4  ========================================================= */
#define NVIC_ICER4_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER4_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER5  ========================================================= */
#define NVIC_ICER5_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER5_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER6  ========================================================= */
#define NVIC_ICER6_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER6_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER7  ========================================================= */
#define NVIC_ICER7_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER7_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER8  ========================================================= */
#define NVIC_ICER8_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER8_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ICER9  ========================================================= */
#define NVIC_ICER9_CLRENA_Pos             (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER9_CLRENA_Msk             (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ICER10  ========================================================= */
#define NVIC_ICER10_CLRENA_Pos            (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER10_CLRENA_Msk            (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ICER11  ========================================================= */
#define NVIC_ICER11_CLRENA_Pos            (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER11_CLRENA_Msk            (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ICER12  ========================================================= */
#define NVIC_ICER12_CLRENA_Pos            (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER12_CLRENA_Msk            (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ICER13  ========================================================= */
#define NVIC_ICER13_CLRENA_Pos            (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER13_CLRENA_Msk            (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ICER14  ========================================================= */
#define NVIC_ICER14_CLRENA_Pos            (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER14_CLRENA_Msk            (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* ========================================================  ICER15  ========================================================= */
#define NVIC_ICER15_CLRENA_Pos            (0UL)                     /*!< CLRENA (Bit 0)                                        */
#define NVIC_ICER15_CLRENA_Msk            (0xffffffffUL)            /*!< CLRENA (Bitfield-Mask: 0xffffffff)                    */
/* =========================================================  ISPR0  ========================================================= */
#define NVIC_ISPR0_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR0_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR1  ========================================================= */
#define NVIC_ISPR1_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR1_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR2  ========================================================= */
#define NVIC_ISPR2_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR2_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR3  ========================================================= */
#define NVIC_ISPR3_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR3_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR4  ========================================================= */
#define NVIC_ISPR4_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR4_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR5  ========================================================= */
#define NVIC_ISPR5_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR5_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR6  ========================================================= */
#define NVIC_ISPR6_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR6_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR7  ========================================================= */
#define NVIC_ISPR7_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR7_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR8  ========================================================= */
#define NVIC_ISPR8_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR8_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ISPR9  ========================================================= */
#define NVIC_ISPR9_SETPEND_Pos            (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR9_SETPEND_Msk            (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ISPR10  ========================================================= */
#define NVIC_ISPR10_SETPEND_Pos           (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR10_SETPEND_Msk           (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ISPR11  ========================================================= */
#define NVIC_ISPR11_SETPEND_Pos           (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR11_SETPEND_Msk           (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ISPR12  ========================================================= */
#define NVIC_ISPR12_SETPEND_Pos           (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR12_SETPEND_Msk           (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ISPR13  ========================================================= */
#define NVIC_ISPR13_SETPEND_Pos           (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR13_SETPEND_Msk           (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ISPR14  ========================================================= */
#define NVIC_ISPR14_SETPEND_Pos           (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR14_SETPEND_Msk           (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ISPR15  ========================================================= */
#define NVIC_ISPR15_SETPEND_Pos           (0UL)                     /*!< SETPEND (Bit 0)                                       */
#define NVIC_ISPR15_SETPEND_Msk           (0xffffffffUL)            /*!< SETPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR0  ========================================================= */
#define NVIC_ICPR0_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR0_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR1  ========================================================= */
#define NVIC_ICPR1_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR1_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR2  ========================================================= */
#define NVIC_ICPR2_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR2_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR3  ========================================================= */
#define NVIC_ICPR3_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR3_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR4  ========================================================= */
#define NVIC_ICPR4_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR4_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR5  ========================================================= */
#define NVIC_ICPR5_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR5_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR6  ========================================================= */
#define NVIC_ICPR6_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR6_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR7  ========================================================= */
#define NVIC_ICPR7_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR7_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR8  ========================================================= */
#define NVIC_ICPR8_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR8_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  ICPR9  ========================================================= */
#define NVIC_ICPR9_CLRPEND_Pos            (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR9_CLRPEND_Msk            (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ICPR10  ========================================================= */
#define NVIC_ICPR10_CLRPEND_Pos           (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR10_CLRPEND_Msk           (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ICPR11  ========================================================= */
#define NVIC_ICPR11_CLRPEND_Pos           (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR11_CLRPEND_Msk           (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ICPR12  ========================================================= */
#define NVIC_ICPR12_CLRPEND_Pos           (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR12_CLRPEND_Msk           (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ICPR13  ========================================================= */
#define NVIC_ICPR13_CLRPEND_Pos           (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR13_CLRPEND_Msk           (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ICPR14  ========================================================= */
#define NVIC_ICPR14_CLRPEND_Pos           (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR14_CLRPEND_Msk           (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* ========================================================  ICPR15  ========================================================= */
#define NVIC_ICPR15_CLRPEND_Pos           (0UL)                     /*!< CLRPEND (Bit 0)                                       */
#define NVIC_ICPR15_CLRPEND_Msk           (0xffffffffUL)            /*!< CLRPEND (Bitfield-Mask: 0xffffffff)                   */
/* =========================================================  IABR0  ========================================================= */
#define NVIC_IABR0_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR0_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR1  ========================================================= */
#define NVIC_IABR1_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR1_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR2  ========================================================= */
#define NVIC_IABR2_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR2_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR3  ========================================================= */
#define NVIC_IABR3_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR3_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR4  ========================================================= */
#define NVIC_IABR4_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR4_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR5  ========================================================= */
#define NVIC_IABR5_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR5_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR6  ========================================================= */
#define NVIC_IABR6_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR6_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR7  ========================================================= */
#define NVIC_IABR7_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR7_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR8  ========================================================= */
#define NVIC_IABR8_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR8_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IABR9  ========================================================= */
#define NVIC_IABR9_IABR_Pos               (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR9_IABR_Msk               (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  IABR10  ========================================================= */
#define NVIC_IABR10_IABR_Pos              (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR10_IABR_Msk              (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  IABR11  ========================================================= */
#define NVIC_IABR11_IABR_Pos              (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR11_IABR_Msk              (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  IABR12  ========================================================= */
#define NVIC_IABR12_IABR_Pos              (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR12_IABR_Msk              (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  IABR13  ========================================================= */
#define NVIC_IABR13_IABR_Pos              (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR13_IABR_Msk              (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  IABR14  ========================================================= */
#define NVIC_IABR14_IABR_Pos              (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR14_IABR_Msk              (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  IABR15  ========================================================= */
#define NVIC_IABR15_IABR_Pos              (0UL)                     /*!< IABR (Bit 0)                                          */
#define NVIC_IABR15_IABR_Msk              (0xffffffffUL)            /*!< IABR (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS0  ========================================================= */
#define NVIC_ITNS0_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS0_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS1  ========================================================= */
#define NVIC_ITNS1_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS1_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS2  ========================================================= */
#define NVIC_ITNS2_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS2_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS3  ========================================================= */
#define NVIC_ITNS3_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS3_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS4  ========================================================= */
#define NVIC_ITNS4_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS4_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS5  ========================================================= */
#define NVIC_ITNS5_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS5_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS6  ========================================================= */
#define NVIC_ITNS6_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS6_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS7  ========================================================= */
#define NVIC_ITNS7_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS7_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS8  ========================================================= */
#define NVIC_ITNS8_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS8_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  ITNS9  ========================================================= */
#define NVIC_ITNS9_ITNS_Pos               (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS9_ITNS_Msk               (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  ITNS10  ========================================================= */
#define NVIC_ITNS10_ITNS_Pos              (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS10_ITNS_Msk              (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  ITNS11  ========================================================= */
#define NVIC_ITNS11_ITNS_Pos              (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS11_ITNS_Msk              (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  ITNS12  ========================================================= */
#define NVIC_ITNS12_ITNS_Pos              (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS12_ITNS_Msk              (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  ITNS13  ========================================================= */
#define NVIC_ITNS13_ITNS_Pos              (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS13_ITNS_Msk              (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  ITNS14  ========================================================= */
#define NVIC_ITNS14_ITNS_Pos              (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS14_ITNS_Msk              (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* ========================================================  ITNS15  ========================================================= */
#define NVIC_ITNS15_ITNS_Pos              (0UL)                     /*!< ITNS (Bit 0)                                          */
#define NVIC_ITNS15_ITNS_Msk              (0xffffffffUL)            /*!< ITNS (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  IPR0  ========================================================== */
#define NVIC_IPR0_PRI_00_Pos              (0UL)                     /*!< PRI_00 (Bit 0)                                        */
#define NVIC_IPR0_PRI_00_Msk              (0xffUL)                  /*!< PRI_00 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR1  ========================================================== */
#define NVIC_IPR1_PRI_01_Pos              (0UL)                     /*!< PRI_01 (Bit 0)                                        */
#define NVIC_IPR1_PRI_01_Msk              (0xffUL)                  /*!< PRI_01 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR2  ========================================================== */
#define NVIC_IPR2_PRI_02_Pos              (0UL)                     /*!< PRI_02 (Bit 0)                                        */
#define NVIC_IPR2_PRI_02_Msk              (0xffUL)                  /*!< PRI_02 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR3  ========================================================== */
#define NVIC_IPR3_PRI_03_Pos              (0UL)                     /*!< PRI_03 (Bit 0)                                        */
#define NVIC_IPR3_PRI_03_Msk              (0xffUL)                  /*!< PRI_03 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR4  ========================================================== */
#define NVIC_IPR4_PRI_04_Pos              (0UL)                     /*!< PRI_04 (Bit 0)                                        */
#define NVIC_IPR4_PRI_04_Msk              (0xffUL)                  /*!< PRI_04 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR5  ========================================================== */
#define NVIC_IPR5_PRI_05_Pos              (0UL)                     /*!< PRI_05 (Bit 0)                                        */
#define NVIC_IPR5_PRI_05_Msk              (0xffUL)                  /*!< PRI_05 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR6  ========================================================== */
#define NVIC_IPR6_PRI_06_Pos              (0UL)                     /*!< PRI_06 (Bit 0)                                        */
#define NVIC_IPR6_PRI_06_Msk              (0xffUL)                  /*!< PRI_06 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR7  ========================================================== */
#define NVIC_IPR7_PRI_07_Pos              (0UL)                     /*!< PRI_07 (Bit 0)                                        */
#define NVIC_IPR7_PRI_07_Msk              (0xffUL)                  /*!< PRI_07 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR8  ========================================================== */
#define NVIC_IPR8_PRI_08_Pos              (0UL)                     /*!< PRI_08 (Bit 0)                                        */
#define NVIC_IPR8_PRI_08_Msk              (0xffUL)                  /*!< PRI_08 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR9  ========================================================== */
#define NVIC_IPR9_PRI_09_Pos              (0UL)                     /*!< PRI_09 (Bit 0)                                        */
#define NVIC_IPR9_PRI_09_Msk              (0xffUL)                  /*!< PRI_09 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR10  ========================================================= */
#define NVIC_IPR10_PRI_10_Pos             (0UL)                     /*!< PRI_10 (Bit 0)                                        */
#define NVIC_IPR10_PRI_10_Msk             (0xffUL)                  /*!< PRI_10 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR11  ========================================================= */
#define NVIC_IPR11_PRI_11_Pos             (0UL)                     /*!< PRI_11 (Bit 0)                                        */
#define NVIC_IPR11_PRI_11_Msk             (0xffUL)                  /*!< PRI_11 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR12  ========================================================= */
#define NVIC_IPR12_PRI_12_Pos             (0UL)                     /*!< PRI_12 (Bit 0)                                        */
#define NVIC_IPR12_PRI_12_Msk             (0xffUL)                  /*!< PRI_12 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR13  ========================================================= */
#define NVIC_IPR13_PRI_13_Pos             (0UL)                     /*!< PRI_13 (Bit 0)                                        */
#define NVIC_IPR13_PRI_13_Msk             (0xffUL)                  /*!< PRI_13 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR14  ========================================================= */
#define NVIC_IPR14_PRI_14_Pos             (0UL)                     /*!< PRI_14 (Bit 0)                                        */
#define NVIC_IPR14_PRI_14_Msk             (0xffUL)                  /*!< PRI_14 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR15  ========================================================= */
#define NVIC_IPR15_PRI_15_Pos             (0UL)                     /*!< PRI_15 (Bit 0)                                        */
#define NVIC_IPR15_PRI_15_Msk             (0xffUL)                  /*!< PRI_15 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR16  ========================================================= */
#define NVIC_IPR16_PRI_16_Pos             (0UL)                     /*!< PRI_16 (Bit 0)                                        */
#define NVIC_IPR16_PRI_16_Msk             (0xffUL)                  /*!< PRI_16 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR17  ========================================================= */
#define NVIC_IPR17_PRI_17_Pos             (0UL)                     /*!< PRI_17 (Bit 0)                                        */
#define NVIC_IPR17_PRI_17_Msk             (0xffUL)                  /*!< PRI_17 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR18  ========================================================= */
#define NVIC_IPR18_PRI_18_Pos             (0UL)                     /*!< PRI_18 (Bit 0)                                        */
#define NVIC_IPR18_PRI_18_Msk             (0xffUL)                  /*!< PRI_18 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR19  ========================================================= */
#define NVIC_IPR19_PRI_19_Pos             (0UL)                     /*!< PRI_19 (Bit 0)                                        */
#define NVIC_IPR19_PRI_19_Msk             (0xffUL)                  /*!< PRI_19 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR20  ========================================================= */
#define NVIC_IPR20_PRI_20_Pos             (0UL)                     /*!< PRI_20 (Bit 0)                                        */
#define NVIC_IPR20_PRI_20_Msk             (0xffUL)                  /*!< PRI_20 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR21  ========================================================= */
#define NVIC_IPR21_PRI_21_Pos             (0UL)                     /*!< PRI_21 (Bit 0)                                        */
#define NVIC_IPR21_PRI_21_Msk             (0xffUL)                  /*!< PRI_21 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR22  ========================================================= */
#define NVIC_IPR22_PRI_22_Pos             (0UL)                     /*!< PRI_22 (Bit 0)                                        */
#define NVIC_IPR22_PRI_22_Msk             (0xffUL)                  /*!< PRI_22 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR23  ========================================================= */
#define NVIC_IPR23_PRI_23_Pos             (0UL)                     /*!< PRI_23 (Bit 0)                                        */
#define NVIC_IPR23_PRI_23_Msk             (0xffUL)                  /*!< PRI_23 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR24  ========================================================= */
#define NVIC_IPR24_PRI_24_Pos             (0UL)                     /*!< PRI_24 (Bit 0)                                        */
#define NVIC_IPR24_PRI_24_Msk             (0xffUL)                  /*!< PRI_24 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR25  ========================================================= */
#define NVIC_IPR25_PRI_25_Pos             (0UL)                     /*!< PRI_25 (Bit 0)                                        */
#define NVIC_IPR25_PRI_25_Msk             (0xffUL)                  /*!< PRI_25 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR26  ========================================================= */
#define NVIC_IPR26_PRI_26_Pos             (0UL)                     /*!< PRI_26 (Bit 0)                                        */
#define NVIC_IPR26_PRI_26_Msk             (0xffUL)                  /*!< PRI_26 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR27  ========================================================= */
#define NVIC_IPR27_PRI_27_Pos             (0UL)                     /*!< PRI_27 (Bit 0)                                        */
#define NVIC_IPR27_PRI_27_Msk             (0xffUL)                  /*!< PRI_27 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR28  ========================================================= */
#define NVIC_IPR28_PRI_28_Pos             (0UL)                     /*!< PRI_28 (Bit 0)                                        */
#define NVIC_IPR28_PRI_28_Msk             (0xffUL)                  /*!< PRI_28 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR29  ========================================================= */
#define NVIC_IPR29_PRI_29_Pos             (0UL)                     /*!< PRI_29 (Bit 0)                                        */
#define NVIC_IPR29_PRI_29_Msk             (0xffUL)                  /*!< PRI_29 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR30  ========================================================= */
#define NVIC_IPR30_PRI_30_Pos             (0UL)                     /*!< PRI_30 (Bit 0)                                        */
#define NVIC_IPR30_PRI_30_Msk             (0xffUL)                  /*!< PRI_30 (Bitfield-Mask: 0xff)                          */
/* =========================================================  IPR31  ========================================================= */
#define NVIC_IPR31_PRI_31_Pos             (0UL)                     /*!< PRI_31 (Bit 0)                                        */
#define NVIC_IPR31_PRI_31_Msk             (0xffUL)                  /*!< PRI_31 (Bitfield-Mask: 0xff)                          */


/* =========================================================================================================================== */
/* ================                                            PMU                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define PMU_CTL_LDOVS_Pos                 (14UL)                    /*!< LDOVS (Bit 14)                                        */
#define PMU_CTL_LDOVS_Msk                 (0xc000UL)                /*!< LDOVS (Bitfield-Mask: 0x03)                           */
#define PMU_CTL_BKPWEN_Pos                (8UL)                     /*!< BKPWEN (Bit 8)                                        */
#define PMU_CTL_BKPWEN_Msk                (0x100UL)                 /*!< BKPWEN (Bitfield-Mask: 0x01)                          */
#define PMU_CTL_LVDT_Pos                  (5UL)                     /*!< LVDT (Bit 5)                                          */
#define PMU_CTL_LVDT_Msk                  (0xe0UL)                  /*!< LVDT (Bitfield-Mask: 0x07)                            */
#define PMU_CTL_LVDEN_Pos                 (4UL)                     /*!< LVDEN (Bit 4)                                         */
#define PMU_CTL_LVDEN_Msk                 (0x10UL)                  /*!< LVDEN (Bitfield-Mask: 0x01)                           */
#define PMU_CTL_STBRST_Pos                (3UL)                     /*!< STBRST (Bit 3)                                        */
#define PMU_CTL_STBRST_Msk                (0x8UL)                   /*!< STBRST (Bitfield-Mask: 0x01)                          */
#define PMU_CTL_WURST_Pos                 (2UL)                     /*!< WURST (Bit 2)                                         */
#define PMU_CTL_WURST_Msk                 (0x4UL)                   /*!< WURST (Bitfield-Mask: 0x01)                           */
#define PMU_CTL_STBMOD_Pos                (1UL)                     /*!< STBMOD (Bit 1)                                        */
#define PMU_CTL_STBMOD_Msk                (0x2UL)                   /*!< STBMOD (Bitfield-Mask: 0x01)                          */
#define PMU_CTL_LDOLP_Pos                 (0UL)                     /*!< LDOLP (Bit 0)                                         */
#define PMU_CTL_LDOLP_Msk                 (0x1UL)                   /*!< LDOLP (Bitfield-Mask: 0x01)                           */
/* ==========================================================  CS  =========================================================== */
#define PMU_CS_WUPEN6_Pos                 (14UL)                    /*!< WUPEN6 (Bit 14)                                       */
#define PMU_CS_WUPEN6_Msk                 (0x4000UL)                /*!< WUPEN6 (Bitfield-Mask: 0x01)                          */
#define PMU_CS_WUPEN5_Pos                 (13UL)                    /*!< WUPEN5 (Bit 13)                                       */
#define PMU_CS_WUPEN5_Msk                 (0x2000UL)                /*!< WUPEN5 (Bitfield-Mask: 0x01)                          */
#define PMU_CS_WUPEN1_Pos                 (9UL)                     /*!< WUPEN1 (Bit 9)                                        */
#define PMU_CS_WUPEN1_Msk                 (0x200UL)                 /*!< WUPEN1 (Bitfield-Mask: 0x01)                          */
#define PMU_CS_WUPEN0_Pos                 (8UL)                     /*!< WUPEN0 (Bit 8)                                        */
#define PMU_CS_WUPEN0_Msk                 (0x100UL)                 /*!< WUPEN0 (Bitfield-Mask: 0x01)                          */
#define PMU_CS_LVDF_Pos                   (2UL)                     /*!< LVDF (Bit 2)                                          */
#define PMU_CS_LVDF_Msk                   (0x4UL)                   /*!< LVDF (Bitfield-Mask: 0x01)                            */
#define PMU_CS_STBF_Pos                   (1UL)                     /*!< STBF (Bit 1)                                          */
#define PMU_CS_STBF_Msk                   (0x2UL)                   /*!< STBF (Bitfield-Mask: 0x01)                            */
#define PMU_CS_WUF_Pos                    (0UL)                     /*!< WUF (Bit 0)                                           */
#define PMU_CS_WUF_Msk                    (0x1UL)                   /*!< WUF (Bitfield-Mask: 0x01)                             */


/* =========================================================================================================================== */
/* ================                                            RCU                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define RCU_CTL0_PLLSTB_Pos               (25UL)                    /*!< PLLSTB (Bit 25)                                       */
#define RCU_CTL0_PLLSTB_Msk               (0x2000000UL)             /*!< PLLSTB (Bitfield-Mask: 0x01)                          */
#define RCU_CTL0_PLLEN_Pos                (24UL)                    /*!< PLLEN (Bit 24)                                        */
#define RCU_CTL0_PLLEN_Msk                (0x1000000UL)             /*!< PLLEN (Bitfield-Mask: 0x01)                           */
#define RCU_CTL0_CKMEN_Pos                (19UL)                    /*!< CKMEN (Bit 19)                                        */
#define RCU_CTL0_CKMEN_Msk                (0x80000UL)               /*!< CKMEN (Bitfield-Mask: 0x01)                           */
#define RCU_CTL0_HXTALBPS_Pos             (18UL)                    /*!< HXTALBPS (Bit 18)                                     */
#define RCU_CTL0_HXTALBPS_Msk             (0x40000UL)               /*!< HXTALBPS (Bitfield-Mask: 0x01)                        */
#define RCU_CTL0_HXTALSTB_Pos             (17UL)                    /*!< HXTALSTB (Bit 17)                                     */
#define RCU_CTL0_HXTALSTB_Msk             (0x20000UL)               /*!< HXTALSTB (Bitfield-Mask: 0x01)                        */
#define RCU_CTL0_HXTALEN_Pos              (16UL)                    /*!< HXTALEN (Bit 16)                                      */
#define RCU_CTL0_HXTALEN_Msk              (0x10000UL)               /*!< HXTALEN (Bitfield-Mask: 0x01)                         */
#define RCU_CTL0_IRC8MCALIB_Pos           (8UL)                     /*!< IRC8MCALIB (Bit 8)                                    */
#define RCU_CTL0_IRC8MCALIB_Msk           (0xff00UL)                /*!< IRC8MCALIB (Bitfield-Mask: 0xff)                      */
#define RCU_CTL0_IRC8MADJ_Pos             (3UL)                     /*!< IRC8MADJ (Bit 3)                                      */
#define RCU_CTL0_IRC8MADJ_Msk             (0xf8UL)                  /*!< IRC8MADJ (Bitfield-Mask: 0x1f)                        */
#define RCU_CTL0_IRC8MSTB_Pos             (1UL)                     /*!< IRC8MSTB (Bit 1)                                      */
#define RCU_CTL0_IRC8MSTB_Msk             (0x2UL)                   /*!< IRC8MSTB (Bitfield-Mask: 0x01)                        */
#define RCU_CTL0_IRC8MEN_Pos              (0UL)                     /*!< IRC8MEN (Bit 0)                                       */
#define RCU_CTL0_IRC8MEN_Msk              (0x1UL)                   /*!< IRC8MEN (Bitfield-Mask: 0x01)                         */
/* =========================================================  CFG0  ========================================================== */
#define RCU_CFG0_PLLDV_Pos                (31UL)                    /*!< PLLDV (Bit 31)                                        */
#define RCU_CFG0_PLLDV_Msk                (0x80000000UL)            /*!< PLLDV (Bitfield-Mask: 0x01)                           */
#define RCU_CFG0_CKOUTDIV_Pos             (28UL)                    /*!< CKOUTDIV (Bit 28)                                     */
#define RCU_CFG0_CKOUTDIV_Msk             (0x70000000UL)            /*!< CKOUTDIV (Bitfield-Mask: 0x07)                        */
#define RCU_CFG0_PLLMF_MSB_Pos            (27UL)                    /*!< PLLMF_MSB (Bit 27)                                    */
#define RCU_CFG0_PLLMF_MSB_Msk            (0x8000000UL)             /*!< PLLMF_MSB (Bitfield-Mask: 0x01)                       */
#define RCU_CFG0_CKOUTSEL_Pos             (24UL)                    /*!< CKOUTSEL (Bit 24)                                     */
#define RCU_CFG0_CKOUTSEL_Msk             (0x7000000UL)             /*!< CKOUTSEL (Bitfield-Mask: 0x07)                        */
#define RCU_CFG0_PLLMF_Pos                (18UL)                    /*!< PLLMF (Bit 18)                                        */
#define RCU_CFG0_PLLMF_Msk                (0x3c0000UL)              /*!< PLLMF (Bitfield-Mask: 0x0f)                           */
#define RCU_CFG0_PLLPREDV_Pos             (17UL)                    /*!< PLLPREDV (Bit 17)                                     */
#define RCU_CFG0_PLLPREDV_Msk             (0x20000UL)               /*!< PLLPREDV (Bitfield-Mask: 0x01)                        */
#define RCU_CFG0_PLLSEL_Pos               (16UL)                    /*!< PLLSEL (Bit 16)                                       */
#define RCU_CFG0_PLLSEL_Msk               (0x10000UL)               /*!< PLLSEL (Bitfield-Mask: 0x01)                          */
#define RCU_CFG0_ADCPSC_Pos               (14UL)                    /*!< ADCPSC (Bit 14)                                       */
#define RCU_CFG0_ADCPSC_Msk               (0xc000UL)                /*!< ADCPSC (Bitfield-Mask: 0x03)                          */
#define RCU_CFG0_APB2PSC_Pos              (11UL)                    /*!< APB2PSC (Bit 11)                                      */
#define RCU_CFG0_APB2PSC_Msk              (0x3800UL)                /*!< APB2PSC (Bitfield-Mask: 0x07)                         */
#define RCU_CFG0_APB1PSC_Pos              (8UL)                     /*!< APB1PSC (Bit 8)                                       */
#define RCU_CFG0_APB1PSC_Msk              (0x700UL)                 /*!< APB1PSC (Bitfield-Mask: 0x07)                         */
#define RCU_CFG0_AHBPSC_Pos               (4UL)                     /*!< AHBPSC (Bit 4)                                        */
#define RCU_CFG0_AHBPSC_Msk               (0xf0UL)                  /*!< AHBPSC (Bitfield-Mask: 0x0f)                          */
#define RCU_CFG0_SCSS_Pos                 (2UL)                     /*!< SCSS (Bit 2)                                          */
#define RCU_CFG0_SCSS_Msk                 (0xcUL)                   /*!< SCSS (Bitfield-Mask: 0x03)                            */
#define RCU_CFG0_SCS_Pos                  (0UL)                     /*!< SCS (Bit 0)                                           */
#define RCU_CFG0_SCS_Msk                  (0x3UL)                   /*!< SCS (Bitfield-Mask: 0x03)                             */
/* ==========================================================  INT  ========================================================== */
#define RCU_INT_CKMIC_Pos                 (23UL)                    /*!< CKMIC (Bit 23)                                        */
#define RCU_INT_CKMIC_Msk                 (0x800000UL)              /*!< CKMIC (Bitfield-Mask: 0x01)                           */
#define RCU_INT_IRC28MSTBIC_Pos           (21UL)                    /*!< IRC28MSTBIC (Bit 21)                                  */
#define RCU_INT_IRC28MSTBIC_Msk           (0x200000UL)              /*!< IRC28MSTBIC (Bitfield-Mask: 0x01)                     */
#define RCU_INT_PLLSTBIC_Pos              (20UL)                    /*!< PLLSTBIC (Bit 20)                                     */
#define RCU_INT_PLLSTBIC_Msk              (0x100000UL)              /*!< PLLSTBIC (Bitfield-Mask: 0x01)                        */
#define RCU_INT_HXTALSTBIC_Pos            (19UL)                    /*!< HXTALSTBIC (Bit 19)                                   */
#define RCU_INT_HXTALSTBIC_Msk            (0x80000UL)               /*!< HXTALSTBIC (Bitfield-Mask: 0x01)                      */
#define RCU_INT_IRC8MSTBIC_Pos            (18UL)                    /*!< IRC8MSTBIC (Bit 18)                                   */
#define RCU_INT_IRC8MSTBIC_Msk            (0x40000UL)               /*!< IRC8MSTBIC (Bitfield-Mask: 0x01)                      */
#define RCU_INT_LXTALSTBIC_Pos            (17UL)                    /*!< LXTALSTBIC (Bit 17)                                   */
#define RCU_INT_LXTALSTBIC_Msk            (0x20000UL)               /*!< LXTALSTBIC (Bitfield-Mask: 0x01)                      */
#define RCU_INT_IRC40KSTBIC_Pos           (16UL)                    /*!< IRC40KSTBIC (Bit 16)                                  */
#define RCU_INT_IRC40KSTBIC_Msk           (0x10000UL)               /*!< IRC40KSTBIC (Bitfield-Mask: 0x01)                     */
#define RCU_INT_IRC28MSTBIE_Pos           (13UL)                    /*!< IRC28MSTBIE (Bit 13)                                  */
#define RCU_INT_IRC28MSTBIE_Msk           (0x2000UL)                /*!< IRC28MSTBIE (Bitfield-Mask: 0x01)                     */
#define RCU_INT_PLLSTBIE_Pos              (12UL)                    /*!< PLLSTBIE (Bit 12)                                     */
#define RCU_INT_PLLSTBIE_Msk              (0x1000UL)                /*!< PLLSTBIE (Bitfield-Mask: 0x01)                        */
#define RCU_INT_HXTALSTBIE_Pos            (11UL)                    /*!< HXTALSTBIE (Bit 11)                                   */
#define RCU_INT_HXTALSTBIE_Msk            (0x800UL)                 /*!< HXTALSTBIE (Bitfield-Mask: 0x01)                      */
#define RCU_INT_IRC8MSTBIE_Pos            (10UL)                    /*!< IRC8MSTBIE (Bit 10)                                   */
#define RCU_INT_IRC8MSTBIE_Msk            (0x400UL)                 /*!< IRC8MSTBIE (Bitfield-Mask: 0x01)                      */
#define RCU_INT_LXTALSTBIE_Pos            (9UL)                     /*!< LXTALSTBIE (Bit 9)                                    */
#define RCU_INT_LXTALSTBIE_Msk            (0x200UL)                 /*!< LXTALSTBIE (Bitfield-Mask: 0x01)                      */
#define RCU_INT_IRC40KSTBIE_Pos           (8UL)                     /*!< IRC40KSTBIE (Bit 8)                                   */
#define RCU_INT_IRC40KSTBIE_Msk           (0x100UL)                 /*!< IRC40KSTBIE (Bitfield-Mask: 0x01)                     */
#define RCU_INT_CKMIF_Pos                 (7UL)                     /*!< CKMIF (Bit 7)                                         */
#define RCU_INT_CKMIF_Msk                 (0x80UL)                  /*!< CKMIF (Bitfield-Mask: 0x01)                           */
#define RCU_INT_IRC28MSTBIF_Pos           (5UL)                     /*!< IRC28MSTBIF (Bit 5)                                   */
#define RCU_INT_IRC28MSTBIF_Msk           (0x20UL)                  /*!< IRC28MSTBIF (Bitfield-Mask: 0x01)                     */
#define RCU_INT_PLLSTBIF_Pos              (4UL)                     /*!< PLLSTBIF (Bit 4)                                      */
#define RCU_INT_PLLSTBIF_Msk              (0x10UL)                  /*!< PLLSTBIF (Bitfield-Mask: 0x01)                        */
#define RCU_INT_HXTALSTBIF_Pos            (3UL)                     /*!< HXTALSTBIF (Bit 3)                                    */
#define RCU_INT_HXTALSTBIF_Msk            (0x8UL)                   /*!< HXTALSTBIF (Bitfield-Mask: 0x01)                      */
#define RCU_INT_IRC8MSTBIF_Pos            (2UL)                     /*!< IRC8MSTBIF (Bit 2)                                    */
#define RCU_INT_IRC8MSTBIF_Msk            (0x4UL)                   /*!< IRC8MSTBIF (Bitfield-Mask: 0x01)                      */
#define RCU_INT_LXTALSTBIF_Pos            (1UL)                     /*!< LXTALSTBIF (Bit 1)                                    */
#define RCU_INT_LXTALSTBIF_Msk            (0x2UL)                   /*!< LXTALSTBIF (Bitfield-Mask: 0x01)                      */
#define RCU_INT_IRC40KSTBIF_Pos           (0UL)                     /*!< IRC40KSTBIF (Bit 0)                                   */
#define RCU_INT_IRC40KSTBIF_Msk           (0x1UL)                   /*!< IRC40KSTBIF (Bitfield-Mask: 0x01)                     */
/* ========================================================  APB2RST  ======================================================== */
#define RCU_APB2RST_TIMER16RST_Pos        (18UL)                    /*!< TIMER16RST (Bit 18)                                   */
#define RCU_APB2RST_TIMER16RST_Msk        (0x40000UL)               /*!< TIMER16RST (Bitfield-Mask: 0x01)                      */
#define RCU_APB2RST_TIMER15RST_Pos        (17UL)                    /*!< TIMER15RST (Bit 17)                                   */
#define RCU_APB2RST_TIMER15RST_Msk        (0x20000UL)               /*!< TIMER15RST (Bitfield-Mask: 0x01)                      */
#define RCU_APB2RST_TIMER14RST_Pos        (16UL)                    /*!< TIMER14RST (Bit 16)                                   */
#define RCU_APB2RST_TIMER14RST_Msk        (0x10000UL)               /*!< TIMER14RST (Bitfield-Mask: 0x01)                      */
#define RCU_APB2RST_USART0RST_Pos         (14UL)                    /*!< USART0RST (Bit 14)                                    */
#define RCU_APB2RST_USART0RST_Msk         (0x4000UL)                /*!< USART0RST (Bitfield-Mask: 0x01)                       */
#define RCU_APB2RST_SPI0RST_Pos           (12UL)                    /*!< SPI0RST (Bit 12)                                      */
#define RCU_APB2RST_SPI0RST_Msk           (0x1000UL)                /*!< SPI0RST (Bitfield-Mask: 0x01)                         */
#define RCU_APB2RST_TIMER0RST_Pos         (11UL)                    /*!< TIMER0RST (Bit 11)                                    */
#define RCU_APB2RST_TIMER0RST_Msk         (0x800UL)                 /*!< TIMER0RST (Bitfield-Mask: 0x01)                       */
#define RCU_APB2RST_ADCRST_Pos            (9UL)                     /*!< ADCRST (Bit 9)                                        */
#define RCU_APB2RST_ADCRST_Msk            (0x200UL)                 /*!< ADCRST (Bitfield-Mask: 0x01)                          */
#define RCU_APB2RST_CFGCMPRST_Pos         (0UL)                     /*!< CFGCMPRST (Bit 0)                                     */
#define RCU_APB2RST_CFGCMPRST_Msk         (0x1UL)                   /*!< CFGCMPRST (Bitfield-Mask: 0x01)                       */
/* ========================================================  APB1RST  ======================================================== */
#define RCU_APB1RST_PMURST_Pos            (28UL)                    /*!< PMURST (Bit 28)                                       */
#define RCU_APB1RST_PMURST_Msk            (0x10000000UL)            /*!< PMURST (Bitfield-Mask: 0x01)                          */
#define RCU_APB1RST_I2C1RST_Pos           (22UL)                    /*!< I2C1RST (Bit 22)                                      */
#define RCU_APB1RST_I2C1RST_Msk           (0x400000UL)              /*!< I2C1RST (Bitfield-Mask: 0x01)                         */
#define RCU_APB1RST_I2C0RST_Pos           (21UL)                    /*!< I2C0RST (Bit 21)                                      */
#define RCU_APB1RST_I2C0RST_Msk           (0x200000UL)              /*!< I2C0RST (Bitfield-Mask: 0x01)                         */
#define RCU_APB1RST_USART1RST_Pos         (17UL)                    /*!< USART1RST (Bit 17)                                    */
#define RCU_APB1RST_USART1RST_Msk         (0x20000UL)               /*!< USART1RST (Bitfield-Mask: 0x01)                       */
#define RCU_APB1RST_SPI1RST_Pos           (14UL)                    /*!< SPI1RST (Bit 14)                                      */
#define RCU_APB1RST_SPI1RST_Msk           (0x4000UL)                /*!< SPI1RST (Bitfield-Mask: 0x01)                         */
#define RCU_APB1RST_WWDGTRST_Pos          (11UL)                    /*!< WWDGTRST (Bit 11)                                     */
#define RCU_APB1RST_WWDGTRST_Msk          (0x800UL)                 /*!< WWDGTRST (Bitfield-Mask: 0x01)                        */
#define RCU_APB1RST_TIMER13RST_Pos        (8UL)                     /*!< TIMER13RST (Bit 8)                                    */
#define RCU_APB1RST_TIMER13RST_Msk        (0x100UL)                 /*!< TIMER13RST (Bitfield-Mask: 0x01)                      */
#define RCU_APB1RST_TIMER5RST_Pos         (4UL)                     /*!< TIMER5RST (Bit 4)                                     */
#define RCU_APB1RST_TIMER5RST_Msk         (0x10UL)                  /*!< TIMER5RST (Bitfield-Mask: 0x01)                       */
#define RCU_APB1RST_TIMER2RST_Pos         (1UL)                     /*!< TIMER2RST (Bit 1)                                     */
#define RCU_APB1RST_TIMER2RST_Msk         (0x2UL)                   /*!< TIMER2RST (Bitfield-Mask: 0x01)                       */
/* =========================================================  AHBEN  ========================================================= */
#define RCU_AHBEN_PFEN_Pos                (22UL)                    /*!< PFEN (Bit 22)                                         */
#define RCU_AHBEN_PFEN_Msk                (0x400000UL)              /*!< PFEN (Bitfield-Mask: 0x01)                            */
#define RCU_AHBEN_PCEN_Pos                (19UL)                    /*!< PCEN (Bit 19)                                         */
#define RCU_AHBEN_PCEN_Msk                (0x80000UL)               /*!< PCEN (Bitfield-Mask: 0x01)                            */
#define RCU_AHBEN_PBEN_Pos                (18UL)                    /*!< PBEN (Bit 18)                                         */
#define RCU_AHBEN_PBEN_Msk                (0x40000UL)               /*!< PBEN (Bitfield-Mask: 0x01)                            */
#define RCU_AHBEN_PAEN_Pos                (17UL)                    /*!< PAEN (Bit 17)                                         */
#define RCU_AHBEN_PAEN_Msk                (0x20000UL)               /*!< PAEN (Bitfield-Mask: 0x01)                            */
#define RCU_AHBEN_CRCEN_Pos               (6UL)                     /*!< CRCEN (Bit 6)                                         */
#define RCU_AHBEN_CRCEN_Msk               (0x40UL)                  /*!< CRCEN (Bitfield-Mask: 0x01)                           */
#define RCU_AHBEN_FMCSPEN_Pos             (4UL)                     /*!< FMCSPEN (Bit 4)                                       */
#define RCU_AHBEN_FMCSPEN_Msk             (0x10UL)                  /*!< FMCSPEN (Bitfield-Mask: 0x01)                         */
#define RCU_AHBEN_SRAMSPEN_Pos            (2UL)                     /*!< SRAMSPEN (Bit 2)                                      */
#define RCU_AHBEN_SRAMSPEN_Msk            (0x4UL)                   /*!< SRAMSPEN (Bitfield-Mask: 0x01)                        */
#define RCU_AHBEN_DMAEN_Pos               (0UL)                     /*!< DMAEN (Bit 0)                                         */
#define RCU_AHBEN_DMAEN_Msk               (0x1UL)                   /*!< DMAEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  APB2EN  ========================================================= */
#define RCU_APB2EN_DBGMCUEN_Pos           (22UL)                    /*!< DBGMCUEN (Bit 22)                                     */
#define RCU_APB2EN_DBGMCUEN_Msk           (0x400000UL)              /*!< DBGMCUEN (Bitfield-Mask: 0x01)                        */
#define RCU_APB2EN_TIMER16EN_Pos          (18UL)                    /*!< TIMER16EN (Bit 18)                                    */
#define RCU_APB2EN_TIMER16EN_Msk          (0x40000UL)               /*!< TIMER16EN (Bitfield-Mask: 0x01)                       */
#define RCU_APB2EN_TIMER15EN_Pos          (17UL)                    /*!< TIMER15EN (Bit 17)                                    */
#define RCU_APB2EN_TIMER15EN_Msk          (0x20000UL)               /*!< TIMER15EN (Bitfield-Mask: 0x01)                       */
#define RCU_APB2EN_TIMER14EN_Pos          (16UL)                    /*!< TIMER14EN (Bit 16)                                    */
#define RCU_APB2EN_TIMER14EN_Msk          (0x10000UL)               /*!< TIMER14EN (Bitfield-Mask: 0x01)                       */
#define RCU_APB2EN_USART0EN_Pos           (14UL)                    /*!< USART0EN (Bit 14)                                     */
#define RCU_APB2EN_USART0EN_Msk           (0x4000UL)                /*!< USART0EN (Bitfield-Mask: 0x01)                        */
#define RCU_APB2EN_SPI0EN_Pos             (12UL)                    /*!< SPI0EN (Bit 12)                                       */
#define RCU_APB2EN_SPI0EN_Msk             (0x1000UL)                /*!< SPI0EN (Bitfield-Mask: 0x01)                          */
#define RCU_APB2EN_TIMER0EN_Pos           (11UL)                    /*!< TIMER0EN (Bit 11)                                     */
#define RCU_APB2EN_TIMER0EN_Msk           (0x800UL)                 /*!< TIMER0EN (Bitfield-Mask: 0x01)                        */
#define RCU_APB2EN_ADCEN_Pos              (9UL)                     /*!< ADCEN (Bit 9)                                         */
#define RCU_APB2EN_ADCEN_Msk              (0x200UL)                 /*!< ADCEN (Bitfield-Mask: 0x01)                           */
#define RCU_APB2EN_CFGCMPEN_Pos           (0UL)                     /*!< CFGCMPEN (Bit 0)                                      */
#define RCU_APB2EN_CFGCMPEN_Msk           (0x1UL)                   /*!< CFGCMPEN (Bitfield-Mask: 0x01)                        */
/* ========================================================  APB1EN  ========================================================= */
#define RCU_APB1EN_PMUEN_Pos              (28UL)                    /*!< PMUEN (Bit 28)                                        */
#define RCU_APB1EN_PMUEN_Msk              (0x10000000UL)            /*!< PMUEN (Bitfield-Mask: 0x01)                           */
#define RCU_APB1EN_I2C1EN_Pos             (22UL)                    /*!< I2C1EN (Bit 22)                                       */
#define RCU_APB1EN_I2C1EN_Msk             (0x400000UL)              /*!< I2C1EN (Bitfield-Mask: 0x01)                          */
#define RCU_APB1EN_I2C0EN_Pos             (21UL)                    /*!< I2C0EN (Bit 21)                                       */
#define RCU_APB1EN_I2C0EN_Msk             (0x200000UL)              /*!< I2C0EN (Bitfield-Mask: 0x01)                          */
#define RCU_APB1EN_USART1EN_Pos           (17UL)                    /*!< USART1EN (Bit 17)                                     */
#define RCU_APB1EN_USART1EN_Msk           (0x20000UL)               /*!< USART1EN (Bitfield-Mask: 0x01)                        */
#define RCU_APB1EN_SPI1EN_Pos             (14UL)                    /*!< SPI1EN (Bit 14)                                       */
#define RCU_APB1EN_SPI1EN_Msk             (0x4000UL)                /*!< SPI1EN (Bitfield-Mask: 0x01)                          */
#define RCU_APB1EN_WWDGTEN_Pos            (11UL)                    /*!< WWDGTEN (Bit 11)                                      */
#define RCU_APB1EN_WWDGTEN_Msk            (0x800UL)                 /*!< WWDGTEN (Bitfield-Mask: 0x01)                         */
#define RCU_APB1EN_TIMER13EN_Pos          (8UL)                     /*!< TIMER13EN (Bit 8)                                     */
#define RCU_APB1EN_TIMER13EN_Msk          (0x100UL)                 /*!< TIMER13EN (Bitfield-Mask: 0x01)                       */
#define RCU_APB1EN_TIMER5EN_Pos           (4UL)                     /*!< TIMER5EN (Bit 4)                                      */
#define RCU_APB1EN_TIMER5EN_Msk           (0x10UL)                  /*!< TIMER5EN (Bitfield-Mask: 0x01)                        */
#define RCU_APB1EN_TIMER2EN_Pos           (1UL)                     /*!< TIMER2EN (Bit 1)                                      */
#define RCU_APB1EN_TIMER2EN_Msk           (0x2UL)                   /*!< TIMER2EN (Bitfield-Mask: 0x01)                        */
/* =========================================================  BDCTL  ========================================================= */
#define RCU_BDCTL_BKPRST_Pos              (16UL)                    /*!< BKPRST (Bit 16)                                       */
#define RCU_BDCTL_BKPRST_Msk              (0x10000UL)               /*!< BKPRST (Bitfield-Mask: 0x01)                          */
#define RCU_BDCTL_RTCEN_Pos               (15UL)                    /*!< RTCEN (Bit 15)                                        */
#define RCU_BDCTL_RTCEN_Msk               (0x8000UL)                /*!< RTCEN (Bitfield-Mask: 0x01)                           */
#define RCU_BDCTL_RTCSRC_Pos              (8UL)                     /*!< RTCSRC (Bit 8)                                        */
#define RCU_BDCTL_RTCSRC_Msk              (0x300UL)                 /*!< RTCSRC (Bitfield-Mask: 0x03)                          */
#define RCU_BDCTL_LXTALDRI_Pos            (3UL)                     /*!< LXTALDRI (Bit 3)                                      */
#define RCU_BDCTL_LXTALDRI_Msk            (0x18UL)                  /*!< LXTALDRI (Bitfield-Mask: 0x03)                        */
#define RCU_BDCTL_LXTALBPS_Pos            (2UL)                     /*!< LXTALBPS (Bit 2)                                      */
#define RCU_BDCTL_LXTALBPS_Msk            (0x4UL)                   /*!< LXTALBPS (Bitfield-Mask: 0x01)                        */
#define RCU_BDCTL_LXTALSTB_Pos            (1UL)                     /*!< LXTALSTB (Bit 1)                                      */
#define RCU_BDCTL_LXTALSTB_Msk            (0x2UL)                   /*!< LXTALSTB (Bitfield-Mask: 0x01)                        */
#define RCU_BDCTL_LXTALEN_Pos             (0UL)                     /*!< LXTALEN (Bit 0)                                       */
#define RCU_BDCTL_LXTALEN_Msk             (0x1UL)                   /*!< LXTALEN (Bitfield-Mask: 0x01)                         */
/* ========================================================  RSTSCK  ========================================================= */
#define RCU_RSTSCK_LPRSTF_Pos             (31UL)                    /*!< LPRSTF (Bit 31)                                       */
#define RCU_RSTSCK_LPRSTF_Msk             (0x80000000UL)            /*!< LPRSTF (Bitfield-Mask: 0x01)                          */
#define RCU_RSTSCK_WWDGTRSTF_Pos          (30UL)                    /*!< WWDGTRSTF (Bit 30)                                    */
#define RCU_RSTSCK_WWDGTRSTF_Msk          (0x40000000UL)            /*!< WWDGTRSTF (Bitfield-Mask: 0x01)                       */
#define RCU_RSTSCK_FWDGTRSTF_Pos          (29UL)                    /*!< FWDGTRSTF (Bit 29)                                    */
#define RCU_RSTSCK_FWDGTRSTF_Msk          (0x20000000UL)            /*!< FWDGTRSTF (Bitfield-Mask: 0x01)                       */
#define RCU_RSTSCK_SWRSTF_Pos             (28UL)                    /*!< SWRSTF (Bit 28)                                       */
#define RCU_RSTSCK_SWRSTF_Msk             (0x10000000UL)            /*!< SWRSTF (Bitfield-Mask: 0x01)                          */
#define RCU_RSTSCK_PORRSTF_Pos            (27UL)                    /*!< PORRSTF (Bit 27)                                      */
#define RCU_RSTSCK_PORRSTF_Msk            (0x8000000UL)             /*!< PORRSTF (Bitfield-Mask: 0x01)                         */
#define RCU_RSTSCK_EPRSTF_Pos             (26UL)                    /*!< EPRSTF (Bit 26)                                       */
#define RCU_RSTSCK_EPRSTF_Msk             (0x4000000UL)             /*!< EPRSTF (Bitfield-Mask: 0x01)                          */
#define RCU_RSTSCK_OBLRSTF_Pos            (25UL)                    /*!< OBLRSTF (Bit 25)                                      */
#define RCU_RSTSCK_OBLRSTF_Msk            (0x2000000UL)             /*!< OBLRSTF (Bitfield-Mask: 0x01)                         */
#define RCU_RSTSCK_RSTFC_Pos              (24UL)                    /*!< RSTFC (Bit 24)                                        */
#define RCU_RSTSCK_RSTFC_Msk              (0x1000000UL)             /*!< RSTFC (Bitfield-Mask: 0x01)                           */
#define RCU_RSTSCK_V12RSTF_Pos            (23UL)                    /*!< V12RSTF (Bit 23)                                      */
#define RCU_RSTSCK_V12RSTF_Msk            (0x800000UL)              /*!< V12RSTF (Bitfield-Mask: 0x01)                         */
#define RCU_RSTSCK_IRC40KSTB_Pos          (1UL)                     /*!< IRC40KSTB (Bit 1)                                     */
#define RCU_RSTSCK_IRC40KSTB_Msk          (0x2UL)                   /*!< IRC40KSTB (Bitfield-Mask: 0x01)                       */
#define RCU_RSTSCK_IRC40KEN_Pos           (0UL)                     /*!< IRC40KEN (Bit 0)                                      */
#define RCU_RSTSCK_IRC40KEN_Msk           (0x1UL)                   /*!< IRC40KEN (Bitfield-Mask: 0x01)                        */
/* ========================================================  AHBRST  ========================================================= */
#define RCU_AHBRST_PFRST_Pos              (22UL)                    /*!< PFRST (Bit 22)                                        */
#define RCU_AHBRST_PFRST_Msk              (0x400000UL)              /*!< PFRST (Bitfield-Mask: 0x01)                           */
#define RCU_AHBRST_PCRST_Pos              (19UL)                    /*!< PCRST (Bit 19)                                        */
#define RCU_AHBRST_PCRST_Msk              (0x80000UL)               /*!< PCRST (Bitfield-Mask: 0x01)                           */
#define RCU_AHBRST_PBRST_Pos              (18UL)                    /*!< PBRST (Bit 18)                                        */
#define RCU_AHBRST_PBRST_Msk              (0x40000UL)               /*!< PBRST (Bitfield-Mask: 0x01)                           */
#define RCU_AHBRST_PARST_Pos              (17UL)                    /*!< PARST (Bit 17)                                        */
#define RCU_AHBRST_PARST_Msk              (0x20000UL)               /*!< PARST (Bitfield-Mask: 0x01)                           */
/* =========================================================  CFG1  ========================================================== */
#define RCU_CFG1_PREDV_Pos                (0UL)                     /*!< PREDV (Bit 0)                                         */
#define RCU_CFG1_PREDV_Msk                (0xfUL)                   /*!< PREDV (Bitfield-Mask: 0x0f)                           */
/* =========================================================  CFG2  ========================================================== */
#define RCU_CFG2_ADCPSC_Pos               (31UL)                    /*!< ADCPSC (Bit 31)                                       */
#define RCU_CFG2_ADCPSC_Msk               (0x80000000UL)            /*!< ADCPSC (Bitfield-Mask: 0x01)                          */
#define RCU_CFG2_IRC28MDIV_Pos            (16UL)                    /*!< IRC28MDIV (Bit 16)                                    */
#define RCU_CFG2_IRC28MDIV_Msk            (0x10000UL)               /*!< IRC28MDIV (Bitfield-Mask: 0x01)                       */
#define RCU_CFG2_ADCSEL_Pos               (8UL)                     /*!< ADCSEL (Bit 8)                                        */
#define RCU_CFG2_ADCSEL_Msk               (0x100UL)                 /*!< ADCSEL (Bitfield-Mask: 0x01)                          */
#define RCU_CFG2_USART0SEL_Pos            (0UL)                     /*!< USART0SEL (Bit 0)                                     */
#define RCU_CFG2_USART0SEL_Msk            (0x3UL)                   /*!< USART0SEL (Bitfield-Mask: 0x03)                       */
/* =========================================================  CTL1  ========================================================== */
#define RCU_CTL1_IRC28MCALIB_Pos          (8UL)                     /*!< IRC28MCALIB (Bit 8)                                   */
#define RCU_CTL1_IRC28MCALIB_Msk          (0xff00UL)                /*!< IRC28MCALIB (Bitfield-Mask: 0xff)                     */
#define RCU_CTL1_IRC28MADJ_Pos            (3UL)                     /*!< IRC28MADJ (Bit 3)                                     */
#define RCU_CTL1_IRC28MADJ_Msk            (0xf8UL)                  /*!< IRC28MADJ (Bitfield-Mask: 0x1f)                       */
#define RCU_CTL1_IRC28MSTB_Pos            (1UL)                     /*!< IRC28MSTB (Bit 1)                                     */
#define RCU_CTL1_IRC28MSTB_Msk            (0x2UL)                   /*!< IRC28MSTB (Bitfield-Mask: 0x01)                       */
#define RCU_CTL1_IRC28MEN_Pos             (0UL)                     /*!< IRC28MEN (Bit 0)                                      */
#define RCU_CTL1_IRC28MEN_Msk             (0x1UL)                   /*!< IRC28MEN (Bitfield-Mask: 0x01)                        */
/* =========================================================  VKEY  ========================================================== */
#define RCU_VKEY_KEY_Pos                  (0UL)                     /*!< KEY (Bit 0)                                           */
#define RCU_VKEY_KEY_Msk                  (0xffffffffUL)            /*!< KEY (Bitfield-Mask: 0xffffffff)                       */
/* ==========================================================  DSV  ========================================================== */
#define RCU_DSV_DSLPVS_Pos                (0UL)                     /*!< DSLPVS (Bit 0)                                        */
#define RCU_DSV_DSLPVS_Msk                (0x3UL)                   /*!< DSLPVS (Bitfield-Mask: 0x03)                          */


/* =========================================================================================================================== */
/* ================                                            RTC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TIME  ========================================================== */
#define RTC_TIME_PM_Pos                   (22UL)                    /*!< PM (Bit 22)                                           */
#define RTC_TIME_PM_Msk                   (0x400000UL)              /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_TIME_HRT_Pos                  (20UL)                    /*!< HRT (Bit 20)                                          */
#define RTC_TIME_HRT_Msk                  (0x300000UL)              /*!< HRT (Bitfield-Mask: 0x03)                             */
#define RTC_TIME_HRU_Pos                  (16UL)                    /*!< HRU (Bit 16)                                          */
#define RTC_TIME_HRU_Msk                  (0xf0000UL)               /*!< HRU (Bitfield-Mask: 0x0f)                             */
#define RTC_TIME_MNT_Pos                  (12UL)                    /*!< MNT (Bit 12)                                          */
#define RTC_TIME_MNT_Msk                  (0x7000UL)                /*!< MNT (Bitfield-Mask: 0x07)                             */
#define RTC_TIME_MNU_Pos                  (8UL)                     /*!< MNU (Bit 8)                                           */
#define RTC_TIME_MNU_Msk                  (0xf00UL)                 /*!< MNU (Bitfield-Mask: 0x0f)                             */
#define RTC_TIME_SCT_Pos                  (4UL)                     /*!< SCT (Bit 4)                                           */
#define RTC_TIME_SCT_Msk                  (0x70UL)                  /*!< SCT (Bitfield-Mask: 0x07)                             */
#define RTC_TIME_SCU_Pos                  (0UL)                     /*!< SCU (Bit 0)                                           */
#define RTC_TIME_SCU_Msk                  (0xfUL)                   /*!< SCU (Bitfield-Mask: 0x0f)                             */
/* =========================================================  DATE  ========================================================== */
#define RTC_DATE_YRT_Pos                  (20UL)                    /*!< YRT (Bit 20)                                          */
#define RTC_DATE_YRT_Msk                  (0xf00000UL)              /*!< YRT (Bitfield-Mask: 0x0f)                             */
#define RTC_DATE_YRU_Pos                  (16UL)                    /*!< YRU (Bit 16)                                          */
#define RTC_DATE_YRU_Msk                  (0xf0000UL)               /*!< YRU (Bitfield-Mask: 0x0f)                             */
#define RTC_DATE_DOW_Pos                  (13UL)                    /*!< DOW (Bit 13)                                          */
#define RTC_DATE_DOW_Msk                  (0xe000UL)                /*!< DOW (Bitfield-Mask: 0x07)                             */
#define RTC_DATE_MONT_Pos                 (12UL)                    /*!< MONT (Bit 12)                                         */
#define RTC_DATE_MONT_Msk                 (0x1000UL)                /*!< MONT (Bitfield-Mask: 0x01)                            */
#define RTC_DATE_MONU_Pos                 (8UL)                     /*!< MONU (Bit 8)                                          */
#define RTC_DATE_MONU_Msk                 (0xf00UL)                 /*!< MONU (Bitfield-Mask: 0x0f)                            */
#define RTC_DATE_DAYT_Pos                 (4UL)                     /*!< DAYT (Bit 4)                                          */
#define RTC_DATE_DAYT_Msk                 (0x30UL)                  /*!< DAYT (Bitfield-Mask: 0x03)                            */
#define RTC_DATE_DAYU_Pos                 (0UL)                     /*!< DAYU (Bit 0)                                          */
#define RTC_DATE_DAYU_Msk                 (0xfUL)                   /*!< DAYU (Bitfield-Mask: 0x0f)                            */
/* ==========================================================  CTL  ========================================================== */
#define RTC_CTL_COEN_Pos                  (23UL)                    /*!< COEN (Bit 23)                                         */
#define RTC_CTL_COEN_Msk                  (0x800000UL)              /*!< COEN (Bitfield-Mask: 0x01)                            */
#define RTC_CTL_OS_Pos                    (21UL)                    /*!< OS (Bit 21)                                           */
#define RTC_CTL_OS_Msk                    (0x600000UL)              /*!< OS (Bitfield-Mask: 0x03)                              */
#define RTC_CTL_OPOL_Pos                  (20UL)                    /*!< OPOL (Bit 20)                                         */
#define RTC_CTL_OPOL_Msk                  (0x100000UL)              /*!< OPOL (Bitfield-Mask: 0x01)                            */
#define RTC_CTL_COS_Pos                   (19UL)                    /*!< COS (Bit 19)                                          */
#define RTC_CTL_COS_Msk                   (0x80000UL)               /*!< COS (Bitfield-Mask: 0x01)                             */
#define RTC_CTL_DSM_Pos                   (18UL)                    /*!< DSM (Bit 18)                                          */
#define RTC_CTL_DSM_Msk                   (0x40000UL)               /*!< DSM (Bitfield-Mask: 0x01)                             */
#define RTC_CTL_S1H_Pos                   (17UL)                    /*!< S1H (Bit 17)                                          */
#define RTC_CTL_S1H_Msk                   (0x20000UL)               /*!< S1H (Bitfield-Mask: 0x01)                             */
#define RTC_CTL_A1H_Pos                   (16UL)                    /*!< A1H (Bit 16)                                          */
#define RTC_CTL_A1H_Msk                   (0x10000UL)               /*!< A1H (Bitfield-Mask: 0x01)                             */
#define RTC_CTL_TSIE_Pos                  (15UL)                    /*!< TSIE (Bit 15)                                         */
#define RTC_CTL_TSIE_Msk                  (0x8000UL)                /*!< TSIE (Bitfield-Mask: 0x01)                            */
#define RTC_CTL_ALRM0IE_Pos               (12UL)                    /*!< ALRM0IE (Bit 12)                                      */
#define RTC_CTL_ALRM0IE_Msk               (0x1000UL)                /*!< ALRM0IE (Bitfield-Mask: 0x01)                         */
#define RTC_CTL_TSEN_Pos                  (11UL)                    /*!< TSEN (Bit 11)                                         */
#define RTC_CTL_TSEN_Msk                  (0x800UL)                 /*!< TSEN (Bitfield-Mask: 0x01)                            */
#define RTC_CTL_ALRM0EN_Pos               (8UL)                     /*!< ALRM0EN (Bit 8)                                       */
#define RTC_CTL_ALRM0EN_Msk               (0x100UL)                 /*!< ALRM0EN (Bitfield-Mask: 0x01)                         */
#define RTC_CTL_CS_Pos                    (6UL)                     /*!< CS (Bit 6)                                            */
#define RTC_CTL_CS_Msk                    (0x40UL)                  /*!< CS (Bitfield-Mask: 0x01)                              */
#define RTC_CTL_BPSHAD_Pos                (5UL)                     /*!< BPSHAD (Bit 5)                                        */
#define RTC_CTL_BPSHAD_Msk                (0x20UL)                  /*!< BPSHAD (Bitfield-Mask: 0x01)                          */
#define RTC_CTL_REFEN_Pos                 (4UL)                     /*!< REFEN (Bit 4)                                         */
#define RTC_CTL_REFEN_Msk                 (0x10UL)                  /*!< REFEN (Bitfield-Mask: 0x01)                           */
#define RTC_CTL_TSEG_Pos                  (3UL)                     /*!< TSEG (Bit 3)                                          */
#define RTC_CTL_TSEG_Msk                  (0x8UL)                   /*!< TSEG (Bitfield-Mask: 0x01)                            */
/* =========================================================  STAT  ========================================================== */
#define RTC_STAT_SCPF_Pos                 (16UL)                    /*!< SCPF (Bit 16)                                         */
#define RTC_STAT_SCPF_Msk                 (0x10000UL)               /*!< SCPF (Bitfield-Mask: 0x01)                            */
#define RTC_STAT_TP1F_Pos                 (14UL)                    /*!< TP1F (Bit 14)                                         */
#define RTC_STAT_TP1F_Msk                 (0x4000UL)                /*!< TP1F (Bitfield-Mask: 0x01)                            */
#define RTC_STAT_TP0F_Pos                 (13UL)                    /*!< TP0F (Bit 13)                                         */
#define RTC_STAT_TP0F_Msk                 (0x2000UL)                /*!< TP0F (Bitfield-Mask: 0x01)                            */
#define RTC_STAT_TSOVRF_Pos               (12UL)                    /*!< TSOVRF (Bit 12)                                       */
#define RTC_STAT_TSOVRF_Msk               (0x1000UL)                /*!< TSOVRF (Bitfield-Mask: 0x01)                          */
#define RTC_STAT_TSF_Pos                  (11UL)                    /*!< TSF (Bit 11)                                          */
#define RTC_STAT_TSF_Msk                  (0x800UL)                 /*!< TSF (Bitfield-Mask: 0x01)                             */
#define RTC_STAT_ALRM0F_Pos               (8UL)                     /*!< ALRM0F (Bit 8)                                        */
#define RTC_STAT_ALRM0F_Msk               (0x100UL)                 /*!< ALRM0F (Bitfield-Mask: 0x01)                          */
#define RTC_STAT_INITM_Pos                (7UL)                     /*!< INITM (Bit 7)                                         */
#define RTC_STAT_INITM_Msk                (0x80UL)                  /*!< INITM (Bitfield-Mask: 0x01)                           */
#define RTC_STAT_INITF_Pos                (6UL)                     /*!< INITF (Bit 6)                                         */
#define RTC_STAT_INITF_Msk                (0x40UL)                  /*!< INITF (Bitfield-Mask: 0x01)                           */
#define RTC_STAT_RSYNF_Pos                (5UL)                     /*!< RSYNF (Bit 5)                                         */
#define RTC_STAT_RSYNF_Msk                (0x20UL)                  /*!< RSYNF (Bitfield-Mask: 0x01)                           */
#define RTC_STAT_YCM_Pos                  (4UL)                     /*!< YCM (Bit 4)                                           */
#define RTC_STAT_YCM_Msk                  (0x10UL)                  /*!< YCM (Bitfield-Mask: 0x01)                             */
#define RTC_STAT_SOPF_Pos                 (3UL)                     /*!< SOPF (Bit 3)                                          */
#define RTC_STAT_SOPF_Msk                 (0x8UL)                   /*!< SOPF (Bitfield-Mask: 0x01)                            */
#define RTC_STAT_ALRM0WF_Pos              (0UL)                     /*!< ALRM0WF (Bit 0)                                       */
#define RTC_STAT_ALRM0WF_Msk              (0x1UL)                   /*!< ALRM0WF (Bitfield-Mask: 0x01)                         */
/* ==========================================================  PSC  ========================================================== */
#define RTC_PSC_FACTOR_A_Pos              (16UL)                    /*!< FACTOR_A (Bit 16)                                     */
#define RTC_PSC_FACTOR_A_Msk              (0x7f0000UL)              /*!< FACTOR_A (Bitfield-Mask: 0x7f)                        */
#define RTC_PSC_FACTOR_S_Pos              (0UL)                     /*!< FACTOR_S (Bit 0)                                      */
#define RTC_PSC_FACTOR_S_Msk              (0x7fffUL)                /*!< FACTOR_S (Bitfield-Mask: 0x7fff)                      */
/* ========================================================  ALRM0TD  ======================================================== */
#define RTC_ALRM0TD_MSKD_Pos              (31UL)                    /*!< MSKD (Bit 31)                                         */
#define RTC_ALRM0TD_MSKD_Msk              (0x80000000UL)            /*!< MSKD (Bitfield-Mask: 0x01)                            */
#define RTC_ALRM0TD_DOWS_Pos              (30UL)                    /*!< DOWS (Bit 30)                                         */
#define RTC_ALRM0TD_DOWS_Msk              (0x40000000UL)            /*!< DOWS (Bitfield-Mask: 0x01)                            */
#define RTC_ALRM0TD_DAYT_Pos              (28UL)                    /*!< DAYT (Bit 28)                                         */
#define RTC_ALRM0TD_DAYT_Msk              (0x30000000UL)            /*!< DAYT (Bitfield-Mask: 0x03)                            */
#define RTC_ALRM0TD_DAYU_Pos              (24UL)                    /*!< DAYU (Bit 24)                                         */
#define RTC_ALRM0TD_DAYU_Msk              (0xf000000UL)             /*!< DAYU (Bitfield-Mask: 0x0f)                            */
#define RTC_ALRM0TD_MSKH_Pos              (23UL)                    /*!< MSKH (Bit 23)                                         */
#define RTC_ALRM0TD_MSKH_Msk              (0x800000UL)              /*!< MSKH (Bitfield-Mask: 0x01)                            */
#define RTC_ALRM0TD_PM_Pos                (22UL)                    /*!< PM (Bit 22)                                           */
#define RTC_ALRM0TD_PM_Msk                (0x400000UL)              /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_ALRM0TD_HRT_Pos               (20UL)                    /*!< HRT (Bit 20)                                          */
#define RTC_ALRM0TD_HRT_Msk               (0x300000UL)              /*!< HRT (Bitfield-Mask: 0x03)                             */
#define RTC_ALRM0TD_HRU_Pos               (16UL)                    /*!< HRU (Bit 16)                                          */
#define RTC_ALRM0TD_HRU_Msk               (0xf0000UL)               /*!< HRU (Bitfield-Mask: 0x0f)                             */
#define RTC_ALRM0TD_MSKM_Pos              (15UL)                    /*!< MSKM (Bit 15)                                         */
#define RTC_ALRM0TD_MSKM_Msk              (0x8000UL)                /*!< MSKM (Bitfield-Mask: 0x01)                            */
#define RTC_ALRM0TD_MNT_Pos               (12UL)                    /*!< MNT (Bit 12)                                          */
#define RTC_ALRM0TD_MNT_Msk               (0x7000UL)                /*!< MNT (Bitfield-Mask: 0x07)                             */
#define RTC_ALRM0TD_MNU_Pos               (8UL)                     /*!< MNU (Bit 8)                                           */
#define RTC_ALRM0TD_MNU_Msk               (0xf00UL)                 /*!< MNU (Bitfield-Mask: 0x0f)                             */
#define RTC_ALRM0TD_MSKS_Pos              (7UL)                     /*!< MSKS (Bit 7)                                          */
#define RTC_ALRM0TD_MSKS_Msk              (0x80UL)                  /*!< MSKS (Bitfield-Mask: 0x01)                            */
#define RTC_ALRM0TD_SCT_Pos               (4UL)                     /*!< SCT (Bit 4)                                           */
#define RTC_ALRM0TD_SCT_Msk               (0x70UL)                  /*!< SCT (Bitfield-Mask: 0x07)                             */
#define RTC_ALRM0TD_SCU_Pos               (0UL)                     /*!< SCU (Bit 0)                                           */
#define RTC_ALRM0TD_SCU_Msk               (0xfUL)                   /*!< SCU (Bitfield-Mask: 0x0f)                             */
/* ==========================================================  WPK  ========================================================== */
#define RTC_WPK_WPK_Pos                   (0UL)                     /*!< WPK (Bit 0)                                           */
#define RTC_WPK_WPK_Msk                   (0xffUL)                  /*!< WPK (Bitfield-Mask: 0xff)                             */
/* ==========================================================  SS  =========================================================== */
#define RTC_SS_SSC_Pos                    (0UL)                     /*!< SSC (Bit 0)                                           */
#define RTC_SS_SSC_Msk                    (0xffffUL)                /*!< SSC (Bitfield-Mask: 0xffff)                           */
/* =======================================================  SHIFTCTL  ======================================================== */
#define RTC_SHIFTCTL_A1S_Pos              (31UL)                    /*!< A1S (Bit 31)                                          */
#define RTC_SHIFTCTL_A1S_Msk              (0x80000000UL)            /*!< A1S (Bitfield-Mask: 0x01)                             */
#define RTC_SHIFTCTL_SFS_Pos              (0UL)                     /*!< SFS (Bit 0)                                           */
#define RTC_SHIFTCTL_SFS_Msk              (0x7fffUL)                /*!< SFS (Bitfield-Mask: 0x7fff)                           */
/* ==========================================================  TTS  ========================================================== */
#define RTC_TTS_PM_Pos                    (22UL)                    /*!< PM (Bit 22)                                           */
#define RTC_TTS_PM_Msk                    (0x400000UL)              /*!< PM (Bitfield-Mask: 0x01)                              */
#define RTC_TTS_HRT_Pos                   (20UL)                    /*!< HRT (Bit 20)                                          */
#define RTC_TTS_HRT_Msk                   (0x300000UL)              /*!< HRT (Bitfield-Mask: 0x03)                             */
#define RTC_TTS_HRU_Pos                   (16UL)                    /*!< HRU (Bit 16)                                          */
#define RTC_TTS_HRU_Msk                   (0xf0000UL)               /*!< HRU (Bitfield-Mask: 0x0f)                             */
#define RTC_TTS_MNT_Pos                   (12UL)                    /*!< MNT (Bit 12)                                          */
#define RTC_TTS_MNT_Msk                   (0x7000UL)                /*!< MNT (Bitfield-Mask: 0x07)                             */
#define RTC_TTS_MNU_Pos                   (8UL)                     /*!< MNU (Bit 8)                                           */
#define RTC_TTS_MNU_Msk                   (0xf00UL)                 /*!< MNU (Bitfield-Mask: 0x0f)                             */
#define RTC_TTS_SCT_Pos                   (4UL)                     /*!< SCT (Bit 4)                                           */
#define RTC_TTS_SCT_Msk                   (0x70UL)                  /*!< SCT (Bitfield-Mask: 0x07)                             */
#define RTC_TTS_SCU_Pos                   (0UL)                     /*!< SCU (Bit 0)                                           */
#define RTC_TTS_SCU_Msk                   (0xfUL)                   /*!< SCU (Bitfield-Mask: 0x0f)                             */
/* ==========================================================  DTS  ========================================================== */
#define RTC_DTS_DOW_Pos                   (13UL)                    /*!< DOW (Bit 13)                                          */
#define RTC_DTS_DOW_Msk                   (0xe000UL)                /*!< DOW (Bitfield-Mask: 0x07)                             */
#define RTC_DTS_MONT_Pos                  (12UL)                    /*!< MONT (Bit 12)                                         */
#define RTC_DTS_MONT_Msk                  (0x1000UL)                /*!< MONT (Bitfield-Mask: 0x01)                            */
#define RTC_DTS_MONU_Pos                  (8UL)                     /*!< MONU (Bit 8)                                          */
#define RTC_DTS_MONU_Msk                  (0xf00UL)                 /*!< MONU (Bitfield-Mask: 0x0f)                            */
#define RTC_DTS_DAYT_Pos                  (5UL)                     /*!< DAYT (Bit 5)                                          */
#define RTC_DTS_DAYT_Msk                  (0x60UL)                  /*!< DAYT (Bitfield-Mask: 0x03)                            */
#define RTC_DTS_DAYU_Pos                  (0UL)                     /*!< DAYU (Bit 0)                                          */
#define RTC_DTS_DAYU_Msk                  (0x1fUL)                  /*!< DAYU (Bitfield-Mask: 0x1f)                            */
/* =========================================================  SSTS  ========================================================== */
#define RTC_SSTS_SSC_Pos                  (0UL)                     /*!< SSC (Bit 0)                                           */
#define RTC_SSTS_SSC_Msk                  (0xffffUL)                /*!< SSC (Bitfield-Mask: 0xffff)                           */
/* =========================================================  HRFC  ========================================================== */
#define RTC_HRFC_FREQI_Pos                (15UL)                    /*!< FREQI (Bit 15)                                        */
#define RTC_HRFC_FREQI_Msk                (0x8000UL)                /*!< FREQI (Bitfield-Mask: 0x01)                           */
#define RTC_HRFC_CWND8_Pos                (14UL)                    /*!< CWND8 (Bit 14)                                        */
#define RTC_HRFC_CWND8_Msk                (0x4000UL)                /*!< CWND8 (Bitfield-Mask: 0x01)                           */
#define RTC_HRFC_CWND16_Pos               (13UL)                    /*!< CWND16 (Bit 13)                                       */
#define RTC_HRFC_CWND16_Msk               (0x2000UL)                /*!< CWND16 (Bitfield-Mask: 0x01)                          */
#define RTC_HRFC_CMSK_Pos                 (0UL)                     /*!< CMSK (Bit 0)                                          */
#define RTC_HRFC_CMSK_Msk                 (0x1ffUL)                 /*!< CMSK (Bitfield-Mask: 0x1ff)                           */
/* =========================================================  TAMP  ========================================================== */
#define RTC_TAMP_PC15MDE_Pos              (23UL)                    /*!< PC15MDE (Bit 23)                                      */
#define RTC_TAMP_PC15MDE_Msk              (0x800000UL)              /*!< PC15MDE (Bitfield-Mask: 0x01)                         */
#define RTC_TAMP_PC15VAL_Pos              (22UL)                    /*!< PC15VAL (Bit 22)                                      */
#define RTC_TAMP_PC15VAL_Msk              (0x400000UL)              /*!< PC15VAL (Bitfield-Mask: 0x01)                         */
#define RTC_TAMP_PC14MDE_Pos              (21UL)                    /*!< PC14MDE (Bit 21)                                      */
#define RTC_TAMP_PC14MDE_Msk              (0x200000UL)              /*!< PC14MDE (Bitfield-Mask: 0x01)                         */
#define RTC_TAMP_PC14VAL_Pos              (20UL)                    /*!< PC14VAL (Bit 20)                                      */
#define RTC_TAMP_PC14VAL_Msk              (0x100000UL)              /*!< PC14VAL (Bitfield-Mask: 0x01)                         */
#define RTC_TAMP_PC13MDE_Pos              (19UL)                    /*!< PC13MDE (Bit 19)                                      */
#define RTC_TAMP_PC13MDE_Msk              (0x80000UL)               /*!< PC13MDE (Bitfield-Mask: 0x01)                         */
#define RTC_TAMP_PC13VAL_Pos              (18UL)                    /*!< PC13VAL (Bit 18)                                      */
#define RTC_TAMP_PC13VAL_Msk              (0x40000UL)               /*!< PC13VAL (Bitfield-Mask: 0x01)                         */
#define RTC_TAMP_DISPU_Pos                (15UL)                    /*!< DISPU (Bit 15)                                        */
#define RTC_TAMP_DISPU_Msk                (0x8000UL)                /*!< DISPU (Bitfield-Mask: 0x01)                           */
#define RTC_TAMP_PRCH_Pos                 (13UL)                    /*!< PRCH (Bit 13)                                         */
#define RTC_TAMP_PRCH_Msk                 (0x6000UL)                /*!< PRCH (Bitfield-Mask: 0x03)                            */
#define RTC_TAMP_FLT_Pos                  (11UL)                    /*!< FLT (Bit 11)                                          */
#define RTC_TAMP_FLT_Msk                  (0x1800UL)                /*!< FLT (Bitfield-Mask: 0x03)                             */
#define RTC_TAMP_FREQ_Pos                 (8UL)                     /*!< FREQ (Bit 8)                                          */
#define RTC_TAMP_FREQ_Msk                 (0x700UL)                 /*!< FREQ (Bitfield-Mask: 0x07)                            */
#define RTC_TAMP_TPTS_Pos                 (7UL)                     /*!< TPTS (Bit 7)                                          */
#define RTC_TAMP_TPTS_Msk                 (0x80UL)                  /*!< TPTS (Bitfield-Mask: 0x01)                            */
#define RTC_TAMP_TP1EG_Pos                (4UL)                     /*!< TP1EG (Bit 4)                                         */
#define RTC_TAMP_TP1EG_Msk                (0x10UL)                  /*!< TP1EG (Bitfield-Mask: 0x01)                           */
#define RTC_TAMP_TP1EN_Pos                (3UL)                     /*!< TP1EN (Bit 3)                                         */
#define RTC_TAMP_TP1EN_Msk                (0x8UL)                   /*!< TP1EN (Bitfield-Mask: 0x01)                           */
#define RTC_TAMP_TPIE_Pos                 (2UL)                     /*!< TPIE (Bit 2)                                          */
#define RTC_TAMP_TPIE_Msk                 (0x4UL)                   /*!< TPIE (Bitfield-Mask: 0x01)                            */
#define RTC_TAMP_TP0EG_Pos                (1UL)                     /*!< TP0EG (Bit 1)                                         */
#define RTC_TAMP_TP0EG_Msk                (0x2UL)                   /*!< TP0EG (Bitfield-Mask: 0x01)                           */
#define RTC_TAMP_TP0EN_Pos                (0UL)                     /*!< TP0EN (Bit 0)                                         */
#define RTC_TAMP_TP0EN_Msk                (0x1UL)                   /*!< TP0EN (Bitfield-Mask: 0x01)                           */
/* ========================================================  ALRM0SS  ======================================================== */
#define RTC_ALRM0SS_MSKSSC_Pos            (24UL)                    /*!< MSKSSC (Bit 24)                                       */
#define RTC_ALRM0SS_MSKSSC_Msk            (0xf000000UL)             /*!< MSKSSC (Bitfield-Mask: 0x0f)                          */
#define RTC_ALRM0SS_SSC_Pos               (0UL)                     /*!< SSC (Bit 0)                                           */
#define RTC_ALRM0SS_SSC_Msk               (0x7fffUL)                /*!< SSC (Bitfield-Mask: 0x7fff)                           */
/* =========================================================  BKP0  ========================================================== */
#define RTC_BKP0_DATA_Pos                 (0UL)                     /*!< DATA (Bit 0)                                          */
#define RTC_BKP0_DATA_Msk                 (0xffffffffUL)            /*!< DATA (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  BKP1  ========================================================== */
#define RTC_BKP1_DATA_Pos                 (0UL)                     /*!< DATA (Bit 0)                                          */
#define RTC_BKP1_DATA_Msk                 (0xffffffffUL)            /*!< DATA (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  BKP2  ========================================================== */
#define RTC_BKP2_DATA_Pos                 (0UL)                     /*!< DATA (Bit 0)                                          */
#define RTC_BKP2_DATA_Msk                 (0xffffffffUL)            /*!< DATA (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  BKP3  ========================================================== */
#define RTC_BKP3_DATA_Pos                 (0UL)                     /*!< DATA (Bit 0)                                          */
#define RTC_BKP3_DATA_Msk                 (0xffffffffUL)            /*!< DATA (Bitfield-Mask: 0xffffffff)                      */
/* =========================================================  BKP4  ========================================================== */
#define RTC_BKP4_DATA_Pos                 (0UL)                     /*!< DATA (Bit 0)                                          */
#define RTC_BKP4_DATA_Msk                 (0xffffffffUL)            /*!< DATA (Bitfield-Mask: 0xffffffff)                      */


/* =========================================================================================================================== */
/* ================                                           SPI0                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define SPI0_CTL0_BDEN_Pos                (15UL)                    /*!< BDEN (Bit 15)                                         */
#define SPI0_CTL0_BDEN_Msk                (0x8000UL)                /*!< BDEN (Bitfield-Mask: 0x01)                            */
#define SPI0_CTL0_BDOEN_Pos               (14UL)                    /*!< BDOEN (Bit 14)                                        */
#define SPI0_CTL0_BDOEN_Msk               (0x4000UL)                /*!< BDOEN (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL0_CRCEN_Pos               (13UL)                    /*!< CRCEN (Bit 13)                                        */
#define SPI0_CTL0_CRCEN_Msk               (0x2000UL)                /*!< CRCEN (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL0_CRCNT_Pos               (12UL)                    /*!< CRCNT (Bit 12)                                        */
#define SPI0_CTL0_CRCNT_Msk               (0x1000UL)                /*!< CRCNT (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL0_FF16_Pos                (11UL)                    /*!< FF16 (Bit 11)                                         */
#define SPI0_CTL0_FF16_Msk                (0x800UL)                 /*!< FF16 (Bitfield-Mask: 0x01)                            */
#define SPI0_CTL0_RO_Pos                  (10UL)                    /*!< RO (Bit 10)                                           */
#define SPI0_CTL0_RO_Msk                  (0x400UL)                 /*!< RO (Bitfield-Mask: 0x01)                              */
#define SPI0_CTL0_SWNSSEN_Pos             (9UL)                     /*!< SWNSSEN (Bit 9)                                       */
#define SPI0_CTL0_SWNSSEN_Msk             (0x200UL)                 /*!< SWNSSEN (Bitfield-Mask: 0x01)                         */
#define SPI0_CTL0_SWNSS_Pos               (8UL)                     /*!< SWNSS (Bit 8)                                         */
#define SPI0_CTL0_SWNSS_Msk               (0x100UL)                 /*!< SWNSS (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL0_LF_Pos                  (7UL)                     /*!< LF (Bit 7)                                            */
#define SPI0_CTL0_LF_Msk                  (0x80UL)                  /*!< LF (Bitfield-Mask: 0x01)                              */
#define SPI0_CTL0_SPIEN_Pos               (6UL)                     /*!< SPIEN (Bit 6)                                         */
#define SPI0_CTL0_SPIEN_Msk               (0x40UL)                  /*!< SPIEN (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL0_PSC_Pos                 (3UL)                     /*!< PSC (Bit 3)                                           */
#define SPI0_CTL0_PSC_Msk                 (0x38UL)                  /*!< PSC (Bitfield-Mask: 0x07)                             */
#define SPI0_CTL0_MSTMOD_Pos              (2UL)                     /*!< MSTMOD (Bit 2)                                        */
#define SPI0_CTL0_MSTMOD_Msk              (0x4UL)                   /*!< MSTMOD (Bitfield-Mask: 0x01)                          */
#define SPI0_CTL0_CKPL_Pos                (1UL)                     /*!< CKPL (Bit 1)                                          */
#define SPI0_CTL0_CKPL_Msk                (0x2UL)                   /*!< CKPL (Bitfield-Mask: 0x01)                            */
#define SPI0_CTL0_CKPH_Pos                (0UL)                     /*!< CKPH (Bit 0)                                          */
#define SPI0_CTL0_CKPH_Msk                (0x1UL)                   /*!< CKPH (Bitfield-Mask: 0x01)                            */
/* =========================================================  CTL1  ========================================================== */
#define SPI0_CTL1_TBEIE_Pos               (7UL)                     /*!< TBEIE (Bit 7)                                         */
#define SPI0_CTL1_TBEIE_Msk               (0x80UL)                  /*!< TBEIE (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL1_RBNEIE_Pos              (6UL)                     /*!< RBNEIE (Bit 6)                                        */
#define SPI0_CTL1_RBNEIE_Msk              (0x40UL)                  /*!< RBNEIE (Bitfield-Mask: 0x01)                          */
#define SPI0_CTL1_ERRIE_Pos               (5UL)                     /*!< ERRIE (Bit 5)                                         */
#define SPI0_CTL1_ERRIE_Msk               (0x20UL)                  /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define SPI0_CTL1_TMOD_Pos                (4UL)                     /*!< TMOD (Bit 4)                                          */
#define SPI0_CTL1_TMOD_Msk                (0x10UL)                  /*!< TMOD (Bitfield-Mask: 0x01)                            */
#define SPI0_CTL1_NSSP_Pos                (3UL)                     /*!< NSSP (Bit 3)                                          */
#define SPI0_CTL1_NSSP_Msk                (0x8UL)                   /*!< NSSP (Bitfield-Mask: 0x01)                            */
#define SPI0_CTL1_NSSDRV_Pos              (2UL)                     /*!< NSSDRV (Bit 2)                                        */
#define SPI0_CTL1_NSSDRV_Msk              (0x4UL)                   /*!< NSSDRV (Bitfield-Mask: 0x01)                          */
#define SPI0_CTL1_DMATEN_Pos              (1UL)                     /*!< DMATEN (Bit 1)                                        */
#define SPI0_CTL1_DMATEN_Msk              (0x2UL)                   /*!< DMATEN (Bitfield-Mask: 0x01)                          */
#define SPI0_CTL1_DMAREN_Pos              (0UL)                     /*!< DMAREN (Bit 0)                                        */
#define SPI0_CTL1_DMAREN_Msk              (0x1UL)                   /*!< DMAREN (Bitfield-Mask: 0x01)                          */
/* =========================================================  STAT  ========================================================== */
#define SPI0_STAT_FERR_Pos                (8UL)                     /*!< FERR (Bit 8)                                          */
#define SPI0_STAT_FERR_Msk                (0x100UL)                 /*!< FERR (Bitfield-Mask: 0x01)                            */
#define SPI0_STAT_TRANS_Pos               (7UL)                     /*!< TRANS (Bit 7)                                         */
#define SPI0_STAT_TRANS_Msk               (0x80UL)                  /*!< TRANS (Bitfield-Mask: 0x01)                           */
#define SPI0_STAT_RXORERR_Pos             (6UL)                     /*!< RXORERR (Bit 6)                                       */
#define SPI0_STAT_RXORERR_Msk             (0x40UL)                  /*!< RXORERR (Bitfield-Mask: 0x01)                         */
#define SPI0_STAT_CONFERR_Pos             (5UL)                     /*!< CONFERR (Bit 5)                                       */
#define SPI0_STAT_CONFERR_Msk             (0x20UL)                  /*!< CONFERR (Bitfield-Mask: 0x01)                         */
#define SPI0_STAT_CRCERR_Pos              (4UL)                     /*!< CRCERR (Bit 4)                                        */
#define SPI0_STAT_CRCERR_Msk              (0x10UL)                  /*!< CRCERR (Bitfield-Mask: 0x01)                          */
#define SPI0_STAT_TXURERR_Pos             (3UL)                     /*!< TXURERR (Bit 3)                                       */
#define SPI0_STAT_TXURERR_Msk             (0x8UL)                   /*!< TXURERR (Bitfield-Mask: 0x01)                         */
#define SPI0_STAT_I2SCH_Pos               (2UL)                     /*!< I2SCH (Bit 2)                                         */
#define SPI0_STAT_I2SCH_Msk               (0x4UL)                   /*!< I2SCH (Bitfield-Mask: 0x01)                           */
#define SPI0_STAT_TBE_Pos                 (1UL)                     /*!< TBE (Bit 1)                                           */
#define SPI0_STAT_TBE_Msk                 (0x2UL)                   /*!< TBE (Bitfield-Mask: 0x01)                             */
#define SPI0_STAT_RBNE_Pos                (0UL)                     /*!< RBNE (Bit 0)                                          */
#define SPI0_STAT_RBNE_Msk                (0x1UL)                   /*!< RBNE (Bitfield-Mask: 0x01)                            */
/* =========================================================  DATA  ========================================================== */
#define SPI0_DATA_DATA_Pos                (0UL)                     /*!< DATA (Bit 0)                                          */
#define SPI0_DATA_DATA_Msk                (0xffffUL)                /*!< DATA (Bitfield-Mask: 0xffff)                          */
/* ========================================================  CPCPOLY  ======================================================== */
#define SPI0_CPCPOLY_CRCPOLY_Pos          (0UL)                     /*!< CRCPOLY (Bit 0)                                       */
#define SPI0_CPCPOLY_CRCPOLY_Msk          (0xffffUL)                /*!< CRCPOLY (Bitfield-Mask: 0xffff)                       */
/* =========================================================  RCRC  ========================================================== */
#define SPI0_RCRC_RCRC_Pos                (0UL)                     /*!< RCRC (Bit 0)                                          */
#define SPI0_RCRC_RCRC_Msk                (0xffffUL)                /*!< RCRC (Bitfield-Mask: 0xffff)                          */
/* =========================================================  TCRC  ========================================================== */
#define SPI0_TCRC_TCRC_Pos                (0UL)                     /*!< TCRC (Bit 0)                                          */
#define SPI0_TCRC_TCRC_Msk                (0xffffUL)                /*!< TCRC (Bitfield-Mask: 0xffff)                          */
/* ========================================================  I2SCTL  ========================================================= */
#define SPI0_I2SCTL_I2SSEL_Pos            (11UL)                    /*!< I2SSEL (Bit 11)                                       */
#define SPI0_I2SCTL_I2SSEL_Msk            (0x800UL)                 /*!< I2SSEL (Bitfield-Mask: 0x01)                          */
#define SPI0_I2SCTL_I2SEN_Pos             (10UL)                    /*!< I2SEN (Bit 10)                                        */
#define SPI0_I2SCTL_I2SEN_Msk             (0x400UL)                 /*!< I2SEN (Bitfield-Mask: 0x01)                           */
#define SPI0_I2SCTL_I2SOPMOD_Pos          (8UL)                     /*!< I2SOPMOD (Bit 8)                                      */
#define SPI0_I2SCTL_I2SOPMOD_Msk          (0x300UL)                 /*!< I2SOPMOD (Bitfield-Mask: 0x03)                        */
#define SPI0_I2SCTL_PCMSMOD_Pos           (7UL)                     /*!< PCMSMOD (Bit 7)                                       */
#define SPI0_I2SCTL_PCMSMOD_Msk           (0x80UL)                  /*!< PCMSMOD (Bitfield-Mask: 0x01)                         */
#define SPI0_I2SCTL_I2SSTD_Pos            (4UL)                     /*!< I2SSTD (Bit 4)                                        */
#define SPI0_I2SCTL_I2SSTD_Msk            (0x30UL)                  /*!< I2SSTD (Bitfield-Mask: 0x03)                          */
#define SPI0_I2SCTL_CKPL_Pos              (3UL)                     /*!< CKPL (Bit 3)                                          */
#define SPI0_I2SCTL_CKPL_Msk              (0x8UL)                   /*!< CKPL (Bitfield-Mask: 0x01)                            */
#define SPI0_I2SCTL_DTLEN_Pos             (1UL)                     /*!< DTLEN (Bit 1)                                         */
#define SPI0_I2SCTL_DTLEN_Msk             (0x6UL)                   /*!< DTLEN (Bitfield-Mask: 0x03)                           */
#define SPI0_I2SCTL_CHLEN_Pos             (0UL)                     /*!< CHLEN (Bit 0)                                         */
#define SPI0_I2SCTL_CHLEN_Msk             (0x1UL)                   /*!< CHLEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  I2SPSC  ========================================================= */
#define SPI0_I2SPSC_MCKOEN_Pos            (9UL)                     /*!< MCKOEN (Bit 9)                                        */
#define SPI0_I2SPSC_MCKOEN_Msk            (0x200UL)                 /*!< MCKOEN (Bitfield-Mask: 0x01)                          */
#define SPI0_I2SPSC_OF_Pos                (8UL)                     /*!< OF (Bit 8)                                            */
#define SPI0_I2SPSC_OF_Msk                (0x100UL)                 /*!< OF (Bitfield-Mask: 0x01)                              */
#define SPI0_I2SPSC_DIV_Pos               (0UL)                     /*!< DIV (Bit 0)                                           */
#define SPI0_I2SPSC_DIV_Msk               (0xffUL)                  /*!< DIV (Bitfield-Mask: 0xff)                             */


/* =========================================================================================================================== */
/* ================                                           SPI1                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define SPI1_CTL0_BDEN_Pos                (15UL)                    /*!< BDEN (Bit 15)                                         */
#define SPI1_CTL0_BDEN_Msk                (0x8000UL)                /*!< BDEN (Bitfield-Mask: 0x01)                            */
#define SPI1_CTL0_BDOEN_Pos               (14UL)                    /*!< BDOEN (Bit 14)                                        */
#define SPI1_CTL0_BDOEN_Msk               (0x4000UL)                /*!< BDOEN (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL0_CRCEN_Pos               (13UL)                    /*!< CRCEN (Bit 13)                                        */
#define SPI1_CTL0_CRCEN_Msk               (0x2000UL)                /*!< CRCEN (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL0_CRCNT_Pos               (12UL)                    /*!< CRCNT (Bit 12)                                        */
#define SPI1_CTL0_CRCNT_Msk               (0x1000UL)                /*!< CRCNT (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL0_CRCL_Pos                (11UL)                    /*!< CRCL (Bit 11)                                         */
#define SPI1_CTL0_CRCL_Msk                (0x800UL)                 /*!< CRCL (Bitfield-Mask: 0x01)                            */
#define SPI1_CTL0_RO_Pos                  (10UL)                    /*!< RO (Bit 10)                                           */
#define SPI1_CTL0_RO_Msk                  (0x400UL)                 /*!< RO (Bitfield-Mask: 0x01)                              */
#define SPI1_CTL0_SWNSSEN_Pos             (9UL)                     /*!< SWNSSEN (Bit 9)                                       */
#define SPI1_CTL0_SWNSSEN_Msk             (0x200UL)                 /*!< SWNSSEN (Bitfield-Mask: 0x01)                         */
#define SPI1_CTL0_SWNSS_Pos               (8UL)                     /*!< SWNSS (Bit 8)                                         */
#define SPI1_CTL0_SWNSS_Msk               (0x100UL)                 /*!< SWNSS (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL0_LF_Pos                  (7UL)                     /*!< LF (Bit 7)                                            */
#define SPI1_CTL0_LF_Msk                  (0x80UL)                  /*!< LF (Bitfield-Mask: 0x01)                              */
#define SPI1_CTL0_SPIEN_Pos               (6UL)                     /*!< SPIEN (Bit 6)                                         */
#define SPI1_CTL0_SPIEN_Msk               (0x40UL)                  /*!< SPIEN (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL0_PSC_Pos                 (3UL)                     /*!< PSC (Bit 3)                                           */
#define SPI1_CTL0_PSC_Msk                 (0x38UL)                  /*!< PSC (Bitfield-Mask: 0x07)                             */
#define SPI1_CTL0_MSTMOD_Pos              (2UL)                     /*!< MSTMOD (Bit 2)                                        */
#define SPI1_CTL0_MSTMOD_Msk              (0x4UL)                   /*!< MSTMOD (Bitfield-Mask: 0x01)                          */
#define SPI1_CTL0_CKPL_Pos                (1UL)                     /*!< CKPL (Bit 1)                                          */
#define SPI1_CTL0_CKPL_Msk                (0x2UL)                   /*!< CKPL (Bitfield-Mask: 0x01)                            */
#define SPI1_CTL0_CKPH_Pos                (0UL)                     /*!< CKPH (Bit 0)                                          */
#define SPI1_CTL0_CKPH_Msk                (0x1UL)                   /*!< CKPH (Bitfield-Mask: 0x01)                            */
/* =========================================================  CTL1  ========================================================== */
#define SPI1_CTL1_TXDMA_ODD_Pos           (14UL)                    /*!< TXDMA_ODD (Bit 14)                                    */
#define SPI1_CTL1_TXDMA_ODD_Msk           (0x4000UL)                /*!< TXDMA_ODD (Bitfield-Mask: 0x01)                       */
#define SPI1_CTL1_RXDMA_ODD_Pos           (13UL)                    /*!< RXDMA_ODD (Bit 13)                                    */
#define SPI1_CTL1_RXDMA_ODD_Msk           (0x2000UL)                /*!< RXDMA_ODD (Bitfield-Mask: 0x01)                       */
#define SPI1_CTL1_BYTEN_Pos               (12UL)                    /*!< BYTEN (Bit 12)                                        */
#define SPI1_CTL1_BYTEN_Msk               (0x1000UL)                /*!< BYTEN (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL1_DZ_Pos                  (8UL)                     /*!< DZ (Bit 8)                                            */
#define SPI1_CTL1_DZ_Msk                  (0xf00UL)                 /*!< DZ (Bitfield-Mask: 0x0f)                              */
#define SPI1_CTL1_TBEIE_Pos               (7UL)                     /*!< TBEIE (Bit 7)                                         */
#define SPI1_CTL1_TBEIE_Msk               (0x80UL)                  /*!< TBEIE (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL1_RBNEIE_Pos              (6UL)                     /*!< RBNEIE (Bit 6)                                        */
#define SPI1_CTL1_RBNEIE_Msk              (0x40UL)                  /*!< RBNEIE (Bitfield-Mask: 0x01)                          */
#define SPI1_CTL1_ERRIE_Pos               (5UL)                     /*!< ERRIE (Bit 5)                                         */
#define SPI1_CTL1_ERRIE_Msk               (0x20UL)                  /*!< ERRIE (Bitfield-Mask: 0x01)                           */
#define SPI1_CTL1_TMOD_Pos                (4UL)                     /*!< TMOD (Bit 4)                                          */
#define SPI1_CTL1_TMOD_Msk                (0x10UL)                  /*!< TMOD (Bitfield-Mask: 0x01)                            */
#define SPI1_CTL1_NSSP_Pos                (3UL)                     /*!< NSSP (Bit 3)                                          */
#define SPI1_CTL1_NSSP_Msk                (0x8UL)                   /*!< NSSP (Bitfield-Mask: 0x01)                            */
#define SPI1_CTL1_NSSDRV_Pos              (2UL)                     /*!< NSSDRV (Bit 2)                                        */
#define SPI1_CTL1_NSSDRV_Msk              (0x4UL)                   /*!< NSSDRV (Bitfield-Mask: 0x01)                          */
#define SPI1_CTL1_DMATEN_Pos              (1UL)                     /*!< DMATEN (Bit 1)                                        */
#define SPI1_CTL1_DMATEN_Msk              (0x2UL)                   /*!< DMATEN (Bitfield-Mask: 0x01)                          */
#define SPI1_CTL1_DMAREN_Pos              (0UL)                     /*!< DMAREN (Bit 0)                                        */
#define SPI1_CTL1_DMAREN_Msk              (0x1UL)                   /*!< DMAREN (Bitfield-Mask: 0x01)                          */
/* =========================================================  STAT  ========================================================== */
#define SPI1_STAT_TXLVL_Pos               (11UL)                    /*!< TXLVL (Bit 11)                                        */
#define SPI1_STAT_TXLVL_Msk               (0x1800UL)                /*!< TXLVL (Bitfield-Mask: 0x03)                           */
#define SPI1_STAT_RXLVL_Pos               (9UL)                     /*!< RXLVL (Bit 9)                                         */
#define SPI1_STAT_RXLVL_Msk               (0x600UL)                 /*!< RXLVL (Bitfield-Mask: 0x03)                           */
#define SPI1_STAT_FERR_Pos                (8UL)                     /*!< FERR (Bit 8)                                          */
#define SPI1_STAT_FERR_Msk                (0x100UL)                 /*!< FERR (Bitfield-Mask: 0x01)                            */
#define SPI1_STAT_TRANS_Pos               (7UL)                     /*!< TRANS (Bit 7)                                         */
#define SPI1_STAT_TRANS_Msk               (0x80UL)                  /*!< TRANS (Bitfield-Mask: 0x01)                           */
#define SPI1_STAT_RXORERR_Pos             (6UL)                     /*!< RXORERR (Bit 6)                                       */
#define SPI1_STAT_RXORERR_Msk             (0x40UL)                  /*!< RXORERR (Bitfield-Mask: 0x01)                         */
#define SPI1_STAT_CONFERR_Pos             (5UL)                     /*!< CONFERR (Bit 5)                                       */
#define SPI1_STAT_CONFERR_Msk             (0x20UL)                  /*!< CONFERR (Bitfield-Mask: 0x01)                         */
#define SPI1_STAT_CRCERR_Pos              (4UL)                     /*!< CRCERR (Bit 4)                                        */
#define SPI1_STAT_CRCERR_Msk              (0x10UL)                  /*!< CRCERR (Bitfield-Mask: 0x01)                          */
#define SPI1_STAT_TBE_Pos                 (1UL)                     /*!< TBE (Bit 1)                                           */
#define SPI1_STAT_TBE_Msk                 (0x2UL)                   /*!< TBE (Bitfield-Mask: 0x01)                             */
#define SPI1_STAT_RBNE_Pos                (0UL)                     /*!< RBNE (Bit 0)                                          */
#define SPI1_STAT_RBNE_Msk                (0x1UL)                   /*!< RBNE (Bitfield-Mask: 0x01)                            */
/* =========================================================  DATA  ========================================================== */
#define SPI1_DATA_DATA_Pos                (0UL)                     /*!< DATA (Bit 0)                                          */
#define SPI1_DATA_DATA_Msk                (0xffffUL)                /*!< DATA (Bitfield-Mask: 0xffff)                          */
/* ========================================================  CPCPOLY  ======================================================== */
#define SPI1_CPCPOLY_CRCPOLY_Pos          (0UL)                     /*!< CRCPOLY (Bit 0)                                       */
#define SPI1_CPCPOLY_CRCPOLY_Msk          (0xffffUL)                /*!< CRCPOLY (Bitfield-Mask: 0xffff)                       */
/* =========================================================  RCRC  ========================================================== */
#define SPI1_RCRC_RCRC_Pos                (0UL)                     /*!< RCRC (Bit 0)                                          */
#define SPI1_RCRC_RCRC_Msk                (0xffffUL)                /*!< RCRC (Bitfield-Mask: 0xffff)                          */
/* =========================================================  TCRC  ========================================================== */
#define SPI1_TCRC_TCRC_Pos                (0UL)                     /*!< TCRC (Bit 0)                                          */
#define SPI1_TCRC_TCRC_Msk                (0xffffUL)                /*!< TCRC (Bitfield-Mask: 0xffff)                          */
/* ========================================================  I2SCTL  ========================================================= */
#define SPI1_I2SCTL_I2SSEL_Pos            (11UL)                    /*!< I2SSEL (Bit 11)                                       */
#define SPI1_I2SCTL_I2SSEL_Msk            (0x800UL)                 /*!< I2SSEL (Bitfield-Mask: 0x01)                          */
#define SPI1_I2SCTL_I2SEN_Pos             (10UL)                    /*!< I2SEN (Bit 10)                                        */
#define SPI1_I2SCTL_I2SEN_Msk             (0x400UL)                 /*!< I2SEN (Bitfield-Mask: 0x01)                           */
#define SPI1_I2SCTL_I2SOPMOD_Pos          (8UL)                     /*!< I2SOPMOD (Bit 8)                                      */
#define SPI1_I2SCTL_I2SOPMOD_Msk          (0x300UL)                 /*!< I2SOPMOD (Bitfield-Mask: 0x03)                        */
#define SPI1_I2SCTL_PCMSMOD_Pos           (7UL)                     /*!< PCMSMOD (Bit 7)                                       */
#define SPI1_I2SCTL_PCMSMOD_Msk           (0x80UL)                  /*!< PCMSMOD (Bitfield-Mask: 0x01)                         */
#define SPI1_I2SCTL_I2SSTD_Pos            (4UL)                     /*!< I2SSTD (Bit 4)                                        */
#define SPI1_I2SCTL_I2SSTD_Msk            (0x30UL)                  /*!< I2SSTD (Bitfield-Mask: 0x03)                          */
#define SPI1_I2SCTL_CKPL_Pos              (3UL)                     /*!< CKPL (Bit 3)                                          */
#define SPI1_I2SCTL_CKPL_Msk              (0x8UL)                   /*!< CKPL (Bitfield-Mask: 0x01)                            */
#define SPI1_I2SCTL_DTLEN_Pos             (1UL)                     /*!< DTLEN (Bit 1)                                         */
#define SPI1_I2SCTL_DTLEN_Msk             (0x6UL)                   /*!< DTLEN (Bitfield-Mask: 0x03)                           */
#define SPI1_I2SCTL_CHLEN_Pos             (0UL)                     /*!< CHLEN (Bit 0)                                         */
#define SPI1_I2SCTL_CHLEN_Msk             (0x1UL)                   /*!< CHLEN (Bitfield-Mask: 0x01)                           */
/* ========================================================  I2SPSC  ========================================================= */
#define SPI1_I2SPSC_MCKOEN_Pos            (9UL)                     /*!< MCKOEN (Bit 9)                                        */
#define SPI1_I2SPSC_MCKOEN_Msk            (0x200UL)                 /*!< MCKOEN (Bitfield-Mask: 0x01)                          */
#define SPI1_I2SPSC_OF_Pos                (8UL)                     /*!< OF (Bit 8)                                            */
#define SPI1_I2SPSC_OF_Msk                (0x100UL)                 /*!< OF (Bitfield-Mask: 0x01)                              */
#define SPI1_I2SPSC_DIV_Pos               (0UL)                     /*!< DIV (Bit 0)                                           */
#define SPI1_I2SPSC_DIV_Msk               (0xffUL)                  /*!< DIV (Bitfield-Mask: 0xff)                             */
/* =========================================================  QCTL  ========================================================== */
#define SPI1_QCTL_IO23_DRV_Pos            (2UL)                     /*!< IO23_DRV (Bit 2)                                      */
#define SPI1_QCTL_IO23_DRV_Msk            (0x4UL)                   /*!< IO23_DRV (Bitfield-Mask: 0x01)                        */
#define SPI1_QCTL_QRD_Pos                 (1UL)                     /*!< QRD (Bit 1)                                           */
#define SPI1_QCTL_QRD_Msk                 (0x2UL)                   /*!< QRD (Bitfield-Mask: 0x01)                             */
#define SPI1_QCTL_QMOD_Pos                (0UL)                     /*!< QMOD (Bit 0)                                          */
#define SPI1_QCTL_QMOD_Msk                (0x1UL)                   /*!< QMOD (Bitfield-Mask: 0x01)                            */


/* =========================================================================================================================== */
/* ================                                          SYSCFG                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CFG0  ========================================================== */
#define SYSCFG_CFG0_PB9_HCCE_Pos          (19UL)                    /*!< PB9_HCCE (Bit 19)                                     */
#define SYSCFG_CFG0_PB9_HCCE_Msk          (0x80000UL)               /*!< PB9_HCCE (Bitfield-Mask: 0x01)                        */
#define SYSCFG_CFG0_TIMER16_DMA_RMP_Pos   (12UL)                    /*!< TIMER16_DMA_RMP (Bit 12)                              */
#define SYSCFG_CFG0_TIMER16_DMA_RMP_Msk   (0x1000UL)                /*!< TIMER16_DMA_RMP (Bitfield-Mask: 0x01)                 */
#define SYSCFG_CFG0_TIMER15_DMA_RMP_Pos   (11UL)                    /*!< TIMER15_DMA_RMP (Bit 11)                              */
#define SYSCFG_CFG0_TIMER15_DMA_RMP_Msk   (0x800UL)                 /*!< TIMER15_DMA_RMP (Bitfield-Mask: 0x01)                 */
#define SYSCFG_CFG0_USART0_RX_DMA_RMP_Pos (10UL)                    /*!< USART0_RX_DMA_RMP (Bit 10)                            */
#define SYSCFG_CFG0_USART0_RX_DMA_RMP_Msk (0x400UL)                 /*!< USART0_RX_DMA_RMP (Bitfield-Mask: 0x01)               */
#define SYSCFG_CFG0_USART0_TX_DMA_RMP_Pos (9UL)                     /*!< USART0_TX_DMA_RMP (Bit 9)                             */
#define SYSCFG_CFG0_USART0_TX_DMA_RMP_Msk (0x200UL)                 /*!< USART0_TX_DMA_RMP (Bitfield-Mask: 0x01)               */
#define SYSCFG_CFG0_ADC_DMA_RMP_Pos       (8UL)                     /*!< ADC_DMA_RMP (Bit 8)                                   */
#define SYSCFG_CFG0_ADC_DMA_RMP_Msk       (0x100UL)                 /*!< ADC_DMA_RMP (Bitfield-Mask: 0x01)                     */
#define SYSCFG_CFG0_PA11_PA12_RMP_Pos     (4UL)                     /*!< PA11_PA12_RMP (Bit 4)                                 */
#define SYSCFG_CFG0_PA11_PA12_RMP_Msk     (0x10UL)                  /*!< PA11_PA12_RMP (Bitfield-Mask: 0x01)                   */
#define SYSCFG_CFG0_BOOT_MODE_Pos         (0UL)                     /*!< BOOT_MODE (Bit 0)                                     */
#define SYSCFG_CFG0_BOOT_MODE_Msk         (0x3UL)                   /*!< BOOT_MODE (Bitfield-Mask: 0x03)                       */
/* ========================================================  EXTISS0  ======================================================== */
#define SYSCFG_EXTISS0_EXTI3_SS_Pos       (12UL)                    /*!< EXTI3_SS (Bit 12)                                     */
#define SYSCFG_EXTISS0_EXTI3_SS_Msk       (0xf000UL)                /*!< EXTI3_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS0_EXTI2_SS_Pos       (8UL)                     /*!< EXTI2_SS (Bit 8)                                      */
#define SYSCFG_EXTISS0_EXTI2_SS_Msk       (0xf00UL)                 /*!< EXTI2_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS0_EXTI1_SS_Pos       (4UL)                     /*!< EXTI1_SS (Bit 4)                                      */
#define SYSCFG_EXTISS0_EXTI1_SS_Msk       (0xf0UL)                  /*!< EXTI1_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS0_EXTI0_SS_Pos       (0UL)                     /*!< EXTI0_SS (Bit 0)                                      */
#define SYSCFG_EXTISS0_EXTI0_SS_Msk       (0xfUL)                   /*!< EXTI0_SS (Bitfield-Mask: 0x0f)                        */
/* ========================================================  EXTISS1  ======================================================== */
#define SYSCFG_EXTISS1_EXTI7_SS_Pos       (12UL)                    /*!< EXTI7_SS (Bit 12)                                     */
#define SYSCFG_EXTISS1_EXTI7_SS_Msk       (0xf000UL)                /*!< EXTI7_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS1_EXTI6_SS_Pos       (8UL)                     /*!< EXTI6_SS (Bit 8)                                      */
#define SYSCFG_EXTISS1_EXTI6_SS_Msk       (0xf00UL)                 /*!< EXTI6_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS1_EXTI5_SS_Pos       (4UL)                     /*!< EXTI5_SS (Bit 4)                                      */
#define SYSCFG_EXTISS1_EXTI5_SS_Msk       (0xf0UL)                  /*!< EXTI5_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS1_EXTI4_SS_Pos       (0UL)                     /*!< EXTI4_SS (Bit 0)                                      */
#define SYSCFG_EXTISS1_EXTI4_SS_Msk       (0xfUL)                   /*!< EXTI4_SS (Bitfield-Mask: 0x0f)                        */
/* ========================================================  EXTISS2  ======================================================== */
#define SYSCFG_EXTISS2_EXTI11_SS_Pos      (12UL)                    /*!< EXTI11_SS (Bit 12)                                    */
#define SYSCFG_EXTISS2_EXTI11_SS_Msk      (0xf000UL)                /*!< EXTI11_SS (Bitfield-Mask: 0x0f)                       */
#define SYSCFG_EXTISS2_EXTI10_SS_Pos      (8UL)                     /*!< EXTI10_SS (Bit 8)                                     */
#define SYSCFG_EXTISS2_EXTI10_SS_Msk      (0xf00UL)                 /*!< EXTI10_SS (Bitfield-Mask: 0x0f)                       */
#define SYSCFG_EXTISS2_EXTI9_SS_Pos       (4UL)                     /*!< EXTI9_SS (Bit 4)                                      */
#define SYSCFG_EXTISS2_EXTI9_SS_Msk       (0xf0UL)                  /*!< EXTI9_SS (Bitfield-Mask: 0x0f)                        */
#define SYSCFG_EXTISS2_EXTI8_SS_Pos       (0UL)                     /*!< EXTI8_SS (Bit 0)                                      */
#define SYSCFG_EXTISS2_EXTI8_SS_Msk       (0xfUL)                   /*!< EXTI8_SS (Bitfield-Mask: 0x0f)                        */
/* ========================================================  EXTISS3  ======================================================== */
#define SYSCFG_EXTISS3_EXTI15_SS_Pos      (12UL)                    /*!< EXTI15_SS (Bit 12)                                    */
#define SYSCFG_EXTISS3_EXTI15_SS_Msk      (0xf000UL)                /*!< EXTI15_SS (Bitfield-Mask: 0x0f)                       */
#define SYSCFG_EXTISS3_EXTI14_SS_Pos      (8UL)                     /*!< EXTI14_SS (Bit 8)                                     */
#define SYSCFG_EXTISS3_EXTI14_SS_Msk      (0xf00UL)                 /*!< EXTI14_SS (Bitfield-Mask: 0x0f)                       */
#define SYSCFG_EXTISS3_EXTI13_SS_Pos      (4UL)                     /*!< EXTI13_SS (Bit 4)                                     */
#define SYSCFG_EXTISS3_EXTI13_SS_Msk      (0xf0UL)                  /*!< EXTI13_SS (Bitfield-Mask: 0x0f)                       */
#define SYSCFG_EXTISS3_EXTI12_SS_Pos      (0UL)                     /*!< EXTI12_SS (Bit 0)                                     */
#define SYSCFG_EXTISS3_EXTI12_SS_Msk      (0xfUL)                   /*!< EXTI12_SS (Bitfield-Mask: 0x0f)                       */
/* =========================================================  CFG2  ========================================================== */
#define SYSCFG_CFG2_SRAM_PCEF_Pos         (8UL)                     /*!< SRAM_PCEF (Bit 8)                                     */
#define SYSCFG_CFG2_SRAM_PCEF_Msk         (0x100UL)                 /*!< SRAM_PCEF (Bitfield-Mask: 0x01)                       */
#define SYSCFG_CFG2_LVD_LOCK_Pos          (2UL)                     /*!< LVD_LOCK (Bit 2)                                      */
#define SYSCFG_CFG2_LVD_LOCK_Msk          (0x4UL)                   /*!< LVD_LOCK (Bitfield-Mask: 0x01)                        */
#define SYSCFG_CFG2_SRAM_PARITY_ERROR_LOCK_Pos (1UL)                /*!< SRAM_PARITY_ERROR_LOCK (Bit 1)                        */
#define SYSCFG_CFG2_SRAM_PARITY_ERROR_LOCK_Msk (0x2UL)              /*!< SRAM_PARITY_ERROR_LOCK (Bitfield-Mask: 0x01)          */
#define SYSCFG_CFG2_LOCKUP_LOCK_Pos       (0UL)                     /*!< LOCKUP_LOCK (Bit 0)                                   */
#define SYSCFG_CFG2_LOCKUP_LOCK_Msk       (0x1UL)                   /*!< LOCKUP_LOCK (Bitfield-Mask: 0x01)                     */
/* ======================================================  CPU_IRQ_LAT  ====================================================== */
#define SYSCFG_CPU_IRQ_LAT_IRQ_LATENCY_Pos (0UL)                    /*!< IRQ_LATENCY (Bit 0)                                   */
#define SYSCFG_CPU_IRQ_LAT_IRQ_LATENCY_Msk (0xffUL)                 /*!< IRQ_LATENCY (Bitfield-Mask: 0xff)                     */


/* =========================================================================================================================== */
/* ================                                          TIMER0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define TIMER0_CTL0_CKDIV_Pos             (8UL)                     /*!< CKDIV (Bit 8)                                         */
#define TIMER0_CTL0_CKDIV_Msk             (0x300UL)                 /*!< CKDIV (Bitfield-Mask: 0x03)                           */
#define TIMER0_CTL0_ARSE_Pos              (7UL)                     /*!< ARSE (Bit 7)                                          */
#define TIMER0_CTL0_ARSE_Msk              (0x80UL)                  /*!< ARSE (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL0_CAM_Pos               (5UL)                     /*!< CAM (Bit 5)                                           */
#define TIMER0_CTL0_CAM_Msk               (0x60UL)                  /*!< CAM (Bitfield-Mask: 0x03)                             */
#define TIMER0_CTL0_DIR_Pos               (4UL)                     /*!< DIR (Bit 4)                                           */
#define TIMER0_CTL0_DIR_Msk               (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define TIMER0_CTL0_SPM_Pos               (3UL)                     /*!< SPM (Bit 3)                                           */
#define TIMER0_CTL0_SPM_Msk               (0x8UL)                   /*!< SPM (Bitfield-Mask: 0x01)                             */
#define TIMER0_CTL0_UPS_Pos               (2UL)                     /*!< UPS (Bit 2)                                           */
#define TIMER0_CTL0_UPS_Msk               (0x4UL)                   /*!< UPS (Bitfield-Mask: 0x01)                             */
#define TIMER0_CTL0_UPDIS_Pos             (1UL)                     /*!< UPDIS (Bit 1)                                         */
#define TIMER0_CTL0_UPDIS_Msk             (0x2UL)                   /*!< UPDIS (Bitfield-Mask: 0x01)                           */
#define TIMER0_CTL0_CEN_Pos               (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIMER0_CTL0_CEN_Msk               (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL1  ========================================================== */
#define TIMER0_CTL1_ISO3_Pos              (14UL)                    /*!< ISO3 (Bit 14)                                         */
#define TIMER0_CTL1_ISO3_Msk              (0x4000UL)                /*!< ISO3 (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_ISO2N_Pos             (13UL)                    /*!< ISO2N (Bit 13)                                        */
#define TIMER0_CTL1_ISO2N_Msk             (0x2000UL)                /*!< ISO2N (Bitfield-Mask: 0x01)                           */
#define TIMER0_CTL1_ISO2_Pos              (12UL)                    /*!< ISO2 (Bit 12)                                         */
#define TIMER0_CTL1_ISO2_Msk              (0x1000UL)                /*!< ISO2 (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_ISO1N_Pos             (11UL)                    /*!< ISO1N (Bit 11)                                        */
#define TIMER0_CTL1_ISO1N_Msk             (0x800UL)                 /*!< ISO1N (Bitfield-Mask: 0x01)                           */
#define TIMER0_CTL1_ISO1_Pos              (10UL)                    /*!< ISO1 (Bit 10)                                         */
#define TIMER0_CTL1_ISO1_Msk              (0x400UL)                 /*!< ISO1 (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_ISO0N_Pos             (9UL)                     /*!< ISO0N (Bit 9)                                         */
#define TIMER0_CTL1_ISO0N_Msk             (0x200UL)                 /*!< ISO0N (Bitfield-Mask: 0x01)                           */
#define TIMER0_CTL1_ISO0_Pos              (8UL)                     /*!< ISO0 (Bit 8)                                          */
#define TIMER0_CTL1_ISO0_Msk              (0x100UL)                 /*!< ISO0 (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_TI0S_Pos              (7UL)                     /*!< TI0S (Bit 7)                                          */
#define TIMER0_CTL1_TI0S_Msk              (0x80UL)                  /*!< TI0S (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_MMC_Pos               (4UL)                     /*!< MMC (Bit 4)                                           */
#define TIMER0_CTL1_MMC_Msk               (0x70UL)                  /*!< MMC (Bitfield-Mask: 0x07)                             */
#define TIMER0_CTL1_DMAS_Pos              (3UL)                     /*!< DMAS (Bit 3)                                          */
#define TIMER0_CTL1_DMAS_Msk              (0x8UL)                   /*!< DMAS (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_CCUC_Pos              (2UL)                     /*!< CCUC (Bit 2)                                          */
#define TIMER0_CTL1_CCUC_Msk              (0x4UL)                   /*!< CCUC (Bitfield-Mask: 0x01)                            */
#define TIMER0_CTL1_CCSE_Pos              (0UL)                     /*!< CCSE (Bit 0)                                          */
#define TIMER0_CTL1_CCSE_Msk              (0x1UL)                   /*!< CCSE (Bitfield-Mask: 0x01)                            */
/* =========================================================  SMCFG  ========================================================= */
#define TIMER0_SMCFG_ETP_Pos              (15UL)                    /*!< ETP (Bit 15)                                          */
#define TIMER0_SMCFG_ETP_Msk              (0x8000UL)                /*!< ETP (Bitfield-Mask: 0x01)                             */
#define TIMER0_SMCFG_SCM1_Pos             (14UL)                    /*!< SCM1 (Bit 14)                                         */
#define TIMER0_SMCFG_SCM1_Msk             (0x4000UL)                /*!< SCM1 (Bitfield-Mask: 0x01)                            */
#define TIMER0_SMCFG_ETPSC_Pos            (12UL)                    /*!< ETPSC (Bit 12)                                        */
#define TIMER0_SMCFG_ETPSC_Msk            (0x3000UL)                /*!< ETPSC (Bitfield-Mask: 0x03)                           */
#define TIMER0_SMCFG_ETFC_Pos             (8UL)                     /*!< ETFC (Bit 8)                                          */
#define TIMER0_SMCFG_ETFC_Msk             (0xf00UL)                 /*!< ETFC (Bitfield-Mask: 0x0f)                            */
#define TIMER0_SMCFG_MSM_Pos              (7UL)                     /*!< MSM (Bit 7)                                           */
#define TIMER0_SMCFG_MSM_Msk              (0x80UL)                  /*!< MSM (Bitfield-Mask: 0x01)                             */
#define TIMER0_SMCFG_TRGS_Pos             (4UL)                     /*!< TRGS (Bit 4)                                          */
#define TIMER0_SMCFG_TRGS_Msk             (0x70UL)                  /*!< TRGS (Bitfield-Mask: 0x07)                            */
#define TIMER0_SMCFG_OCRC_Pos             (3UL)                     /*!< OCRC (Bit 3)                                          */
#define TIMER0_SMCFG_OCRC_Msk             (0x8UL)                   /*!< OCRC (Bitfield-Mask: 0x01)                            */
#define TIMER0_SMCFG_SMC_Pos              (0UL)                     /*!< SMC (Bit 0)                                           */
#define TIMER0_SMCFG_SMC_Msk              (0x7UL)                   /*!< SMC (Bitfield-Mask: 0x07)                             */
/* =======================================================  DMAINTEN  ======================================================== */
#define TIMER0_DMAINTEN_TRGDEN_Pos        (14UL)                    /*!< TRGDEN (Bit 14)                                       */
#define TIMER0_DMAINTEN_TRGDEN_Msk        (0x4000UL)                /*!< TRGDEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_DMAINTEN_CMTDEN_Pos        (13UL)                    /*!< CMTDEN (Bit 13)                                       */
#define TIMER0_DMAINTEN_CMTDEN_Msk        (0x2000UL)                /*!< CMTDEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_DMAINTEN_CH3DEN_Pos        (12UL)                    /*!< CH3DEN (Bit 12)                                       */
#define TIMER0_DMAINTEN_CH3DEN_Msk        (0x1000UL)                /*!< CH3DEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_DMAINTEN_CH2DEN_Pos        (11UL)                    /*!< CH2DEN (Bit 11)                                       */
#define TIMER0_DMAINTEN_CH2DEN_Msk        (0x800UL)                 /*!< CH2DEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_DMAINTEN_CH1DEN_Pos        (10UL)                    /*!< CH1DEN (Bit 10)                                       */
#define TIMER0_DMAINTEN_CH1DEN_Msk        (0x400UL)                 /*!< CH1DEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_DMAINTEN_CH0DEN_Pos        (9UL)                     /*!< CH0DEN (Bit 9)                                        */
#define TIMER0_DMAINTEN_CH0DEN_Msk        (0x200UL)                 /*!< CH0DEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_DMAINTEN_UPDEN_Pos         (8UL)                     /*!< UPDEN (Bit 8)                                         */
#define TIMER0_DMAINTEN_UPDEN_Msk         (0x100UL)                 /*!< UPDEN (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_BRKIE_Pos         (7UL)                     /*!< BRKIE (Bit 7)                                         */
#define TIMER0_DMAINTEN_BRKIE_Msk         (0x80UL)                  /*!< BRKIE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_TRGIE_Pos         (6UL)                     /*!< TRGIE (Bit 6)                                         */
#define TIMER0_DMAINTEN_TRGIE_Msk         (0x40UL)                  /*!< TRGIE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_CMTIE_Pos         (5UL)                     /*!< CMTIE (Bit 5)                                         */
#define TIMER0_DMAINTEN_CMTIE_Msk         (0x20UL)                  /*!< CMTIE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_CH3IE_Pos         (4UL)                     /*!< CH3IE (Bit 4)                                         */
#define TIMER0_DMAINTEN_CH3IE_Msk         (0x10UL)                  /*!< CH3IE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_CH2IE_Pos         (3UL)                     /*!< CH2IE (Bit 3)                                         */
#define TIMER0_DMAINTEN_CH2IE_Msk         (0x8UL)                   /*!< CH2IE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_CH1IE_Pos         (2UL)                     /*!< CH1IE (Bit 2)                                         */
#define TIMER0_DMAINTEN_CH1IE_Msk         (0x4UL)                   /*!< CH1IE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_CH0IE_Pos         (1UL)                     /*!< CH0IE (Bit 1)                                         */
#define TIMER0_DMAINTEN_CH0IE_Msk         (0x2UL)                   /*!< CH0IE (Bitfield-Mask: 0x01)                           */
#define TIMER0_DMAINTEN_UPIE_Pos          (0UL)                     /*!< UPIE (Bit 0)                                          */
#define TIMER0_DMAINTEN_UPIE_Msk          (0x1UL)                   /*!< UPIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTF  ========================================================== */
#define TIMER0_INTF_CH3OF_Pos             (12UL)                    /*!< CH3OF (Bit 12)                                        */
#define TIMER0_INTF_CH3OF_Msk             (0x1000UL)                /*!< CH3OF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH2OF_Pos             (11UL)                    /*!< CH2OF (Bit 11)                                        */
#define TIMER0_INTF_CH2OF_Msk             (0x800UL)                 /*!< CH2OF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH1OF_Pos             (10UL)                    /*!< CH1OF (Bit 10)                                        */
#define TIMER0_INTF_CH1OF_Msk             (0x400UL)                 /*!< CH1OF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH0OF_Pos             (9UL)                     /*!< CH0OF (Bit 9)                                         */
#define TIMER0_INTF_CH0OF_Msk             (0x200UL)                 /*!< CH0OF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_BRKIF_Pos             (7UL)                     /*!< BRKIF (Bit 7)                                         */
#define TIMER0_INTF_BRKIF_Msk             (0x80UL)                  /*!< BRKIF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_TRGIF_Pos             (6UL)                     /*!< TRGIF (Bit 6)                                         */
#define TIMER0_INTF_TRGIF_Msk             (0x40UL)                  /*!< TRGIF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CMTIF_Pos             (5UL)                     /*!< CMTIF (Bit 5)                                         */
#define TIMER0_INTF_CMTIF_Msk             (0x20UL)                  /*!< CMTIF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH3IF_Pos             (4UL)                     /*!< CH3IF (Bit 4)                                         */
#define TIMER0_INTF_CH3IF_Msk             (0x10UL)                  /*!< CH3IF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH2IF_Pos             (3UL)                     /*!< CH2IF (Bit 3)                                         */
#define TIMER0_INTF_CH2IF_Msk             (0x8UL)                   /*!< CH2IF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH1IF_Pos             (2UL)                     /*!< CH1IF (Bit 2)                                         */
#define TIMER0_INTF_CH1IF_Msk             (0x4UL)                   /*!< CH1IF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_CH0IF_Pos             (1UL)                     /*!< CH0IF (Bit 1)                                         */
#define TIMER0_INTF_CH0IF_Msk             (0x2UL)                   /*!< CH0IF (Bitfield-Mask: 0x01)                           */
#define TIMER0_INTF_UPIF_Pos              (0UL)                     /*!< UPIF (Bit 0)                                          */
#define TIMER0_INTF_UPIF_Msk              (0x1UL)                   /*!< UPIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SWEVG  ========================================================= */
#define TIMER0_SWEVG_BRKG_Pos             (7UL)                     /*!< BRKG (Bit 7)                                          */
#define TIMER0_SWEVG_BRKG_Msk             (0x80UL)                  /*!< BRKG (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_TRGG_Pos             (6UL)                     /*!< TRGG (Bit 6)                                          */
#define TIMER0_SWEVG_TRGG_Msk             (0x40UL)                  /*!< TRGG (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_CMTG_Pos             (5UL)                     /*!< CMTG (Bit 5)                                          */
#define TIMER0_SWEVG_CMTG_Msk             (0x20UL)                  /*!< CMTG (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_CH3G_Pos             (4UL)                     /*!< CH3G (Bit 4)                                          */
#define TIMER0_SWEVG_CH3G_Msk             (0x10UL)                  /*!< CH3G (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_CH2G_Pos             (3UL)                     /*!< CH2G (Bit 3)                                          */
#define TIMER0_SWEVG_CH2G_Msk             (0x8UL)                   /*!< CH2G (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_CH1G_Pos             (2UL)                     /*!< CH1G (Bit 2)                                          */
#define TIMER0_SWEVG_CH1G_Msk             (0x4UL)                   /*!< CH1G (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_CH0G_Pos             (1UL)                     /*!< CH0G (Bit 1)                                          */
#define TIMER0_SWEVG_CH0G_Msk             (0x2UL)                   /*!< CH0G (Bitfield-Mask: 0x01)                            */
#define TIMER0_SWEVG_UPG_Pos              (0UL)                     /*!< UPG (Bit 0)                                           */
#define TIMER0_SWEVG_UPG_Msk              (0x1UL)                   /*!< UPG (Bitfield-Mask: 0x01)                             */
/* =====================================================  CHCTL0_Output  ===================================================== */
#define TIMER0_CHCTL0_Output_CH1COMCEN_Pos (15UL)                   /*!< CH1COMCEN (Bit 15)                                    */
#define TIMER0_CHCTL0_Output_CH1COMCEN_Msk (0x8000UL)               /*!< CH1COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL0_Output_CH1COMCTL_Pos (12UL)                   /*!< CH1COMCTL (Bit 12)                                    */
#define TIMER0_CHCTL0_Output_CH1COMCTL_Msk (0x7000UL)               /*!< CH1COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER0_CHCTL0_Output_CH1COMSEN_Pos (11UL)                   /*!< CH1COMSEN (Bit 11)                                    */
#define TIMER0_CHCTL0_Output_CH1COMSEN_Msk (0x800UL)                /*!< CH1COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL0_Output_CH1COMFEN_Pos (10UL)                   /*!< CH1COMFEN (Bit 10)                                    */
#define TIMER0_CHCTL0_Output_CH1COMFEN_Msk (0x400UL)                /*!< CH1COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL0_Output_CH1MS_Pos    (8UL)                     /*!< CH1MS (Bit 8)                                         */
#define TIMER0_CHCTL0_Output_CH1MS_Msk    (0x300UL)                 /*!< CH1MS (Bitfield-Mask: 0x03)                           */
#define TIMER0_CHCTL0_Output_CH0COMCEN_Pos (7UL)                    /*!< CH0COMCEN (Bit 7)                                     */
#define TIMER0_CHCTL0_Output_CH0COMCEN_Msk (0x80UL)                 /*!< CH0COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL0_Output_CH0COMCTL_Pos (4UL)                    /*!< CH0COMCTL (Bit 4)                                     */
#define TIMER0_CHCTL0_Output_CH0COMCTL_Msk (0x70UL)                 /*!< CH0COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER0_CHCTL0_Output_CH0COMSEN_Pos (3UL)                    /*!< CH0COMSEN (Bit 3)                                     */
#define TIMER0_CHCTL0_Output_CH0COMSEN_Msk (0x8UL)                  /*!< CH0COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL0_Output_CH0COMFEN_Pos (2UL)                    /*!< CH0COMFEN (Bit 2)                                     */
#define TIMER0_CHCTL0_Output_CH0COMFEN_Msk (0x4UL)                  /*!< CH0COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL0_Output_CH0MS_Pos    (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER0_CHCTL0_Output_CH0MS_Msk    (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL0_Input  ====================================================== */
#define TIMER0_CHCTL0_Input_CH1CAPFLT_Pos (12UL)                    /*!< CH1CAPFLT (Bit 12)                                    */
#define TIMER0_CHCTL0_Input_CH1CAPFLT_Msk (0xf000UL)                /*!< CH1CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER0_CHCTL0_Input_CH1CAPPSC_Pos (10UL)                    /*!< CH1CAPPSC (Bit 10)                                    */
#define TIMER0_CHCTL0_Input_CH1CAPPSC_Msk (0xc00UL)                 /*!< CH1CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER0_CHCTL0_Input_CH1MS_Pos     (8UL)                     /*!< CH1MS (Bit 8)                                         */
#define TIMER0_CHCTL0_Input_CH1MS_Msk     (0x300UL)                 /*!< CH1MS (Bitfield-Mask: 0x03)                           */
#define TIMER0_CHCTL0_Input_CH0CAPFLT_Pos (4UL)                     /*!< CH0CAPFLT (Bit 4)                                     */
#define TIMER0_CHCTL0_Input_CH0CAPFLT_Msk (0xf0UL)                  /*!< CH0CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER0_CHCTL0_Input_CH0CAPPSC_Pos (2UL)                     /*!< CH0CAPPSC (Bit 2)                                     */
#define TIMER0_CHCTL0_Input_CH0CAPPSC_Msk (0xcUL)                   /*!< CH0CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER0_CHCTL0_Input_CH0MS_Pos     (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER0_CHCTL0_Input_CH0MS_Msk     (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL1_Output  ===================================================== */
#define TIMER0_CHCTL1_Output_CH3COMCEN_Pos (15UL)                   /*!< CH3COMCEN (Bit 15)                                    */
#define TIMER0_CHCTL1_Output_CH3COMCEN_Msk (0x8000UL)               /*!< CH3COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL1_Output_CH3COMCTL_Pos (12UL)                   /*!< CH3COMCTL (Bit 12)                                    */
#define TIMER0_CHCTL1_Output_CH3COMCTL_Msk (0x7000UL)               /*!< CH3COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER0_CHCTL1_Output_CH3COMSEN_Pos (11UL)                   /*!< CH3COMSEN (Bit 11)                                    */
#define TIMER0_CHCTL1_Output_CH3COMSEN_Msk (0x800UL)                /*!< CH3COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL1_Output_CH3COMFEN_Pos (10UL)                   /*!< CH3COMFEN (Bit 10)                                    */
#define TIMER0_CHCTL1_Output_CH3COMFEN_Msk (0x400UL)                /*!< CH3COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL1_Output_CH3MS_Pos    (8UL)                     /*!< CH3MS (Bit 8)                                         */
#define TIMER0_CHCTL1_Output_CH3MS_Msk    (0x300UL)                 /*!< CH3MS (Bitfield-Mask: 0x03)                           */
#define TIMER0_CHCTL1_Output_CH2COMCEN_Pos (7UL)                    /*!< CH2COMCEN (Bit 7)                                     */
#define TIMER0_CHCTL1_Output_CH2COMCEN_Msk (0x80UL)                 /*!< CH2COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL1_Output_CH2COMCTL_Pos (4UL)                    /*!< CH2COMCTL (Bit 4)                                     */
#define TIMER0_CHCTL1_Output_CH2COMCTL_Msk (0x70UL)                 /*!< CH2COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER0_CHCTL1_Output_CH2COMSEN_Pos (3UL)                    /*!< CH2COMSEN (Bit 3)                                     */
#define TIMER0_CHCTL1_Output_CH2COMSEN_Msk (0x8UL)                  /*!< CH2COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL1_Output_CH2COMFEN_Pos (2UL)                    /*!< CH2COMFEN (Bit 2)                                     */
#define TIMER0_CHCTL1_Output_CH2COMFEN_Msk (0x4UL)                  /*!< CH2COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER0_CHCTL1_Output_CH2MS_Pos    (0UL)                     /*!< CH2MS (Bit 0)                                         */
#define TIMER0_CHCTL1_Output_CH2MS_Msk    (0x3UL)                   /*!< CH2MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL1_Input  ====================================================== */
#define TIMER0_CHCTL1_Input_CH3CAPFLT_Pos (12UL)                    /*!< CH3CAPFLT (Bit 12)                                    */
#define TIMER0_CHCTL1_Input_CH3CAPFLT_Msk (0xf000UL)                /*!< CH3CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER0_CHCTL1_Input_CH3CAPPSC_Pos (10UL)                    /*!< CH3CAPPSC (Bit 10)                                    */
#define TIMER0_CHCTL1_Input_CH3CAPPSC_Msk (0xc00UL)                 /*!< CH3CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER0_CHCTL1_Input_CH3MS_Pos     (8UL)                     /*!< CH3MS (Bit 8)                                         */
#define TIMER0_CHCTL1_Input_CH3MS_Msk     (0x300UL)                 /*!< CH3MS (Bitfield-Mask: 0x03)                           */
#define TIMER0_CHCTL1_Input_CH2CAPFLT_Pos (4UL)                     /*!< CH2CAPFLT (Bit 4)                                     */
#define TIMER0_CHCTL1_Input_CH2CAPFLT_Msk (0xf0UL)                  /*!< CH2CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER0_CHCTL1_Input_CH2CAPPSC_Pos (2UL)                     /*!< CH2CAPPSC (Bit 2)                                     */
#define TIMER0_CHCTL1_Input_CH2CAPPSC_Msk (0xcUL)                   /*!< CH2CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER0_CHCTL1_Input_CH2MS_Pos     (0UL)                     /*!< CH2MS (Bit 0)                                         */
#define TIMER0_CHCTL1_Input_CH2MS_Msk     (0x3UL)                   /*!< CH2MS (Bitfield-Mask: 0x03)                           */
/* ========================================================  CHCTL2  ========================================================= */
#define TIMER0_CHCTL2_CH3P_Pos            (13UL)                    /*!< CH3P (Bit 13)                                         */
#define TIMER0_CHCTL2_CH3P_Msk            (0x2000UL)                /*!< CH3P (Bitfield-Mask: 0x01)                            */
#define TIMER0_CHCTL2_CH3EN_Pos           (12UL)                    /*!< CH3EN (Bit 12)                                        */
#define TIMER0_CHCTL2_CH3EN_Msk           (0x1000UL)                /*!< CH3EN (Bitfield-Mask: 0x01)                           */
#define TIMER0_CHCTL2_CH2NP_Pos           (11UL)                    /*!< CH2NP (Bit 11)                                        */
#define TIMER0_CHCTL2_CH2NP_Msk           (0x800UL)                 /*!< CH2NP (Bitfield-Mask: 0x01)                           */
#define TIMER0_CHCTL2_CH2NEN_Pos          (10UL)                    /*!< CH2NEN (Bit 10)                                       */
#define TIMER0_CHCTL2_CH2NEN_Msk          (0x400UL)                 /*!< CH2NEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_CHCTL2_CH2P_Pos            (9UL)                     /*!< CH2P (Bit 9)                                          */
#define TIMER0_CHCTL2_CH2P_Msk            (0x200UL)                 /*!< CH2P (Bitfield-Mask: 0x01)                            */
#define TIMER0_CHCTL2_CH2EN_Pos           (8UL)                     /*!< CH2EN (Bit 8)                                         */
#define TIMER0_CHCTL2_CH2EN_Msk           (0x100UL)                 /*!< CH2EN (Bitfield-Mask: 0x01)                           */
#define TIMER0_CHCTL2_CH1NP_Pos           (7UL)                     /*!< CH1NP (Bit 7)                                         */
#define TIMER0_CHCTL2_CH1NP_Msk           (0x80UL)                  /*!< CH1NP (Bitfield-Mask: 0x01)                           */
#define TIMER0_CHCTL2_CH1NEN_Pos          (6UL)                     /*!< CH1NEN (Bit 6)                                        */
#define TIMER0_CHCTL2_CH1NEN_Msk          (0x40UL)                  /*!< CH1NEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_CHCTL2_CH1P_Pos            (5UL)                     /*!< CH1P (Bit 5)                                          */
#define TIMER0_CHCTL2_CH1P_Msk            (0x20UL)                  /*!< CH1P (Bitfield-Mask: 0x01)                            */
#define TIMER0_CHCTL2_CH1EN_Pos           (4UL)                     /*!< CH1EN (Bit 4)                                         */
#define TIMER0_CHCTL2_CH1EN_Msk           (0x10UL)                  /*!< CH1EN (Bitfield-Mask: 0x01)                           */
#define TIMER0_CHCTL2_CH0NP_Pos           (3UL)                     /*!< CH0NP (Bit 3)                                         */
#define TIMER0_CHCTL2_CH0NP_Msk           (0x8UL)                   /*!< CH0NP (Bitfield-Mask: 0x01)                           */
#define TIMER0_CHCTL2_CH0NEN_Pos          (2UL)                     /*!< CH0NEN (Bit 2)                                        */
#define TIMER0_CHCTL2_CH0NEN_Msk          (0x4UL)                   /*!< CH0NEN (Bitfield-Mask: 0x01)                          */
#define TIMER0_CHCTL2_CH0P_Pos            (1UL)                     /*!< CH0P (Bit 1)                                          */
#define TIMER0_CHCTL2_CH0P_Msk            (0x2UL)                   /*!< CH0P (Bitfield-Mask: 0x01)                            */
#define TIMER0_CHCTL2_CH0EN_Pos           (0UL)                     /*!< CH0EN (Bit 0)                                         */
#define TIMER0_CHCTL2_CH0EN_Msk           (0x1UL)                   /*!< CH0EN (Bitfield-Mask: 0x01)                           */
/* ==========================================================  CNT  ========================================================== */
#define TIMER0_CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIMER0_CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define TIMER0_PSC_PSC_Pos                (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIMER0_PSC_PSC_Msk                (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  CAR  ========================================================== */
#define TIMER0_CAR_CARL_Pos               (0UL)                     /*!< CARL (Bit 0)                                          */
#define TIMER0_CAR_CARL_Msk               (0xffffUL)                /*!< CARL (Bitfield-Mask: 0xffff)                          */
/* =========================================================  CREP  ========================================================== */
#define TIMER0_CREP_CREP_Pos              (0UL)                     /*!< CREP (Bit 0)                                          */
#define TIMER0_CREP_CREP_Msk              (0xffUL)                  /*!< CREP (Bitfield-Mask: 0xff)                            */
/* =========================================================  CH0CV  ========================================================= */
#define TIMER0_CH0CV_CH0VAL_Pos           (0UL)                     /*!< CH0VAL (Bit 0)                                        */
#define TIMER0_CH0CV_CH0VAL_Msk           (0xffffUL)                /*!< CH0VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH1CV  ========================================================= */
#define TIMER0_CH1CV_CH1VAL_Pos           (0UL)                     /*!< CH1VAL (Bit 0)                                        */
#define TIMER0_CH1CV_CH1VAL_Msk           (0xffffUL)                /*!< CH1VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH2CV  ========================================================= */
#define TIMER0_CH2CV_CH2VAL_Pos           (0UL)                     /*!< CH2VAL (Bit 0)                                        */
#define TIMER0_CH2CV_CH2VAL_Msk           (0xffffUL)                /*!< CH2VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH3CV  ========================================================= */
#define TIMER0_CH3CV_CH3VAL_Pos           (0UL)                     /*!< CH3VAL (Bit 0)                                        */
#define TIMER0_CH3CV_CH3VAL_Msk           (0xffffUL)                /*!< CH3VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CCHP  ========================================================== */
#define TIMER0_CCHP_POEN_Pos              (15UL)                    /*!< POEN (Bit 15)                                         */
#define TIMER0_CCHP_POEN_Msk              (0x8000UL)                /*!< POEN (Bitfield-Mask: 0x01)                            */
#define TIMER0_CCHP_OAEN_Pos              (14UL)                    /*!< OAEN (Bit 14)                                         */
#define TIMER0_CCHP_OAEN_Msk              (0x4000UL)                /*!< OAEN (Bitfield-Mask: 0x01)                            */
#define TIMER0_CCHP_BRKP_Pos              (13UL)                    /*!< BRKP (Bit 13)                                         */
#define TIMER0_CCHP_BRKP_Msk              (0x2000UL)                /*!< BRKP (Bitfield-Mask: 0x01)                            */
#define TIMER0_CCHP_BRKEN_Pos             (12UL)                    /*!< BRKEN (Bit 12)                                        */
#define TIMER0_CCHP_BRKEN_Msk             (0x1000UL)                /*!< BRKEN (Bitfield-Mask: 0x01)                           */
#define TIMER0_CCHP_ROS_Pos               (11UL)                    /*!< ROS (Bit 11)                                          */
#define TIMER0_CCHP_ROS_Msk               (0x800UL)                 /*!< ROS (Bitfield-Mask: 0x01)                             */
#define TIMER0_CCHP_IOS_Pos               (10UL)                    /*!< IOS (Bit 10)                                          */
#define TIMER0_CCHP_IOS_Msk               (0x400UL)                 /*!< IOS (Bitfield-Mask: 0x01)                             */
#define TIMER0_CCHP_PROT_Pos              (8UL)                     /*!< PROT (Bit 8)                                          */
#define TIMER0_CCHP_PROT_Msk              (0x300UL)                 /*!< PROT (Bitfield-Mask: 0x03)                            */
#define TIMER0_CCHP_DTCFG_Pos             (0UL)                     /*!< DTCFG (Bit 0)                                         */
#define TIMER0_CCHP_DTCFG_Msk             (0xffUL)                  /*!< DTCFG (Bitfield-Mask: 0xff)                           */
/* ========================================================  DMACFG  ========================================================= */
#define TIMER0_DMACFG_DMATC_Pos           (8UL)                     /*!< DMATC (Bit 8)                                         */
#define TIMER0_DMACFG_DMATC_Msk           (0x1f00UL)                /*!< DMATC (Bitfield-Mask: 0x1f)                           */
#define TIMER0_DMACFG_DMATA_Pos           (0UL)                     /*!< DMATA (Bit 0)                                         */
#define TIMER0_DMACFG_DMATA_Msk           (0x1fUL)                  /*!< DMATA (Bitfield-Mask: 0x1f)                           */
/* =========================================================  DMATB  ========================================================= */
#define TIMER0_DMATB_DMATB_Pos            (0UL)                     /*!< DMATB (Bit 0)                                         */
#define TIMER0_DMATB_DMATB_Msk            (0xffffUL)                /*!< DMATB (Bitfield-Mask: 0xffff)                         */
/* ==========================================================  CFG  ========================================================== */
#define TIMER0_CFG_CHVSEL_Pos             (1UL)                     /*!< CHVSEL (Bit 1)                                        */
#define TIMER0_CFG_CHVSEL_Msk             (0x2UL)                   /*!< CHVSEL (Bitfield-Mask: 0x01)                          */
#define TIMER0_CFG_OUTSEL_Pos             (0UL)                     /*!< OUTSEL (Bit 0)                                        */
#define TIMER0_CFG_OUTSEL_Msk             (0x1UL)                   /*!< OUTSEL (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                          TIMER2                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define TIMER2_CTL0_CKDIV_Pos             (8UL)                     /*!< CKDIV (Bit 8)                                         */
#define TIMER2_CTL0_CKDIV_Msk             (0x300UL)                 /*!< CKDIV (Bitfield-Mask: 0x03)                           */
#define TIMER2_CTL0_ARSE_Pos              (7UL)                     /*!< ARSE (Bit 7)                                          */
#define TIMER2_CTL0_ARSE_Msk              (0x80UL)                  /*!< ARSE (Bitfield-Mask: 0x01)                            */
#define TIMER2_CTL0_CAM_Pos               (5UL)                     /*!< CAM (Bit 5)                                           */
#define TIMER2_CTL0_CAM_Msk               (0x60UL)                  /*!< CAM (Bitfield-Mask: 0x03)                             */
#define TIMER2_CTL0_DIR_Pos               (4UL)                     /*!< DIR (Bit 4)                                           */
#define TIMER2_CTL0_DIR_Msk               (0x10UL)                  /*!< DIR (Bitfield-Mask: 0x01)                             */
#define TIMER2_CTL0_SPM_Pos               (3UL)                     /*!< SPM (Bit 3)                                           */
#define TIMER2_CTL0_SPM_Msk               (0x8UL)                   /*!< SPM (Bitfield-Mask: 0x01)                             */
#define TIMER2_CTL0_UPS_Pos               (2UL)                     /*!< UPS (Bit 2)                                           */
#define TIMER2_CTL0_UPS_Msk               (0x4UL)                   /*!< UPS (Bitfield-Mask: 0x01)                             */
#define TIMER2_CTL0_UPDIS_Pos             (1UL)                     /*!< UPDIS (Bit 1)                                         */
#define TIMER2_CTL0_UPDIS_Msk             (0x2UL)                   /*!< UPDIS (Bitfield-Mask: 0x01)                           */
#define TIMER2_CTL0_CEN_Pos               (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIMER2_CTL0_CEN_Msk               (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL1  ========================================================== */
#define TIMER2_CTL1_TI0S_Pos              (7UL)                     /*!< TI0S (Bit 7)                                          */
#define TIMER2_CTL1_TI0S_Msk              (0x80UL)                  /*!< TI0S (Bitfield-Mask: 0x01)                            */
#define TIMER2_CTL1_MMC_Pos               (4UL)                     /*!< MMC (Bit 4)                                           */
#define TIMER2_CTL1_MMC_Msk               (0x70UL)                  /*!< MMC (Bitfield-Mask: 0x07)                             */
#define TIMER2_CTL1_DMAS_Pos              (3UL)                     /*!< DMAS (Bit 3)                                          */
#define TIMER2_CTL1_DMAS_Msk              (0x8UL)                   /*!< DMAS (Bitfield-Mask: 0x01)                            */
/* =========================================================  SMCFG  ========================================================= */
#define TIMER2_SMCFG_ETP_Pos              (15UL)                    /*!< ETP (Bit 15)                                          */
#define TIMER2_SMCFG_ETP_Msk              (0x8000UL)                /*!< ETP (Bitfield-Mask: 0x01)                             */
#define TIMER2_SMCFG_SMC1_Pos             (14UL)                    /*!< SMC1 (Bit 14)                                         */
#define TIMER2_SMCFG_SMC1_Msk             (0x4000UL)                /*!< SMC1 (Bitfield-Mask: 0x01)                            */
#define TIMER2_SMCFG_ETPSC_Pos            (12UL)                    /*!< ETPSC (Bit 12)                                        */
#define TIMER2_SMCFG_ETPSC_Msk            (0x3000UL)                /*!< ETPSC (Bitfield-Mask: 0x03)                           */
#define TIMER2_SMCFG_ETFC_Pos             (8UL)                     /*!< ETFC (Bit 8)                                          */
#define TIMER2_SMCFG_ETFC_Msk             (0xf00UL)                 /*!< ETFC (Bitfield-Mask: 0x0f)                            */
#define TIMER2_SMCFG_MSM_Pos              (7UL)                     /*!< MSM (Bit 7)                                           */
#define TIMER2_SMCFG_MSM_Msk              (0x80UL)                  /*!< MSM (Bitfield-Mask: 0x01)                             */
#define TIMER2_SMCFG_TRGS_Pos             (4UL)                     /*!< TRGS (Bit 4)                                          */
#define TIMER2_SMCFG_TRGS_Msk             (0x70UL)                  /*!< TRGS (Bitfield-Mask: 0x07)                            */
#define TIMER2_SMCFG_OCRC_Pos             (3UL)                     /*!< OCRC (Bit 3)                                          */
#define TIMER2_SMCFG_OCRC_Msk             (0x8UL)                   /*!< OCRC (Bitfield-Mask: 0x01)                            */
#define TIMER2_SMCFG_SMC_Pos              (0UL)                     /*!< SMC (Bit 0)                                           */
#define TIMER2_SMCFG_SMC_Msk              (0x7UL)                   /*!< SMC (Bitfield-Mask: 0x07)                             */
/* =======================================================  DMAINTEN  ======================================================== */
#define TIMER2_DMAINTEN_TRGDEN_Pos        (14UL)                    /*!< TRGDEN (Bit 14)                                       */
#define TIMER2_DMAINTEN_TRGDEN_Msk        (0x4000UL)                /*!< TRGDEN (Bitfield-Mask: 0x01)                          */
#define TIMER2_DMAINTEN_CH3DEN_Pos        (12UL)                    /*!< CH3DEN (Bit 12)                                       */
#define TIMER2_DMAINTEN_CH3DEN_Msk        (0x1000UL)                /*!< CH3DEN (Bitfield-Mask: 0x01)                          */
#define TIMER2_DMAINTEN_CH2DEN_Pos        (11UL)                    /*!< CH2DEN (Bit 11)                                       */
#define TIMER2_DMAINTEN_CH2DEN_Msk        (0x800UL)                 /*!< CH2DEN (Bitfield-Mask: 0x01)                          */
#define TIMER2_DMAINTEN_CH1DEN_Pos        (10UL)                    /*!< CH1DEN (Bit 10)                                       */
#define TIMER2_DMAINTEN_CH1DEN_Msk        (0x400UL)                 /*!< CH1DEN (Bitfield-Mask: 0x01)                          */
#define TIMER2_DMAINTEN_CH0DEN_Pos        (9UL)                     /*!< CH0DEN (Bit 9)                                        */
#define TIMER2_DMAINTEN_CH0DEN_Msk        (0x200UL)                 /*!< CH0DEN (Bitfield-Mask: 0x01)                          */
#define TIMER2_DMAINTEN_UPDEN_Pos         (8UL)                     /*!< UPDEN (Bit 8)                                         */
#define TIMER2_DMAINTEN_UPDEN_Msk         (0x100UL)                 /*!< UPDEN (Bitfield-Mask: 0x01)                           */
#define TIMER2_DMAINTEN_TRGIE_Pos         (6UL)                     /*!< TRGIE (Bit 6)                                         */
#define TIMER2_DMAINTEN_TRGIE_Msk         (0x40UL)                  /*!< TRGIE (Bitfield-Mask: 0x01)                           */
#define TIMER2_DMAINTEN_CH3IE_Pos         (4UL)                     /*!< CH3IE (Bit 4)                                         */
#define TIMER2_DMAINTEN_CH3IE_Msk         (0x10UL)                  /*!< CH3IE (Bitfield-Mask: 0x01)                           */
#define TIMER2_DMAINTEN_CH2IE_Pos         (3UL)                     /*!< CH2IE (Bit 3)                                         */
#define TIMER2_DMAINTEN_CH2IE_Msk         (0x8UL)                   /*!< CH2IE (Bitfield-Mask: 0x01)                           */
#define TIMER2_DMAINTEN_CH1IE_Pos         (2UL)                     /*!< CH1IE (Bit 2)                                         */
#define TIMER2_DMAINTEN_CH1IE_Msk         (0x4UL)                   /*!< CH1IE (Bitfield-Mask: 0x01)                           */
#define TIMER2_DMAINTEN_CH0IE_Pos         (1UL)                     /*!< CH0IE (Bit 1)                                         */
#define TIMER2_DMAINTEN_CH0IE_Msk         (0x2UL)                   /*!< CH0IE (Bitfield-Mask: 0x01)                           */
#define TIMER2_DMAINTEN_UPIE_Pos          (0UL)                     /*!< UPIE (Bit 0)                                          */
#define TIMER2_DMAINTEN_UPIE_Msk          (0x1UL)                   /*!< UPIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTF  ========================================================== */
#define TIMER2_INTF_CH3OF_Pos             (12UL)                    /*!< CH3OF (Bit 12)                                        */
#define TIMER2_INTF_CH3OF_Msk             (0x1000UL)                /*!< CH3OF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH2OF_Pos             (11UL)                    /*!< CH2OF (Bit 11)                                        */
#define TIMER2_INTF_CH2OF_Msk             (0x800UL)                 /*!< CH2OF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH1OF_Pos             (10UL)                    /*!< CH1OF (Bit 10)                                        */
#define TIMER2_INTF_CH1OF_Msk             (0x400UL)                 /*!< CH1OF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH0OF_Pos             (9UL)                     /*!< CH0OF (Bit 9)                                         */
#define TIMER2_INTF_CH0OF_Msk             (0x200UL)                 /*!< CH0OF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_TRGIF_Pos             (6UL)                     /*!< TRGIF (Bit 6)                                         */
#define TIMER2_INTF_TRGIF_Msk             (0x40UL)                  /*!< TRGIF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH3IF_Pos             (4UL)                     /*!< CH3IF (Bit 4)                                         */
#define TIMER2_INTF_CH3IF_Msk             (0x10UL)                  /*!< CH3IF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH2IF_Pos             (3UL)                     /*!< CH2IF (Bit 3)                                         */
#define TIMER2_INTF_CH2IF_Msk             (0x8UL)                   /*!< CH2IF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH1IF_Pos             (2UL)                     /*!< CH1IF (Bit 2)                                         */
#define TIMER2_INTF_CH1IF_Msk             (0x4UL)                   /*!< CH1IF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_CH0IF_Pos             (1UL)                     /*!< CH0IF (Bit 1)                                         */
#define TIMER2_INTF_CH0IF_Msk             (0x2UL)                   /*!< CH0IF (Bitfield-Mask: 0x01)                           */
#define TIMER2_INTF_UPIF_Pos              (0UL)                     /*!< UPIF (Bit 0)                                          */
#define TIMER2_INTF_UPIF_Msk              (0x1UL)                   /*!< UPIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SWEVG  ========================================================= */
#define TIMER2_SWEVG_TRGG_Pos             (6UL)                     /*!< TRGG (Bit 6)                                          */
#define TIMER2_SWEVG_TRGG_Msk             (0x40UL)                  /*!< TRGG (Bitfield-Mask: 0x01)                            */
#define TIMER2_SWEVG_CH3G_Pos             (4UL)                     /*!< CH3G (Bit 4)                                          */
#define TIMER2_SWEVG_CH3G_Msk             (0x10UL)                  /*!< CH3G (Bitfield-Mask: 0x01)                            */
#define TIMER2_SWEVG_CH2G_Pos             (3UL)                     /*!< CH2G (Bit 3)                                          */
#define TIMER2_SWEVG_CH2G_Msk             (0x8UL)                   /*!< CH2G (Bitfield-Mask: 0x01)                            */
#define TIMER2_SWEVG_CH1G_Pos             (2UL)                     /*!< CH1G (Bit 2)                                          */
#define TIMER2_SWEVG_CH1G_Msk             (0x4UL)                   /*!< CH1G (Bitfield-Mask: 0x01)                            */
#define TIMER2_SWEVG_CH0G_Pos             (1UL)                     /*!< CH0G (Bit 1)                                          */
#define TIMER2_SWEVG_CH0G_Msk             (0x2UL)                   /*!< CH0G (Bitfield-Mask: 0x01)                            */
#define TIMER2_SWEVG_UPG_Pos              (0UL)                     /*!< UPG (Bit 0)                                           */
#define TIMER2_SWEVG_UPG_Msk              (0x1UL)                   /*!< UPG (Bitfield-Mask: 0x01)                             */
/* =====================================================  CHCTL0_Output  ===================================================== */
#define TIMER2_CHCTL0_Output_CH1COMCEN_Pos (15UL)                   /*!< CH1COMCEN (Bit 15)                                    */
#define TIMER2_CHCTL0_Output_CH1COMCEN_Msk (0x8000UL)               /*!< CH1COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL0_Output_CH1COMCTL_Pos (12UL)                   /*!< CH1COMCTL (Bit 12)                                    */
#define TIMER2_CHCTL0_Output_CH1COMCTL_Msk (0x7000UL)               /*!< CH1COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER2_CHCTL0_Output_CH1COMSEN_Pos (11UL)                   /*!< CH1COMSEN (Bit 11)                                    */
#define TIMER2_CHCTL0_Output_CH1COMSEN_Msk (0x800UL)                /*!< CH1COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL0_Output_CH1COMFEN_Pos (10UL)                   /*!< CH1COMFEN (Bit 10)                                    */
#define TIMER2_CHCTL0_Output_CH1COMFEN_Msk (0x400UL)                /*!< CH1COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL0_Output_CH1MS_Pos    (8UL)                     /*!< CH1MS (Bit 8)                                         */
#define TIMER2_CHCTL0_Output_CH1MS_Msk    (0x300UL)                 /*!< CH1MS (Bitfield-Mask: 0x03)                           */
#define TIMER2_CHCTL0_Output_CH0COMCEN_Pos (7UL)                    /*!< CH0COMCEN (Bit 7)                                     */
#define TIMER2_CHCTL0_Output_CH0COMCEN_Msk (0x80UL)                 /*!< CH0COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL0_Output_CH0COMCTL_Pos (4UL)                    /*!< CH0COMCTL (Bit 4)                                     */
#define TIMER2_CHCTL0_Output_CH0COMCTL_Msk (0x70UL)                 /*!< CH0COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER2_CHCTL0_Output_CH0COMSEN_Pos (3UL)                    /*!< CH0COMSEN (Bit 3)                                     */
#define TIMER2_CHCTL0_Output_CH0COMSEN_Msk (0x8UL)                  /*!< CH0COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL0_Output_CH0COMFEN_Pos (2UL)                    /*!< CH0COMFEN (Bit 2)                                     */
#define TIMER2_CHCTL0_Output_CH0COMFEN_Msk (0x4UL)                  /*!< CH0COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL0_Output_CH0MS_Pos    (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER2_CHCTL0_Output_CH0MS_Msk    (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL0_Input  ====================================================== */
#define TIMER2_CHCTL0_Input_CH1CAPFLT_Pos (12UL)                    /*!< CH1CAPFLT (Bit 12)                                    */
#define TIMER2_CHCTL0_Input_CH1CAPFLT_Msk (0xf000UL)                /*!< CH1CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER2_CHCTL0_Input_CH1CAPPSC_Pos (10UL)                    /*!< CH1CAPPSC (Bit 10)                                    */
#define TIMER2_CHCTL0_Input_CH1CAPPSC_Msk (0xc00UL)                 /*!< CH1CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER2_CHCTL0_Input_CH1MS_Pos     (8UL)                     /*!< CH1MS (Bit 8)                                         */
#define TIMER2_CHCTL0_Input_CH1MS_Msk     (0x300UL)                 /*!< CH1MS (Bitfield-Mask: 0x03)                           */
#define TIMER2_CHCTL0_Input_CH0CAPFLT_Pos (4UL)                     /*!< CH0CAPFLT (Bit 4)                                     */
#define TIMER2_CHCTL0_Input_CH0CAPFLT_Msk (0xf0UL)                  /*!< CH0CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER2_CHCTL0_Input_CH0CAPPSC_Pos (2UL)                     /*!< CH0CAPPSC (Bit 2)                                     */
#define TIMER2_CHCTL0_Input_CH0CAPPSC_Msk (0xcUL)                   /*!< CH0CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER2_CHCTL0_Input_CH0MS_Pos     (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER2_CHCTL0_Input_CH0MS_Msk     (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL1_Output  ===================================================== */
#define TIMER2_CHCTL1_Output_CH3COMCEN_Pos (15UL)                   /*!< CH3COMCEN (Bit 15)                                    */
#define TIMER2_CHCTL1_Output_CH3COMCEN_Msk (0x8000UL)               /*!< CH3COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL1_Output_CH3COMCTL_Pos (12UL)                   /*!< CH3COMCTL (Bit 12)                                    */
#define TIMER2_CHCTL1_Output_CH3COMCTL_Msk (0x7000UL)               /*!< CH3COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER2_CHCTL1_Output_CH3COMSEN_Pos (11UL)                   /*!< CH3COMSEN (Bit 11)                                    */
#define TIMER2_CHCTL1_Output_CH3COMSEN_Msk (0x800UL)                /*!< CH3COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL1_Output_CH3COMFEN_Pos (10UL)                   /*!< CH3COMFEN (Bit 10)                                    */
#define TIMER2_CHCTL1_Output_CH3COMFEN_Msk (0x400UL)                /*!< CH3COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL1_Output_CH3MS_Pos    (8UL)                     /*!< CH3MS (Bit 8)                                         */
#define TIMER2_CHCTL1_Output_CH3MS_Msk    (0x300UL)                 /*!< CH3MS (Bitfield-Mask: 0x03)                           */
#define TIMER2_CHCTL1_Output_CH2COMCEN_Pos (7UL)                    /*!< CH2COMCEN (Bit 7)                                     */
#define TIMER2_CHCTL1_Output_CH2COMCEN_Msk (0x80UL)                 /*!< CH2COMCEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL1_Output_CH2COMCTL_Pos (4UL)                    /*!< CH2COMCTL (Bit 4)                                     */
#define TIMER2_CHCTL1_Output_CH2COMCTL_Msk (0x70UL)                 /*!< CH2COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER2_CHCTL1_Output_CH2COMSEN_Pos (3UL)                    /*!< CH2COMSEN (Bit 3)                                     */
#define TIMER2_CHCTL1_Output_CH2COMSEN_Msk (0x8UL)                  /*!< CH2COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL1_Output_CH2COMFEN_Pos (2UL)                    /*!< CH2COMFEN (Bit 2)                                     */
#define TIMER2_CHCTL1_Output_CH2COMFEN_Msk (0x4UL)                  /*!< CH2COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER2_CHCTL1_Output_CH2MS_Pos    (0UL)                     /*!< CH2MS (Bit 0)                                         */
#define TIMER2_CHCTL1_Output_CH2MS_Msk    (0x3UL)                   /*!< CH2MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL1_Input  ====================================================== */
#define TIMER2_CHCTL1_Input_CH3CAPFLT_Pos (12UL)                    /*!< CH3CAPFLT (Bit 12)                                    */
#define TIMER2_CHCTL1_Input_CH3CAPFLT_Msk (0xf000UL)                /*!< CH3CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER2_CHCTL1_Input_CH3CAPPSC_Pos (10UL)                    /*!< CH3CAPPSC (Bit 10)                                    */
#define TIMER2_CHCTL1_Input_CH3CAPPSC_Msk (0xc00UL)                 /*!< CH3CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER2_CHCTL1_Input_CH3MS_Pos     (8UL)                     /*!< CH3MS (Bit 8)                                         */
#define TIMER2_CHCTL1_Input_CH3MS_Msk     (0x300UL)                 /*!< CH3MS (Bitfield-Mask: 0x03)                           */
#define TIMER2_CHCTL1_Input_CH2CAPFLT_Pos (4UL)                     /*!< CH2CAPFLT (Bit 4)                                     */
#define TIMER2_CHCTL1_Input_CH2CAPFLT_Msk (0xf0UL)                  /*!< CH2CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER2_CHCTL1_Input_CH2CAPPSC_Pos (2UL)                     /*!< CH2CAPPSC (Bit 2)                                     */
#define TIMER2_CHCTL1_Input_CH2CAPPSC_Msk (0xcUL)                   /*!< CH2CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER2_CHCTL1_Input_CH2MS_Pos     (0UL)                     /*!< CH2MS (Bit 0)                                         */
#define TIMER2_CHCTL1_Input_CH2MS_Msk     (0x3UL)                   /*!< CH2MS (Bitfield-Mask: 0x03)                           */
/* ========================================================  CHCTL2  ========================================================= */
#define TIMER2_CHCTL2_CH3NP_Pos           (15UL)                    /*!< CH3NP (Bit 15)                                        */
#define TIMER2_CHCTL2_CH3NP_Msk           (0x8000UL)                /*!< CH3NP (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH3P_Pos            (13UL)                    /*!< CH3P (Bit 13)                                         */
#define TIMER2_CHCTL2_CH3P_Msk            (0x2000UL)                /*!< CH3P (Bitfield-Mask: 0x01)                            */
#define TIMER2_CHCTL2_CH3EN_Pos           (12UL)                    /*!< CH3EN (Bit 12)                                        */
#define TIMER2_CHCTL2_CH3EN_Msk           (0x1000UL)                /*!< CH3EN (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH2NP_Pos           (11UL)                    /*!< CH2NP (Bit 11)                                        */
#define TIMER2_CHCTL2_CH2NP_Msk           (0x800UL)                 /*!< CH2NP (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH2P_Pos            (9UL)                     /*!< CH2P (Bit 9)                                          */
#define TIMER2_CHCTL2_CH2P_Msk            (0x200UL)                 /*!< CH2P (Bitfield-Mask: 0x01)                            */
#define TIMER2_CHCTL2_CH2EN_Pos           (8UL)                     /*!< CH2EN (Bit 8)                                         */
#define TIMER2_CHCTL2_CH2EN_Msk           (0x100UL)                 /*!< CH2EN (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH1NP_Pos           (7UL)                     /*!< CH1NP (Bit 7)                                         */
#define TIMER2_CHCTL2_CH1NP_Msk           (0x80UL)                  /*!< CH1NP (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH1P_Pos            (5UL)                     /*!< CH1P (Bit 5)                                          */
#define TIMER2_CHCTL2_CH1P_Msk            (0x20UL)                  /*!< CH1P (Bitfield-Mask: 0x01)                            */
#define TIMER2_CHCTL2_CH1EN_Pos           (4UL)                     /*!< CH1EN (Bit 4)                                         */
#define TIMER2_CHCTL2_CH1EN_Msk           (0x10UL)                  /*!< CH1EN (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH0NP_Pos           (3UL)                     /*!< CH0NP (Bit 3)                                         */
#define TIMER2_CHCTL2_CH0NP_Msk           (0x8UL)                   /*!< CH0NP (Bitfield-Mask: 0x01)                           */
#define TIMER2_CHCTL2_CH0P_Pos            (1UL)                     /*!< CH0P (Bit 1)                                          */
#define TIMER2_CHCTL2_CH0P_Msk            (0x2UL)                   /*!< CH0P (Bitfield-Mask: 0x01)                            */
#define TIMER2_CHCTL2_CH0EN_Pos           (0UL)                     /*!< CH0EN (Bit 0)                                         */
#define TIMER2_CHCTL2_CH0EN_Msk           (0x1UL)                   /*!< CH0EN (Bitfield-Mask: 0x01)                           */
/* ==========================================================  CNT  ========================================================== */
#define TIMER2_CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIMER2_CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define TIMER2_PSC_PSC_Pos                (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIMER2_PSC_PSC_Msk                (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  CAR  ========================================================== */
#define TIMER2_CAR_CARL_Pos               (0UL)                     /*!< CARL (Bit 0)                                          */
#define TIMER2_CAR_CARL_Msk               (0xffffUL)                /*!< CARL (Bitfield-Mask: 0xffff)                          */
/* =========================================================  CH0CV  ========================================================= */
#define TIMER2_CH0CV_CH0VAL_Pos           (0UL)                     /*!< CH0VAL (Bit 0)                                        */
#define TIMER2_CH0CV_CH0VAL_Msk           (0xffffUL)                /*!< CH0VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH1CV  ========================================================= */
#define TIMER2_CH1CV_CH1VAL_Pos           (0UL)                     /*!< CH1VAL (Bit 0)                                        */
#define TIMER2_CH1CV_CH1VAL_Msk           (0xffffUL)                /*!< CH1VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH2CV  ========================================================= */
#define TIMER2_CH2CV_CH2VAL_Pos           (0UL)                     /*!< CH2VAL (Bit 0)                                        */
#define TIMER2_CH2CV_CH2VAL_Msk           (0xffffUL)                /*!< CH2VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH3CV  ========================================================= */
#define TIMER2_CH3CV_CH3VAL_Pos           (0UL)                     /*!< CH3VAL (Bit 0)                                        */
#define TIMER2_CH3CV_CH3VAL_Msk           (0xffffUL)                /*!< CH3VAL (Bitfield-Mask: 0xffff)                        */
/* ========================================================  DMACFG  ========================================================= */
#define TIMER2_DMACFG_DMATC_Pos           (8UL)                     /*!< DMATC (Bit 8)                                         */
#define TIMER2_DMACFG_DMATC_Msk           (0x1f00UL)                /*!< DMATC (Bitfield-Mask: 0x1f)                           */
#define TIMER2_DMACFG_DMATA_Pos           (0UL)                     /*!< DMATA (Bit 0)                                         */
#define TIMER2_DMACFG_DMATA_Msk           (0x1fUL)                  /*!< DMATA (Bitfield-Mask: 0x1f)                           */
/* =========================================================  DMATB  ========================================================= */
#define TIMER2_DMATB_DMATB_Pos            (0UL)                     /*!< DMATB (Bit 0)                                         */
#define TIMER2_DMATB_DMATB_Msk            (0xffffUL)                /*!< DMATB (Bitfield-Mask: 0xffff)                         */
/* ==========================================================  CFG  ========================================================== */
#define TIMER2_CFG_CHVSEL_Pos             (1UL)                     /*!< CHVSEL (Bit 1)                                        */
#define TIMER2_CFG_CHVSEL_Msk             (0x2UL)                   /*!< CHVSEL (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                          TIMER5                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define TIMER5_CTL0_ARSE_Pos              (7UL)                     /*!< ARSE (Bit 7)                                          */
#define TIMER5_CTL0_ARSE_Msk              (0x80UL)                  /*!< ARSE (Bitfield-Mask: 0x01)                            */
#define TIMER5_CTL0_SPM_Pos               (3UL)                     /*!< SPM (Bit 3)                                           */
#define TIMER5_CTL0_SPM_Msk               (0x8UL)                   /*!< SPM (Bitfield-Mask: 0x01)                             */
#define TIMER5_CTL0_UPS_Pos               (2UL)                     /*!< UPS (Bit 2)                                           */
#define TIMER5_CTL0_UPS_Msk               (0x4UL)                   /*!< UPS (Bitfield-Mask: 0x01)                             */
#define TIMER5_CTL0_UPDIS_Pos             (1UL)                     /*!< UPDIS (Bit 1)                                         */
#define TIMER5_CTL0_UPDIS_Msk             (0x2UL)                   /*!< UPDIS (Bitfield-Mask: 0x01)                           */
#define TIMER5_CTL0_CEN_Pos               (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIMER5_CTL0_CEN_Msk               (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL1  ========================================================== */
#define TIMER5_CTL1_MMC_Pos               (4UL)                     /*!< MMC (Bit 4)                                           */
#define TIMER5_CTL1_MMC_Msk               (0x70UL)                  /*!< MMC (Bitfield-Mask: 0x07)                             */
/* =======================================================  DMAINTEN  ======================================================== */
#define TIMER5_DMAINTEN_UPDEN_Pos         (8UL)                     /*!< UPDEN (Bit 8)                                         */
#define TIMER5_DMAINTEN_UPDEN_Msk         (0x100UL)                 /*!< UPDEN (Bitfield-Mask: 0x01)                           */
#define TIMER5_DMAINTEN_UPIE_Pos          (0UL)                     /*!< UPIE (Bit 0)                                          */
#define TIMER5_DMAINTEN_UPIE_Msk          (0x1UL)                   /*!< UPIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTF  ========================================================== */
#define TIMER5_INTF_UPIF_Pos              (0UL)                     /*!< UPIF (Bit 0)                                          */
#define TIMER5_INTF_UPIF_Msk              (0x1UL)                   /*!< UPIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SWEVG  ========================================================= */
#define TIMER5_SWEVG_UPG_Pos              (0UL)                     /*!< UPG (Bit 0)                                           */
#define TIMER5_SWEVG_UPG_Msk              (0x1UL)                   /*!< UPG (Bitfield-Mask: 0x01)                             */
/* ==========================================================  CNT  ========================================================== */
#define TIMER5_CNT_CNT_Pos                (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIMER5_CNT_CNT_Msk                (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define TIMER5_PSC_PSC_Pos                (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIMER5_PSC_PSC_Msk                (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  CAR  ========================================================== */
#define TIMER5_CAR_CARL_Pos               (0UL)                     /*!< CARL (Bit 0)                                          */
#define TIMER5_CAR_CARL_Msk               (0xffffUL)                /*!< CARL (Bitfield-Mask: 0xffff)                          */


/* =========================================================================================================================== */
/* ================                                          TIMER13                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define TIMER13_CTL0_CKDIV_Pos            (8UL)                     /*!< CKDIV (Bit 8)                                         */
#define TIMER13_CTL0_CKDIV_Msk            (0x300UL)                 /*!< CKDIV (Bitfield-Mask: 0x03)                           */
#define TIMER13_CTL0_ARSE_Pos             (7UL)                     /*!< ARSE (Bit 7)                                          */
#define TIMER13_CTL0_ARSE_Msk             (0x80UL)                  /*!< ARSE (Bitfield-Mask: 0x01)                            */
#define TIMER13_CTL0_UPS_Pos              (2UL)                     /*!< UPS (Bit 2)                                           */
#define TIMER13_CTL0_UPS_Msk              (0x4UL)                   /*!< UPS (Bitfield-Mask: 0x01)                             */
#define TIMER13_CTL0_UPDIS_Pos            (1UL)                     /*!< UPDIS (Bit 1)                                         */
#define TIMER13_CTL0_UPDIS_Msk            (0x2UL)                   /*!< UPDIS (Bitfield-Mask: 0x01)                           */
#define TIMER13_CTL0_CEN_Pos              (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIMER13_CTL0_CEN_Msk              (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
/* =======================================================  DMAINTEN  ======================================================== */
#define TIMER13_DMAINTEN_CH0IE_Pos        (1UL)                     /*!< CH0IE (Bit 1)                                         */
#define TIMER13_DMAINTEN_CH0IE_Msk        (0x2UL)                   /*!< CH0IE (Bitfield-Mask: 0x01)                           */
#define TIMER13_DMAINTEN_UPIE_Pos         (0UL)                     /*!< UPIE (Bit 0)                                          */
#define TIMER13_DMAINTEN_UPIE_Msk         (0x1UL)                   /*!< UPIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTF  ========================================================== */
#define TIMER13_INTF_CH0OF_Pos            (9UL)                     /*!< CH0OF (Bit 9)                                         */
#define TIMER13_INTF_CH0OF_Msk            (0x200UL)                 /*!< CH0OF (Bitfield-Mask: 0x01)                           */
#define TIMER13_INTF_CH0IF_Pos            (1UL)                     /*!< CH0IF (Bit 1)                                         */
#define TIMER13_INTF_CH0IF_Msk            (0x2UL)                   /*!< CH0IF (Bitfield-Mask: 0x01)                           */
#define TIMER13_INTF_UPIF_Pos             (0UL)                     /*!< UPIF (Bit 0)                                          */
#define TIMER13_INTF_UPIF_Msk             (0x1UL)                   /*!< UPIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SWEVG  ========================================================= */
#define TIMER13_SWEVG_CH0G_Pos            (1UL)                     /*!< CH0G (Bit 1)                                          */
#define TIMER13_SWEVG_CH0G_Msk            (0x2UL)                   /*!< CH0G (Bitfield-Mask: 0x01)                            */
#define TIMER13_SWEVG_UPG_Pos             (0UL)                     /*!< UPG (Bit 0)                                           */
#define TIMER13_SWEVG_UPG_Msk             (0x1UL)                   /*!< UPG (Bitfield-Mask: 0x01)                             */
/* =====================================================  CHCTL0_Output  ===================================================== */
#define TIMER13_CHCTL0_Output_CH0MS_Pos   (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER13_CHCTL0_Output_CH0MS_Msk   (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
#define TIMER13_CHCTL0_Output_CH0COMFEN_Pos (2UL)                   /*!< CH0COMFEN (Bit 2)                                     */
#define TIMER13_CHCTL0_Output_CH0COMFEN_Msk (0x4UL)                 /*!< CH0COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER13_CHCTL0_Output_CH0COMSEN_Pos (3UL)                   /*!< CH0COMSEN (Bit 3)                                     */
#define TIMER13_CHCTL0_Output_CH0COMSEN_Msk (0x8UL)                 /*!< CH0COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER13_CHCTL0_Output_CH0COMCTL_Pos (4UL)                   /*!< CH0COMCTL (Bit 4)                                     */
#define TIMER13_CHCTL0_Output_CH0COMCTL_Msk (0x70UL)                /*!< CH0COMCTL (Bitfield-Mask: 0x07)                       */
/* =====================================================  CHCTL0_Input  ====================================================== */
#define TIMER13_CHCTL0_Input_CH0CAPFLT_Pos (4UL)                    /*!< CH0CAPFLT (Bit 4)                                     */
#define TIMER13_CHCTL0_Input_CH0CAPFLT_Msk (0xf0UL)                 /*!< CH0CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER13_CHCTL0_Input_CH0CAPPSC_Pos (2UL)                    /*!< CH0CAPPSC (Bit 2)                                     */
#define TIMER13_CHCTL0_Input_CH0CAPPSC_Msk (0xcUL)                  /*!< CH0CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER13_CHCTL0_Input_CH0MS_Pos    (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER13_CHCTL0_Input_CH0MS_Msk    (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* ========================================================  CHCTL2  ========================================================= */
#define TIMER13_CHCTL2_CH0NP_Pos          (3UL)                     /*!< CH0NP (Bit 3)                                         */
#define TIMER13_CHCTL2_CH0NP_Msk          (0x8UL)                   /*!< CH0NP (Bitfield-Mask: 0x01)                           */
#define TIMER13_CHCTL2_CH0P_Pos           (1UL)                     /*!< CH0P (Bit 1)                                          */
#define TIMER13_CHCTL2_CH0P_Msk           (0x2UL)                   /*!< CH0P (Bitfield-Mask: 0x01)                            */
#define TIMER13_CHCTL2_CH0EN_Pos          (0UL)                     /*!< CH0EN (Bit 0)                                         */
#define TIMER13_CHCTL2_CH0EN_Msk          (0x1UL)                   /*!< CH0EN (Bitfield-Mask: 0x01)                           */
/* ==========================================================  CNT  ========================================================== */
#define TIMER13_CNT_CNT_Pos               (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIMER13_CNT_CNT_Msk               (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define TIMER13_PSC_PSC_Pos               (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIMER13_PSC_PSC_Msk               (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  CAR  ========================================================== */
#define TIMER13_CAR_CARL_Pos              (0UL)                     /*!< CARL (Bit 0)                                          */
#define TIMER13_CAR_CARL_Msk              (0xffffUL)                /*!< CARL (Bitfield-Mask: 0xffff)                          */
/* =========================================================  CH0CV  ========================================================= */
#define TIMER13_CH0CV_CH0VAL_Pos          (0UL)                     /*!< CH0VAL (Bit 0)                                        */
#define TIMER13_CH0CV_CH0VAL_Msk          (0xffffUL)                /*!< CH0VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  IRMP  ========================================================== */
#define TIMER13_IRMP_CI0_RMP_Pos          (0UL)                     /*!< CI0_RMP (Bit 0)                                       */
#define TIMER13_IRMP_CI0_RMP_Msk          (0x3UL)                   /*!< CI0_RMP (Bitfield-Mask: 0x03)                         */
/* ==========================================================  CFG  ========================================================== */
#define TIMER13_CFG_CHVSEL_Pos            (1UL)                     /*!< CHVSEL (Bit 1)                                        */
#define TIMER13_CFG_CHVSEL_Msk            (0x2UL)                   /*!< CHVSEL (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                          TIMER14                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define TIMER14_CTL0_CKDIV_Pos            (8UL)                     /*!< CKDIV (Bit 8)                                         */
#define TIMER14_CTL0_CKDIV_Msk            (0x300UL)                 /*!< CKDIV (Bitfield-Mask: 0x03)                           */
#define TIMER14_CTL0_ARSE_Pos             (7UL)                     /*!< ARSE (Bit 7)                                          */
#define TIMER14_CTL0_ARSE_Msk             (0x80UL)                  /*!< ARSE (Bitfield-Mask: 0x01)                            */
#define TIMER14_CTL0_SPM_Pos              (3UL)                     /*!< SPM (Bit 3)                                           */
#define TIMER14_CTL0_SPM_Msk              (0x8UL)                   /*!< SPM (Bitfield-Mask: 0x01)                             */
#define TIMER14_CTL0_UPS_Pos              (2UL)                     /*!< UPS (Bit 2)                                           */
#define TIMER14_CTL0_UPS_Msk              (0x4UL)                   /*!< UPS (Bitfield-Mask: 0x01)                             */
#define TIMER14_CTL0_UPDIS_Pos            (1UL)                     /*!< UPDIS (Bit 1)                                         */
#define TIMER14_CTL0_UPDIS_Msk            (0x2UL)                   /*!< UPDIS (Bitfield-Mask: 0x01)                           */
#define TIMER14_CTL0_CEN_Pos              (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIMER14_CTL0_CEN_Msk              (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL1  ========================================================== */
#define TIMER14_CTL1_ISO1_Pos             (10UL)                    /*!< ISO1 (Bit 10)                                         */
#define TIMER14_CTL1_ISO1_Msk             (0x400UL)                 /*!< ISO1 (Bitfield-Mask: 0x01)                            */
#define TIMER14_CTL1_ISO0N_Pos            (9UL)                     /*!< ISO0N (Bit 9)                                         */
#define TIMER14_CTL1_ISO0N_Msk            (0x200UL)                 /*!< ISO0N (Bitfield-Mask: 0x01)                           */
#define TIMER14_CTL1_ISO0_Pos             (8UL)                     /*!< ISO0 (Bit 8)                                          */
#define TIMER14_CTL1_ISO0_Msk             (0x100UL)                 /*!< ISO0 (Bitfield-Mask: 0x01)                            */
#define TIMER14_CTL1_MMC_Pos              (4UL)                     /*!< MMC (Bit 4)                                           */
#define TIMER14_CTL1_MMC_Msk              (0x70UL)                  /*!< MMC (Bitfield-Mask: 0x07)                             */
#define TIMER14_CTL1_DMAS_Pos             (3UL)                     /*!< DMAS (Bit 3)                                          */
#define TIMER14_CTL1_DMAS_Msk             (0x8UL)                   /*!< DMAS (Bitfield-Mask: 0x01)                            */
#define TIMER14_CTL1_CCUC_Pos             (2UL)                     /*!< CCUC (Bit 2)                                          */
#define TIMER14_CTL1_CCUC_Msk             (0x4UL)                   /*!< CCUC (Bitfield-Mask: 0x01)                            */
#define TIMER14_CTL1_CCSE_Pos             (0UL)                     /*!< CCSE (Bit 0)                                          */
#define TIMER14_CTL1_CCSE_Msk             (0x1UL)                   /*!< CCSE (Bitfield-Mask: 0x01)                            */
/* =========================================================  SMCFG  ========================================================= */
#define TIMER14_SMCFG_MSM_Pos             (7UL)                     /*!< MSM (Bit 7)                                           */
#define TIMER14_SMCFG_MSM_Msk             (0x80UL)                  /*!< MSM (Bitfield-Mask: 0x01)                             */
#define TIMER14_SMCFG_TRGS_Pos            (4UL)                     /*!< TRGS (Bit 4)                                          */
#define TIMER14_SMCFG_TRGS_Msk            (0x70UL)                  /*!< TRGS (Bitfield-Mask: 0x07)                            */
#define TIMER14_SMCFG_SMC_Pos             (0UL)                     /*!< SMC (Bit 0)                                           */
#define TIMER14_SMCFG_SMC_Msk             (0x7UL)                   /*!< SMC (Bitfield-Mask: 0x07)                             */
/* =======================================================  DMAINTEN  ======================================================== */
#define TIMER14_DMAINTEN_TRGDEN_Pos       (14UL)                    /*!< TRGDEN (Bit 14)                                       */
#define TIMER14_DMAINTEN_TRGDEN_Msk       (0x4000UL)                /*!< TRGDEN (Bitfield-Mask: 0x01)                          */
#define TIMER14_DMAINTEN_CMTDEN_Pos       (13UL)                    /*!< CMTDEN (Bit 13)                                       */
#define TIMER14_DMAINTEN_CMTDEN_Msk       (0x2000UL)                /*!< CMTDEN (Bitfield-Mask: 0x01)                          */
#define TIMER14_DMAINTEN_CH1DEN_Pos       (10UL)                    /*!< CH1DEN (Bit 10)                                       */
#define TIMER14_DMAINTEN_CH1DEN_Msk       (0x400UL)                 /*!< CH1DEN (Bitfield-Mask: 0x01)                          */
#define TIMER14_DMAINTEN_CH0DEN_Pos       (9UL)                     /*!< CH0DEN (Bit 9)                                        */
#define TIMER14_DMAINTEN_CH0DEN_Msk       (0x200UL)                 /*!< CH0DEN (Bitfield-Mask: 0x01)                          */
#define TIMER14_DMAINTEN_UPDEN_Pos        (8UL)                     /*!< UPDEN (Bit 8)                                         */
#define TIMER14_DMAINTEN_UPDEN_Msk        (0x100UL)                 /*!< UPDEN (Bitfield-Mask: 0x01)                           */
#define TIMER14_DMAINTEN_BRKIE_Pos        (7UL)                     /*!< BRKIE (Bit 7)                                         */
#define TIMER14_DMAINTEN_BRKIE_Msk        (0x80UL)                  /*!< BRKIE (Bitfield-Mask: 0x01)                           */
#define TIMER14_DMAINTEN_TRGIE_Pos        (6UL)                     /*!< TRGIE (Bit 6)                                         */
#define TIMER14_DMAINTEN_TRGIE_Msk        (0x40UL)                  /*!< TRGIE (Bitfield-Mask: 0x01)                           */
#define TIMER14_DMAINTEN_CMTIE_Pos        (5UL)                     /*!< CMTIE (Bit 5)                                         */
#define TIMER14_DMAINTEN_CMTIE_Msk        (0x20UL)                  /*!< CMTIE (Bitfield-Mask: 0x01)                           */
#define TIMER14_DMAINTEN_CH1IE_Pos        (2UL)                     /*!< CH1IE (Bit 2)                                         */
#define TIMER14_DMAINTEN_CH1IE_Msk        (0x4UL)                   /*!< CH1IE (Bitfield-Mask: 0x01)                           */
#define TIMER14_DMAINTEN_CH0IE_Pos        (1UL)                     /*!< CH0IE (Bit 1)                                         */
#define TIMER14_DMAINTEN_CH0IE_Msk        (0x2UL)                   /*!< CH0IE (Bitfield-Mask: 0x01)                           */
#define TIMER14_DMAINTEN_UPIE_Pos         (0UL)                     /*!< UPIE (Bit 0)                                          */
#define TIMER14_DMAINTEN_UPIE_Msk         (0x1UL)                   /*!< UPIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTF  ========================================================== */
#define TIMER14_INTF_CH1OF_Pos            (10UL)                    /*!< CH1OF (Bit 10)                                        */
#define TIMER14_INTF_CH1OF_Msk            (0x400UL)                 /*!< CH1OF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_CH0OF_Pos            (9UL)                     /*!< CH0OF (Bit 9)                                         */
#define TIMER14_INTF_CH0OF_Msk            (0x200UL)                 /*!< CH0OF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_BRKIF_Pos            (7UL)                     /*!< BRKIF (Bit 7)                                         */
#define TIMER14_INTF_BRKIF_Msk            (0x80UL)                  /*!< BRKIF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_TRGIF_Pos            (6UL)                     /*!< TRGIF (Bit 6)                                         */
#define TIMER14_INTF_TRGIF_Msk            (0x40UL)                  /*!< TRGIF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_CMTIF_Pos            (5UL)                     /*!< CMTIF (Bit 5)                                         */
#define TIMER14_INTF_CMTIF_Msk            (0x20UL)                  /*!< CMTIF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_CH1IF_Pos            (2UL)                     /*!< CH1IF (Bit 2)                                         */
#define TIMER14_INTF_CH1IF_Msk            (0x4UL)                   /*!< CH1IF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_CH0IF_Pos            (1UL)                     /*!< CH0IF (Bit 1)                                         */
#define TIMER14_INTF_CH0IF_Msk            (0x2UL)                   /*!< CH0IF (Bitfield-Mask: 0x01)                           */
#define TIMER14_INTF_UPIF_Pos             (0UL)                     /*!< UPIF (Bit 0)                                          */
#define TIMER14_INTF_UPIF_Msk             (0x1UL)                   /*!< UPIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SWEVG  ========================================================= */
#define TIMER14_SWEVG_BRKG_Pos            (7UL)                     /*!< BRKG (Bit 7)                                          */
#define TIMER14_SWEVG_BRKG_Msk            (0x80UL)                  /*!< BRKG (Bitfield-Mask: 0x01)                            */
#define TIMER14_SWEVG_TRGG_Pos            (6UL)                     /*!< TRGG (Bit 6)                                          */
#define TIMER14_SWEVG_TRGG_Msk            (0x40UL)                  /*!< TRGG (Bitfield-Mask: 0x01)                            */
#define TIMER14_SWEVG_CMTG_Pos            (5UL)                     /*!< CMTG (Bit 5)                                          */
#define TIMER14_SWEVG_CMTG_Msk            (0x20UL)                  /*!< CMTG (Bitfield-Mask: 0x01)                            */
#define TIMER14_SWEVG_CH1G_Pos            (2UL)                     /*!< CH1G (Bit 2)                                          */
#define TIMER14_SWEVG_CH1G_Msk            (0x4UL)                   /*!< CH1G (Bitfield-Mask: 0x01)                            */
#define TIMER14_SWEVG_CH0G_Pos            (1UL)                     /*!< CH0G (Bit 1)                                          */
#define TIMER14_SWEVG_CH0G_Msk            (0x2UL)                   /*!< CH0G (Bitfield-Mask: 0x01)                            */
#define TIMER14_SWEVG_UPG_Pos             (0UL)                     /*!< UPG (Bit 0)                                           */
#define TIMER14_SWEVG_UPG_Msk             (0x1UL)                   /*!< UPG (Bitfield-Mask: 0x01)                             */
/* =====================================================  CHCTL0_Output  ===================================================== */
#define TIMER14_CHCTL0_Output_CH1COMCTL_Pos (12UL)                  /*!< CH1COMCTL (Bit 12)                                    */
#define TIMER14_CHCTL0_Output_CH1COMCTL_Msk (0x7000UL)              /*!< CH1COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER14_CHCTL0_Output_CH1COMSEN_Pos (11UL)                  /*!< CH1COMSEN (Bit 11)                                    */
#define TIMER14_CHCTL0_Output_CH1COMSEN_Msk (0x800UL)               /*!< CH1COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER14_CHCTL0_Output_CH1COMFEN_Pos (10UL)                  /*!< CH1COMFEN (Bit 10)                                    */
#define TIMER14_CHCTL0_Output_CH1COMFEN_Msk (0x400UL)               /*!< CH1COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER14_CHCTL0_Output_CH1MS_Pos   (8UL)                     /*!< CH1MS (Bit 8)                                         */
#define TIMER14_CHCTL0_Output_CH1MS_Msk   (0x300UL)                 /*!< CH1MS (Bitfield-Mask: 0x03)                           */
#define TIMER14_CHCTL0_Output_CH0COMCTL_Pos (4UL)                   /*!< CH0COMCTL (Bit 4)                                     */
#define TIMER14_CHCTL0_Output_CH0COMCTL_Msk (0x70UL)                /*!< CH0COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER14_CHCTL0_Output_CH0COMSEN_Pos (3UL)                   /*!< CH0COMSEN (Bit 3)                                     */
#define TIMER14_CHCTL0_Output_CH0COMSEN_Msk (0x8UL)                 /*!< CH0COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER14_CHCTL0_Output_CH0COMFEN_Pos (2UL)                   /*!< CH0COMFEN (Bit 2)                                     */
#define TIMER14_CHCTL0_Output_CH0COMFEN_Msk (0x4UL)                 /*!< CH0COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER14_CHCTL0_Output_CH0MS_Pos   (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER14_CHCTL0_Output_CH0MS_Msk   (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL0_Input  ====================================================== */
#define TIMER14_CHCTL0_Input_CH1CAPFLT_Pos (12UL)                   /*!< CH1CAPFLT (Bit 12)                                    */
#define TIMER14_CHCTL0_Input_CH1CAPFLT_Msk (0xf000UL)               /*!< CH1CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER14_CHCTL0_Input_CH1CAPPSC_Pos (10UL)                   /*!< CH1CAPPSC (Bit 10)                                    */
#define TIMER14_CHCTL0_Input_CH1CAPPSC_Msk (0xc00UL)                /*!< CH1CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER14_CHCTL0_Input_CH1MS_Pos    (8UL)                     /*!< CH1MS (Bit 8)                                         */
#define TIMER14_CHCTL0_Input_CH1MS_Msk    (0x300UL)                 /*!< CH1MS (Bitfield-Mask: 0x03)                           */
#define TIMER14_CHCTL0_Input_CH0CAPFLT_Pos (4UL)                    /*!< CH0CAPFLT (Bit 4)                                     */
#define TIMER14_CHCTL0_Input_CH0CAPFLT_Msk (0xf0UL)                 /*!< CH0CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER14_CHCTL0_Input_CH0CAPPSC_Pos (2UL)                    /*!< CH0CAPPSC (Bit 2)                                     */
#define TIMER14_CHCTL0_Input_CH0CAPPSC_Msk (0xcUL)                  /*!< CH0CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER14_CHCTL0_Input_CH0MS_Pos    (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER14_CHCTL0_Input_CH0MS_Msk    (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* ========================================================  CHCTL2  ========================================================= */
#define TIMER14_CHCTL2_CH1NP_Pos          (7UL)                     /*!< CH1NP (Bit 7)                                         */
#define TIMER14_CHCTL2_CH1NP_Msk          (0x80UL)                  /*!< CH1NP (Bitfield-Mask: 0x01)                           */
#define TIMER14_CHCTL2_CH1P_Pos           (5UL)                     /*!< CH1P (Bit 5)                                          */
#define TIMER14_CHCTL2_CH1P_Msk           (0x20UL)                  /*!< CH1P (Bitfield-Mask: 0x01)                            */
#define TIMER14_CHCTL2_CH1EN_Pos          (4UL)                     /*!< CH1EN (Bit 4)                                         */
#define TIMER14_CHCTL2_CH1EN_Msk          (0x10UL)                  /*!< CH1EN (Bitfield-Mask: 0x01)                           */
#define TIMER14_CHCTL2_CH0NP_Pos          (3UL)                     /*!< CH0NP (Bit 3)                                         */
#define TIMER14_CHCTL2_CH0NP_Msk          (0x8UL)                   /*!< CH0NP (Bitfield-Mask: 0x01)                           */
#define TIMER14_CHCTL2_CH0NEN_Pos         (2UL)                     /*!< CH0NEN (Bit 2)                                        */
#define TIMER14_CHCTL2_CH0NEN_Msk         (0x4UL)                   /*!< CH0NEN (Bitfield-Mask: 0x01)                          */
#define TIMER14_CHCTL2_CH0P_Pos           (1UL)                     /*!< CH0P (Bit 1)                                          */
#define TIMER14_CHCTL2_CH0P_Msk           (0x2UL)                   /*!< CH0P (Bitfield-Mask: 0x01)                            */
#define TIMER14_CHCTL2_CH0EN_Pos          (0UL)                     /*!< CH0EN (Bit 0)                                         */
#define TIMER14_CHCTL2_CH0EN_Msk          (0x1UL)                   /*!< CH0EN (Bitfield-Mask: 0x01)                           */
/* ==========================================================  CNT  ========================================================== */
#define TIMER14_CNT_CNT_Pos               (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIMER14_CNT_CNT_Msk               (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define TIMER14_PSC_PSC_Pos               (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIMER14_PSC_PSC_Msk               (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  CAR  ========================================================== */
#define TIMER14_CAR_CARL_Pos              (0UL)                     /*!< CARL (Bit 0)                                          */
#define TIMER14_CAR_CARL_Msk              (0xffffUL)                /*!< CARL (Bitfield-Mask: 0xffff)                          */
/* =========================================================  CREP  ========================================================== */
#define TIMER14_CREP_CREP_Pos             (0UL)                     /*!< CREP (Bit 0)                                          */
#define TIMER14_CREP_CREP_Msk             (0xffUL)                  /*!< CREP (Bitfield-Mask: 0xff)                            */
/* =========================================================  CH0CV  ========================================================= */
#define TIMER14_CH0CV_CH0VAL_Pos          (0UL)                     /*!< CH0VAL (Bit 0)                                        */
#define TIMER14_CH0CV_CH0VAL_Msk          (0xffffUL)                /*!< CH0VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CH1CV  ========================================================= */
#define TIMER14_CH1CV_CH1VAL_Pos          (0UL)                     /*!< CH1VAL (Bit 0)                                        */
#define TIMER14_CH1CV_CH1VAL_Msk          (0xffffUL)                /*!< CH1VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CCHP  ========================================================== */
#define TIMER14_CCHP_POEN_Pos             (15UL)                    /*!< POEN (Bit 15)                                         */
#define TIMER14_CCHP_POEN_Msk             (0x8000UL)                /*!< POEN (Bitfield-Mask: 0x01)                            */
#define TIMER14_CCHP_OAEN_Pos             (14UL)                    /*!< OAEN (Bit 14)                                         */
#define TIMER14_CCHP_OAEN_Msk             (0x4000UL)                /*!< OAEN (Bitfield-Mask: 0x01)                            */
#define TIMER14_CCHP_BRKP_Pos             (13UL)                    /*!< BRKP (Bit 13)                                         */
#define TIMER14_CCHP_BRKP_Msk             (0x2000UL)                /*!< BRKP (Bitfield-Mask: 0x01)                            */
#define TIMER14_CCHP_BRKEN_Pos            (12UL)                    /*!< BRKEN (Bit 12)                                        */
#define TIMER14_CCHP_BRKEN_Msk            (0x1000UL)                /*!< BRKEN (Bitfield-Mask: 0x01)                           */
#define TIMER14_CCHP_ROS_Pos              (11UL)                    /*!< ROS (Bit 11)                                          */
#define TIMER14_CCHP_ROS_Msk              (0x800UL)                 /*!< ROS (Bitfield-Mask: 0x01)                             */
#define TIMER14_CCHP_IOS_Pos              (10UL)                    /*!< IOS (Bit 10)                                          */
#define TIMER14_CCHP_IOS_Msk              (0x400UL)                 /*!< IOS (Bitfield-Mask: 0x01)                             */
#define TIMER14_CCHP_PROT_Pos             (8UL)                     /*!< PROT (Bit 8)                                          */
#define TIMER14_CCHP_PROT_Msk             (0x300UL)                 /*!< PROT (Bitfield-Mask: 0x03)                            */
#define TIMER14_CCHP_DTCFG_Pos            (0UL)                     /*!< DTCFG (Bit 0)                                         */
#define TIMER14_CCHP_DTCFG_Msk            (0xffUL)                  /*!< DTCFG (Bitfield-Mask: 0xff)                           */
/* ========================================================  DMACFG  ========================================================= */
#define TIMER14_DMACFG_DMATC_Pos          (8UL)                     /*!< DMATC (Bit 8)                                         */
#define TIMER14_DMACFG_DMATC_Msk          (0x1f00UL)                /*!< DMATC (Bitfield-Mask: 0x1f)                           */
#define TIMER14_DMACFG_DMATA_Pos          (0UL)                     /*!< DMATA (Bit 0)                                         */
#define TIMER14_DMACFG_DMATA_Msk          (0x1fUL)                  /*!< DMATA (Bitfield-Mask: 0x1f)                           */
/* =========================================================  DMATB  ========================================================= */
#define TIMER14_DMATB_DMATB_Pos           (0UL)                     /*!< DMATB (Bit 0)                                         */
#define TIMER14_DMATB_DMATB_Msk           (0xffffUL)                /*!< DMATB (Bitfield-Mask: 0xffff)                         */
/* ==========================================================  CFG  ========================================================== */
#define TIMER14_CFG_CHVSEL_Pos            (1UL)                     /*!< CHVSEL (Bit 1)                                        */
#define TIMER14_CFG_CHVSEL_Msk            (0x2UL)                   /*!< CHVSEL (Bitfield-Mask: 0x01)                          */
#define TIMER14_CFG_OUTSEL_Pos            (0UL)                     /*!< OUTSEL (Bit 0)                                        */
#define TIMER14_CFG_OUTSEL_Msk            (0x1UL)                   /*!< OUTSEL (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                          TIMER15                                          ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define TIMER15_CTL0_CKDIV_Pos            (8UL)                     /*!< CKDIV (Bit 8)                                         */
#define TIMER15_CTL0_CKDIV_Msk            (0x300UL)                 /*!< CKDIV (Bitfield-Mask: 0x03)                           */
#define TIMER15_CTL0_ARSE_Pos             (7UL)                     /*!< ARSE (Bit 7)                                          */
#define TIMER15_CTL0_ARSE_Msk             (0x80UL)                  /*!< ARSE (Bitfield-Mask: 0x01)                            */
#define TIMER15_CTL0_SPM_Pos              (3UL)                     /*!< SPM (Bit 3)                                           */
#define TIMER15_CTL0_SPM_Msk              (0x8UL)                   /*!< SPM (Bitfield-Mask: 0x01)                             */
#define TIMER15_CTL0_UPS_Pos              (2UL)                     /*!< UPS (Bit 2)                                           */
#define TIMER15_CTL0_UPS_Msk              (0x4UL)                   /*!< UPS (Bitfield-Mask: 0x01)                             */
#define TIMER15_CTL0_UPDIS_Pos            (1UL)                     /*!< UPDIS (Bit 1)                                         */
#define TIMER15_CTL0_UPDIS_Msk            (0x2UL)                   /*!< UPDIS (Bitfield-Mask: 0x01)                           */
#define TIMER15_CTL0_CEN_Pos              (0UL)                     /*!< CEN (Bit 0)                                           */
#define TIMER15_CTL0_CEN_Msk              (0x1UL)                   /*!< CEN (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL1  ========================================================== */
#define TIMER15_CTL1_ISO0N_Pos            (9UL)                     /*!< ISO0N (Bit 9)                                         */
#define TIMER15_CTL1_ISO0N_Msk            (0x200UL)                 /*!< ISO0N (Bitfield-Mask: 0x01)                           */
#define TIMER15_CTL1_ISO0_Pos             (8UL)                     /*!< ISO0 (Bit 8)                                          */
#define TIMER15_CTL1_ISO0_Msk             (0x100UL)                 /*!< ISO0 (Bitfield-Mask: 0x01)                            */
#define TIMER15_CTL1_DMAS_Pos             (3UL)                     /*!< DMAS (Bit 3)                                          */
#define TIMER15_CTL1_DMAS_Msk             (0x8UL)                   /*!< DMAS (Bitfield-Mask: 0x01)                            */
#define TIMER15_CTL1_CCUC_Pos             (2UL)                     /*!< CCUC (Bit 2)                                          */
#define TIMER15_CTL1_CCUC_Msk             (0x4UL)                   /*!< CCUC (Bitfield-Mask: 0x01)                            */
#define TIMER15_CTL1_CCSE_Pos             (0UL)                     /*!< CCSE (Bit 0)                                          */
#define TIMER15_CTL1_CCSE_Msk             (0x1UL)                   /*!< CCSE (Bitfield-Mask: 0x01)                            */
/* =======================================================  DMAINTEN  ======================================================== */
#define TIMER15_DMAINTEN_CH0DEN_Pos       (9UL)                     /*!< CH0DEN (Bit 9)                                        */
#define TIMER15_DMAINTEN_CH0DEN_Msk       (0x200UL)                 /*!< CH0DEN (Bitfield-Mask: 0x01)                          */
#define TIMER15_DMAINTEN_UPDEN_Pos        (8UL)                     /*!< UPDEN (Bit 8)                                         */
#define TIMER15_DMAINTEN_UPDEN_Msk        (0x100UL)                 /*!< UPDEN (Bitfield-Mask: 0x01)                           */
#define TIMER15_DMAINTEN_BRKIE_Pos        (7UL)                     /*!< BRKIE (Bit 7)                                         */
#define TIMER15_DMAINTEN_BRKIE_Msk        (0x80UL)                  /*!< BRKIE (Bitfield-Mask: 0x01)                           */
#define TIMER15_DMAINTEN_CMTIE_Pos        (5UL)                     /*!< CMTIE (Bit 5)                                         */
#define TIMER15_DMAINTEN_CMTIE_Msk        (0x20UL)                  /*!< CMTIE (Bitfield-Mask: 0x01)                           */
#define TIMER15_DMAINTEN_CH0IE_Pos        (1UL)                     /*!< CH0IE (Bit 1)                                         */
#define TIMER15_DMAINTEN_CH0IE_Msk        (0x2UL)                   /*!< CH0IE (Bitfield-Mask: 0x01)                           */
#define TIMER15_DMAINTEN_UPIE_Pos         (0UL)                     /*!< UPIE (Bit 0)                                          */
#define TIMER15_DMAINTEN_UPIE_Msk         (0x1UL)                   /*!< UPIE (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTF  ========================================================== */
#define TIMER15_INTF_CH0OF_Pos            (9UL)                     /*!< CH0OF (Bit 9)                                         */
#define TIMER15_INTF_CH0OF_Msk            (0x200UL)                 /*!< CH0OF (Bitfield-Mask: 0x01)                           */
#define TIMER15_INTF_BRKIF_Pos            (7UL)                     /*!< BRKIF (Bit 7)                                         */
#define TIMER15_INTF_BRKIF_Msk            (0x80UL)                  /*!< BRKIF (Bitfield-Mask: 0x01)                           */
#define TIMER15_INTF_CMTIF_Pos            (5UL)                     /*!< CMTIF (Bit 5)                                         */
#define TIMER15_INTF_CMTIF_Msk            (0x20UL)                  /*!< CMTIF (Bitfield-Mask: 0x01)                           */
#define TIMER15_INTF_CH0IF_Pos            (1UL)                     /*!< CH0IF (Bit 1)                                         */
#define TIMER15_INTF_CH0IF_Msk            (0x2UL)                   /*!< CH0IF (Bitfield-Mask: 0x01)                           */
#define TIMER15_INTF_UPIF_Pos             (0UL)                     /*!< UPIF (Bit 0)                                          */
#define TIMER15_INTF_UPIF_Msk             (0x1UL)                   /*!< UPIF (Bitfield-Mask: 0x01)                            */
/* =========================================================  SWEVG  ========================================================= */
#define TIMER15_SWEVG_BRKG_Pos            (7UL)                     /*!< BRKG (Bit 7)                                          */
#define TIMER15_SWEVG_BRKG_Msk            (0x80UL)                  /*!< BRKG (Bitfield-Mask: 0x01)                            */
#define TIMER15_SWEVG_CMTG_Pos            (5UL)                     /*!< CMTG (Bit 5)                                          */
#define TIMER15_SWEVG_CMTG_Msk            (0x20UL)                  /*!< CMTG (Bitfield-Mask: 0x01)                            */
#define TIMER15_SWEVG_CH0G_Pos            (1UL)                     /*!< CH0G (Bit 1)                                          */
#define TIMER15_SWEVG_CH0G_Msk            (0x2UL)                   /*!< CH0G (Bitfield-Mask: 0x01)                            */
#define TIMER15_SWEVG_UPG_Pos             (0UL)                     /*!< UPG (Bit 0)                                           */
#define TIMER15_SWEVG_UPG_Msk             (0x1UL)                   /*!< UPG (Bitfield-Mask: 0x01)                             */
/* =====================================================  CHCTL0_Output  ===================================================== */
#define TIMER15_CHCTL0_Output_CH0COMCTL_Pos (4UL)                   /*!< CH0COMCTL (Bit 4)                                     */
#define TIMER15_CHCTL0_Output_CH0COMCTL_Msk (0x70UL)                /*!< CH0COMCTL (Bitfield-Mask: 0x07)                       */
#define TIMER15_CHCTL0_Output_CH0COMSEN_Pos (3UL)                   /*!< CH0COMSEN (Bit 3)                                     */
#define TIMER15_CHCTL0_Output_CH0COMSEN_Msk (0x8UL)                 /*!< CH0COMSEN (Bitfield-Mask: 0x01)                       */
#define TIMER15_CHCTL0_Output_CH0COMFEN_Pos (2UL)                   /*!< CH0COMFEN (Bit 2)                                     */
#define TIMER15_CHCTL0_Output_CH0COMFEN_Msk (0x4UL)                 /*!< CH0COMFEN (Bitfield-Mask: 0x01)                       */
#define TIMER15_CHCTL0_Output_CH0MS_Pos   (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER15_CHCTL0_Output_CH0MS_Msk   (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* =====================================================  CHCTL0_Input  ====================================================== */
#define TIMER15_CHCTL0_Input_CH0CAPFLT_Pos (4UL)                    /*!< CH0CAPFLT (Bit 4)                                     */
#define TIMER15_CHCTL0_Input_CH0CAPFLT_Msk (0xf0UL)                 /*!< CH0CAPFLT (Bitfield-Mask: 0x0f)                       */
#define TIMER15_CHCTL0_Input_CH0CAPPSC_Pos (2UL)                    /*!< CH0CAPPSC (Bit 2)                                     */
#define TIMER15_CHCTL0_Input_CH0CAPPSC_Msk (0xcUL)                  /*!< CH0CAPPSC (Bitfield-Mask: 0x03)                       */
#define TIMER15_CHCTL0_Input_CH0MS_Pos    (0UL)                     /*!< CH0MS (Bit 0)                                         */
#define TIMER15_CHCTL0_Input_CH0MS_Msk    (0x3UL)                   /*!< CH0MS (Bitfield-Mask: 0x03)                           */
/* ========================================================  CHCTL2  ========================================================= */
#define TIMER15_CHCTL2_CH0NP_Pos          (3UL)                     /*!< CH0NP (Bit 3)                                         */
#define TIMER15_CHCTL2_CH0NP_Msk          (0x8UL)                   /*!< CH0NP (Bitfield-Mask: 0x01)                           */
#define TIMER15_CHCTL2_CH0NEN_Pos         (2UL)                     /*!< CH0NEN (Bit 2)                                        */
#define TIMER15_CHCTL2_CH0NEN_Msk         (0x4UL)                   /*!< CH0NEN (Bitfield-Mask: 0x01)                          */
#define TIMER15_CHCTL2_CH0P_Pos           (1UL)                     /*!< CH0P (Bit 1)                                          */
#define TIMER15_CHCTL2_CH0P_Msk           (0x2UL)                   /*!< CH0P (Bitfield-Mask: 0x01)                            */
#define TIMER15_CHCTL2_CH0EN_Pos          (0UL)                     /*!< CH0EN (Bit 0)                                         */
#define TIMER15_CHCTL2_CH0EN_Msk          (0x1UL)                   /*!< CH0EN (Bitfield-Mask: 0x01)                           */
/* ==========================================================  CNT  ========================================================== */
#define TIMER15_CNT_CNT_Pos               (0UL)                     /*!< CNT (Bit 0)                                           */
#define TIMER15_CNT_CNT_Msk               (0xffffUL)                /*!< CNT (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  PSC  ========================================================== */
#define TIMER15_PSC_PSC_Pos               (0UL)                     /*!< PSC (Bit 0)                                           */
#define TIMER15_PSC_PSC_Msk               (0xffffUL)                /*!< PSC (Bitfield-Mask: 0xffff)                           */
/* ==========================================================  CAR  ========================================================== */
#define TIMER15_CAR_CARL_Pos              (0UL)                     /*!< CARL (Bit 0)                                          */
#define TIMER15_CAR_CARL_Msk              (0xffffUL)                /*!< CARL (Bitfield-Mask: 0xffff)                          */
/* =========================================================  CREP  ========================================================== */
#define TIMER15_CREP_CREP_Pos             (0UL)                     /*!< CREP (Bit 0)                                          */
#define TIMER15_CREP_CREP_Msk             (0xffUL)                  /*!< CREP (Bitfield-Mask: 0xff)                            */
/* =========================================================  CH0CV  ========================================================= */
#define TIMER15_CH0CV_CH0VAL_Pos          (0UL)                     /*!< CH0VAL (Bit 0)                                        */
#define TIMER15_CH0CV_CH0VAL_Msk          (0xffffUL)                /*!< CH0VAL (Bitfield-Mask: 0xffff)                        */
/* =========================================================  CCHP  ========================================================== */
#define TIMER15_CCHP_POEN_Pos             (15UL)                    /*!< POEN (Bit 15)                                         */
#define TIMER15_CCHP_POEN_Msk             (0x8000UL)                /*!< POEN (Bitfield-Mask: 0x01)                            */
#define TIMER15_CCHP_OAEN_Pos             (14UL)                    /*!< OAEN (Bit 14)                                         */
#define TIMER15_CCHP_OAEN_Msk             (0x4000UL)                /*!< OAEN (Bitfield-Mask: 0x01)                            */
#define TIMER15_CCHP_BRKP_Pos             (13UL)                    /*!< BRKP (Bit 13)                                         */
#define TIMER15_CCHP_BRKP_Msk             (0x2000UL)                /*!< BRKP (Bitfield-Mask: 0x01)                            */
#define TIMER15_CCHP_BRKEN_Pos            (12UL)                    /*!< BRKEN (Bit 12)                                        */
#define TIMER15_CCHP_BRKEN_Msk            (0x1000UL)                /*!< BRKEN (Bitfield-Mask: 0x01)                           */
#define TIMER15_CCHP_ROS_Pos              (11UL)                    /*!< ROS (Bit 11)                                          */
#define TIMER15_CCHP_ROS_Msk              (0x800UL)                 /*!< ROS (Bitfield-Mask: 0x01)                             */
#define TIMER15_CCHP_IOS_Pos              (10UL)                    /*!< IOS (Bit 10)                                          */
#define TIMER15_CCHP_IOS_Msk              (0x400UL)                 /*!< IOS (Bitfield-Mask: 0x01)                             */
#define TIMER15_CCHP_PROT_Pos             (8UL)                     /*!< PROT (Bit 8)                                          */
#define TIMER15_CCHP_PROT_Msk             (0x300UL)                 /*!< PROT (Bitfield-Mask: 0x03)                            */
#define TIMER15_CCHP_DTCFG_Pos            (0UL)                     /*!< DTCFG (Bit 0)                                         */
#define TIMER15_CCHP_DTCFG_Msk            (0xffUL)                  /*!< DTCFG (Bitfield-Mask: 0xff)                           */
/* ========================================================  DMACFG  ========================================================= */
#define TIMER15_DMACFG_DMATC_Pos          (8UL)                     /*!< DMATC (Bit 8)                                         */
#define TIMER15_DMACFG_DMATC_Msk          (0x1f00UL)                /*!< DMATC (Bitfield-Mask: 0x1f)                           */
#define TIMER15_DMACFG_DMATA_Pos          (0UL)                     /*!< DMATA (Bit 0)                                         */
#define TIMER15_DMACFG_DMATA_Msk          (0x1fUL)                  /*!< DMATA (Bitfield-Mask: 0x1f)                           */
/* =========================================================  DMATB  ========================================================= */
#define TIMER15_DMATB_DMATB_Pos           (0UL)                     /*!< DMATB (Bit 0)                                         */
#define TIMER15_DMATB_DMATB_Msk           (0xffffUL)                /*!< DMATB (Bitfield-Mask: 0xffff)                         */
/* ==========================================================  CFG  ========================================================== */
#define TIMER15_CFG_OUTSEL_Pos            (0UL)                     /*!< OUTSEL (Bit 0)                                        */
#define TIMER15_CFG_OUTSEL_Msk            (0x1UL)                   /*!< OUTSEL (Bitfield-Mask: 0x01)                          */
#define TIMER15_CFG_CHVSEL_Pos            (1UL)                     /*!< CHVSEL (Bit 1)                                        */
#define TIMER15_CFG_CHVSEL_Msk            (0x2UL)                   /*!< CHVSEL (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                          USART0                                           ================ */
/* =========================================================================================================================== */

/* =========================================================  CTL0  ========================================================== */
#define USART_CTL0_EBIE_Pos              (27UL)                    /*!< EBIE (Bit 27)                                         */
#define USART_CTL0_EBIE_Msk              (0x8000000UL)             /*!< EBIE (Bitfield-Mask: 0x01)                            */
#define USART_CTL0_RTIE_Pos              (26UL)                    /*!< RTIE (Bit 26)                                         */
#define USART_CTL0_RTIE_Msk              (0x4000000UL)             /*!< RTIE (Bitfield-Mask: 0x01)                            */
#define USART_CTL0_DEA_Pos               (21UL)                    /*!< DEA (Bit 21)                                          */
#define USART_CTL0_DEA_Msk               (0x3e00000UL)             /*!< DEA (Bitfield-Mask: 0x1f)                             */
#define USART_CTL0_DED_Pos               (16UL)                    /*!< DED (Bit 16)                                          */
#define USART_CTL0_DED_Msk               (0x1f0000UL)              /*!< DED (Bitfield-Mask: 0x1f)                             */
#define USART_CTL0_OVSMOD_Pos            (15UL)                    /*!< OVSMOD (Bit 15)                                       */
#define USART_CTL0_OVSMOD_Msk            (0x8000UL)                /*!< OVSMOD (Bitfield-Mask: 0x01)                          */
#define USART_CTL0_AMIE_Pos              (14UL)                    /*!< AMIE (Bit 14)                                         */
#define USART_CTL0_AMIE_Msk              (0x4000UL)                /*!< AMIE (Bitfield-Mask: 0x01)                            */
#define USART_CTL0_MEN_Pos               (13UL)                    /*!< MEN (Bit 13)                                          */
#define USART_CTL0_MEN_Msk               (0x2000UL)                /*!< MEN (Bitfield-Mask: 0x01)                             */
#define USART_CTL0_WL_Pos                (12UL)                    /*!< WL (Bit 12)                                           */
#define USART_CTL0_WL_Msk                (0x1000UL)                /*!< WL (Bitfield-Mask: 0x01)                              */
#define USART_CTL0_WM_Pos                (11UL)                    /*!< WM (Bit 11)                                           */
#define USART_CTL0_WM_Msk                (0x800UL)                 /*!< WM (Bitfield-Mask: 0x01)                              */
#define USART_CTL0_PCEN_Pos              (10UL)                    /*!< PCEN (Bit 10)                                         */
#define USART_CTL0_PCEN_Msk              (0x400UL)                 /*!< PCEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL0_PM_Pos                (9UL)                     /*!< PM (Bit 9)                                            */
#define USART_CTL0_PM_Msk                (0x200UL)                 /*!< PM (Bitfield-Mask: 0x01)                              */
#define USART_CTL0_PERRIE_Pos            (8UL)                     /*!< PERRIE (Bit 8)                                        */
#define USART_CTL0_PERRIE_Msk            (0x100UL)                 /*!< PERRIE (Bitfield-Mask: 0x01)                          */
#define USART_CTL0_TBEIE_Pos             (7UL)                     /*!< TBEIE (Bit 7)                                         */
#define USART_CTL0_TBEIE_Msk             (0x80UL)                  /*!< TBEIE (Bitfield-Mask: 0x01)                           */
#define USART_CTL0_TCIE_Pos              (6UL)                     /*!< TCIE (Bit 6)                                          */
#define USART_CTL0_TCIE_Msk              (0x40UL)                  /*!< TCIE (Bitfield-Mask: 0x01)                            */
#define USART_CTL0_RBNEIE_Pos            (5UL)                     /*!< RBNEIE (Bit 5)                                        */
#define USART_CTL0_RBNEIE_Msk            (0x20UL)                  /*!< RBNEIE (Bitfield-Mask: 0x01)                          */
#define USART_CTL0_IDLEIE_Pos            (4UL)                     /*!< IDLEIE (Bit 4)                                        */
#define USART_CTL0_IDLEIE_Msk            (0x10UL)                  /*!< IDLEIE (Bitfield-Mask: 0x01)                          */
#define USART_CTL0_TEN_Pos               (3UL)                     /*!< TEN (Bit 3)                                           */
#define USART_CTL0_TEN_Msk               (0x8UL)                   /*!< TEN (Bitfield-Mask: 0x01)                             */
#define USART_CTL0_REN_Pos               (2UL)                     /*!< REN (Bit 2)                                           */
#define USART_CTL0_REN_Msk               (0x4UL)                   /*!< REN (Bitfield-Mask: 0x01)                             */
#define USART_CTL0_UESM_Pos              (1UL)                     /*!< UESM (Bit 1)                                          */
#define USART_CTL0_UESM_Msk              (0x2UL)                   /*!< UESM (Bitfield-Mask: 0x01)                            */
#define USART_CTL0_UEN_Pos               (0UL)                     /*!< UEN (Bit 0)                                           */
#define USART_CTL0_UEN_Msk               (0x1UL)                   /*!< UEN (Bitfield-Mask: 0x01)                             */
/* =========================================================  CTL1  ========================================================== */
#define USART_CTL1_ADDR_Pos              (24UL)                    /*!< ADDR (Bit 24)                                         */
#define USART_CTL1_ADDR_Msk              (0xff000000UL)            /*!< ADDR (Bitfield-Mask: 0xff)                            */
#define USART_CTL1_RTEN_Pos              (23UL)                    /*!< RTEN (Bit 23)                                         */
#define USART_CTL1_RTEN_Msk              (0x800000UL)              /*!< RTEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_ABDM_Pos              (21UL)                    /*!< ABDM (Bit 21)                                         */
#define USART_CTL1_ABDM_Msk              (0x600000UL)              /*!< ABDM (Bitfield-Mask: 0x03)                            */
#define USART_CTL1_ABDEN_Pos             (20UL)                    /*!< ABDEN (Bit 20)                                        */
#define USART_CTL1_ABDEN_Msk             (0x100000UL)              /*!< ABDEN (Bitfield-Mask: 0x01)                           */
#define USART_CTL1_MSBF_Pos              (19UL)                    /*!< MSBF (Bit 19)                                         */
#define USART_CTL1_MSBF_Msk              (0x80000UL)               /*!< MSBF (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_DINV_Pos              (18UL)                    /*!< DINV (Bit 18)                                         */
#define USART_CTL1_DINV_Msk              (0x40000UL)               /*!< DINV (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_TINV_Pos              (17UL)                    /*!< TINV (Bit 17)                                         */
#define USART_CTL1_TINV_Msk              (0x20000UL)               /*!< TINV (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_RINV_Pos              (16UL)                    /*!< RINV (Bit 16)                                         */
#define USART_CTL1_RINV_Msk              (0x10000UL)               /*!< RINV (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_STRP_Pos              (15UL)                    /*!< STRP (Bit 15)                                         */
#define USART_CTL1_STRP_Msk              (0x8000UL)                /*!< STRP (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_LMEN_Pos              (14UL)                    /*!< LMEN (Bit 14)                                         */
#define USART_CTL1_LMEN_Msk              (0x4000UL)                /*!< LMEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_STB_Pos               (12UL)                    /*!< STB (Bit 12)                                          */
#define USART_CTL1_STB_Msk               (0x3000UL)                /*!< STB (Bitfield-Mask: 0x03)                             */
#define USART_CTL1_CKEN_Pos              (11UL)                    /*!< CKEN (Bit 11)                                         */
#define USART_CTL1_CKEN_Msk              (0x800UL)                 /*!< CKEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_CPL_Pos               (10UL)                    /*!< CPL (Bit 10)                                          */
#define USART_CTL1_CPL_Msk               (0x400UL)                 /*!< CPL (Bitfield-Mask: 0x01)                             */
#define USART_CTL1_CPH_Pos               (9UL)                     /*!< CPH (Bit 9)                                           */
#define USART_CTL1_CPH_Msk               (0x200UL)                 /*!< CPH (Bitfield-Mask: 0x01)                             */
#define USART_CTL1_CLEN_Pos              (8UL)                     /*!< CLEN (Bit 8)                                          */
#define USART_CTL1_CLEN_Msk              (0x100UL)                 /*!< CLEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL1_LBDIE_Pos             (6UL)                     /*!< LBDIE (Bit 6)                                         */
#define USART_CTL1_LBDIE_Msk             (0x40UL)                  /*!< LBDIE (Bitfield-Mask: 0x01)                           */
#define USART_CTL1_LBLEN_Pos             (5UL)                     /*!< LBLEN (Bit 5)                                         */
#define USART_CTL1_LBLEN_Msk             (0x20UL)                  /*!< LBLEN (Bitfield-Mask: 0x01)                           */
#define USART_CTL1_ADDM_Pos              (4UL)                     /*!< ADDM (Bit 4)                                          */
#define USART_CTL1_ADDM_Msk              (0x10UL)                  /*!< ADDM (Bitfield-Mask: 0x01)                            */
/* =========================================================  CTL2  ========================================================== */
#define USART_CTL2_WUIE_Pos              (22UL)                    /*!< WUIE (Bit 22)                                         */
#define USART_CTL2_WUIE_Msk              (0x400000UL)              /*!< WUIE (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_WUM_Pos               (20UL)                    /*!< WUM (Bit 20)                                          */
#define USART_CTL2_WUM_Msk               (0x300000UL)              /*!< WUM (Bitfield-Mask: 0x03)                             */
#define USART_CTL2_SCRTNUM_Pos           (17UL)                    /*!< SCRTNUM (Bit 17)                                      */
#define USART_CTL2_SCRTNUM_Msk           (0xe0000UL)               /*!< SCRTNUM (Bitfield-Mask: 0x07)                         */
#define USART_CTL2_DEP_Pos               (15UL)                    /*!< DEP (Bit 15)                                          */
#define USART_CTL2_DEP_Msk               (0x8000UL)                /*!< DEP (Bitfield-Mask: 0x01)                             */
#define USART_CTL2_DEM_Pos               (14UL)                    /*!< DEM (Bit 14)                                          */
#define USART_CTL2_DEM_Msk               (0x4000UL)                /*!< DEM (Bitfield-Mask: 0x01)                             */
#define USART_CTL2_DDRE_Pos              (13UL)                    /*!< DDRE (Bit 13)                                         */
#define USART_CTL2_DDRE_Msk              (0x2000UL)                /*!< DDRE (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_OVRD_Pos              (12UL)                    /*!< OVRD (Bit 12)                                         */
#define USART_CTL2_OVRD_Msk              (0x1000UL)                /*!< OVRD (Bitfield-Mask: 0x01)                            */
#define USARTCTL2_OSB_Pos               (11UL)                    /*!< OSB (Bit 11)                                          */
#define USART_CTL2_OSB_Msk               (0x800UL)                 /*!< OSB (Bitfield-Mask: 0x01)                             */
#define USART_CTL2_CTSIE_Pos             (10UL)                    /*!< CTSIE (Bit 10)                                        */
#define USART_CTL2_CTSIE_Msk             (0x400UL)                 /*!< CTSIE (Bitfield-Mask: 0x01)                           */
#define USART_CTL2_CTSEN_Pos             (9UL)                     /*!< CTSEN (Bit 9)                                         */
#define USART_CTL2_CTSEN_Msk             (0x200UL)                 /*!< CTSEN (Bitfield-Mask: 0x01)                           */
#define USART_CTL2_RTSEN_Pos             (8UL)                     /*!< RTSEN (Bit 8)                                         */
#define USART_CTL2_RTSEN_Msk             (0x100UL)                 /*!< RTSEN (Bitfield-Mask: 0x01)                           */
#define USART_CTL2_DENT_Pos              (7UL)                     /*!< DENT (Bit 7)                                          */
#define USART_CTL2_DENT_Msk              (0x80UL)                  /*!< DENT (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_DENR_Pos              (6UL)                     /*!< DENR (Bit 6)                                          */
#define USART_CTL2_DENR_Msk              (0x40UL)                  /*!< DENR (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_SCEN_Pos              (5UL)                     /*!< SCEN (Bit 5)                                          */
#define USART_CTL2_SCEN_Msk              (0x20UL)                  /*!< SCEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_NKEN_Pos              (4UL)                     /*!< NKEN (Bit 4)                                          */
#define USART_CTL2_NKEN_Msk              (0x10UL)                  /*!< NKEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_HDEN_Pos              (3UL)                     /*!< HDEN (Bit 3)                                          */
#define USART_CTL2_HDEN_Msk              (0x8UL)                   /*!< HDEN (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_IRLP_Pos              (2UL)                     /*!< IRLP (Bit 2)                                          */
#define USART_CTL2_IRLP_Msk              (0x4UL)                   /*!< IRLP (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_IREN_Pos              (1UL)                     /*!< IREN (Bit 1)                                          */
#define USART_CTL2_IREN_Msk              (0x2UL)                   /*!< IREN (Bitfield-Mask: 0x01)                            */
#define USART_CTL2_ERRIE_Pos             (0UL)                     /*!< ERRIE (Bit 0)                                         */
#define USART_CTL2_ERRIE_Msk             (0x1UL)                   /*!< ERRIE (Bitfield-Mask: 0x01)                           */
/* =========================================================  BAUD  ========================================================== */
#define USART_BAUD_BRR_INT_Pos           (4UL)                     /*!< BRR_INT (Bit 4)                                       */
#define USART_BAUD_BRR_INT_Msk           (0xfff0UL)                /*!< BRR_INT (Bitfield-Mask: 0xfff)                        */
#define USART_BAUD_BRR_FRA_Pos           (0UL)                     /*!< BRR_FRA (Bit 0)                                       */
#define USART_BAUD_BRR_FRA_Msk           (0xfUL)                   /*!< BRR_FRA (Bitfield-Mask: 0x0f)                         */
/* ==========================================================  GP  =========================================================== */
#define USART_GP_GUAT_Pos                (8UL)                     /*!< GUAT (Bit 8)                                          */
#define USART_GP_GUAT_Msk                (0xff00UL)                /*!< GUAT (Bitfield-Mask: 0xff)                            */
#define USART_GP_PSC_Pos                 (0UL)                     /*!< PSC (Bit 0)                                           */
#define USART_GP_PSC_Msk                 (0xffUL)                  /*!< PSC (Bitfield-Mask: 0xff)                             */
/* ==========================================================  RT  =========================================================== */
#define USART_RT_BL_Pos                  (24UL)                    /*!< BL (Bit 24)                                           */
#define USART_RT_BL_Msk                  (0xff000000UL)            /*!< BL (Bitfield-Mask: 0xff)                              */
#define USART_RT_RT_Pos                  (0UL)                     /*!< RT (Bit 0)                                            */
#define USART_RT_RT_Msk                  (0xffffffUL)              /*!< RT (Bitfield-Mask: 0xffffff)                          */
/* ==========================================================  CMD  ========================================================== */
#define USART_CMD_TXFCMD_Pos             (4UL)                     /*!< TXFCMD (Bit 4)                                        */
#define USART_CMD_TXFCMD_Msk             (0x10UL)                  /*!< TXFCMD (Bitfield-Mask: 0x01)                          */
#define USART_CMD_RXFCMD_Pos             (3UL)                     /*!< RXFCMD (Bit 3)                                        */
#define USART_CMD_RXFCMD_Msk             (0x8UL)                   /*!< RXFCMD (Bitfield-Mask: 0x01)                          */
#define USART_CMD_MMCMD_Pos              (2UL)                     /*!< MMCMD (Bit 2)                                         */
#define USART_CMD_MMCMD_Msk              (0x4UL)                   /*!< MMCMD (Bitfield-Mask: 0x01)                           */
#define USART_CMD_SBKCMD_Pos             (1UL)                     /*!< SBKCMD (Bit 1)                                        */
#define USART_CMD_SBKCMD_Msk             (0x2UL)                   /*!< SBKCMD (Bitfield-Mask: 0x01)                          */
#define USART_CMD_ABDCMD_Pos             (0UL)                     /*!< ABDCMD (Bit 0)                                        */
#define USART_CMD_ABDCMD_Msk             (0x1UL)                   /*!< ABDCMD (Bitfield-Mask: 0x01)                          */
/* =========================================================  STAT  ========================================================== */
#define USART_STAT_REA_Pos               (22UL)                    /*!< REA (Bit 22)                                          */
#define USART_STAT_REA_Msk               (0x400000UL)              /*!< REA (Bitfield-Mask: 0x01)                             */
#define USART_STAT_TEA_Pos               (21UL)                    /*!< TEA (Bit 21)                                          */
#define USART_STAT_TEA_Msk               (0x200000UL)              /*!< TEA (Bitfield-Mask: 0x01)                             */
#define USART_STAT_WUF_Pos               (20UL)                    /*!< WUF (Bit 20)                                          */
#define USART_STAT_WUF_Msk               (0x100000UL)              /*!< WUF (Bitfield-Mask: 0x01)                             */
#define USART_STAT_RWU_Pos               (19UL)                    /*!< RWU (Bit 19)                                          */
#define USART_STAT_RWU_Msk               (0x80000UL)               /*!< RWU (Bitfield-Mask: 0x01)                             */
#define USART_STAT_SBF_Pos               (18UL)                    /*!< SBF (Bit 18)                                          */
#define USART_STAT_SBF_Msk               (0x40000UL)               /*!< SBF (Bitfield-Mask: 0x01)                             */
#define USART_STAT_AMF_Pos               (17UL)                    /*!< AMF (Bit 17)                                          */
#define USART_STAT_AMF_Msk               (0x20000UL)               /*!< AMF (Bitfield-Mask: 0x01)                             */
#define USART_STAT_BSY_Pos               (16UL)                    /*!< BSY (Bit 16)                                          */
#define USART_STAT_BSY_Msk               (0x10000UL)               /*!< BSY (Bitfield-Mask: 0x01)                             */
#define USART_STAT_ABDF_Pos              (15UL)                    /*!< ABDF (Bit 15)                                         */
#define USART_STAT_ABDF_Msk              (0x8000UL)                /*!< ABDF (Bitfield-Mask: 0x01)                            */
#define USART_STAT_ABDE_Pos              (14UL)                    /*!< ABDE (Bit 14)                                         */
#define USART_STAT_ABDE_Msk              (0x4000UL)                /*!< ABDE (Bitfield-Mask: 0x01)                            */
#define USART_STAT_EBF_Pos               (12UL)                    /*!< EBF (Bit 12)                                          */
#define USART_STAT_EBF_Msk               (0x1000UL)                /*!< EBF (Bitfield-Mask: 0x01)                             */
#define USART_STAT_RTF_Pos               (11UL)                    /*!< RTF (Bit 11)                                          */
#define USART_STAT_RTF_Msk               (0x800UL)                 /*!< RTF (Bitfield-Mask: 0x01)                             */
#define USART_STAT_CTS_Pos               (10UL)                    /*!< CTS (Bit 10)                                          */
#define USART_STAT_CTS_Msk               (0x400UL)                 /*!< CTS (Bitfield-Mask: 0x01)                             */
#define USART_STAT_CTSF_Pos              (9UL)                     /*!< CTSF (Bit 9)                                          */
#define USART_STAT_CTSF_Msk              (0x200UL)                 /*!< CTSF (Bitfield-Mask: 0x01)                            */
#define USART_STAT_LBDF_Pos              (8UL)                     /*!< LBDF (Bit 8)                                          */
#define USART_STAT_LBDF_Msk              (0x100UL)                 /*!< LBDF (Bitfield-Mask: 0x01)                            */
#define USART_STAT_TBE_Pos               (7UL)                     /*!< TBE (Bit 7)                                           */
#define USART_STAT_TBE_Msk               (0x80UL)                  /*!< TBE (Bitfield-Mask: 0x01)                             */
#define USART_STAT_TC_Pos                (6UL)                     /*!< TC (Bit 6)                                            */
#define USART_STAT_TC_Msk                (0x40UL)                  /*!< TC (Bitfield-Mask: 0x01)                              */
#define USART_STAT_RBNE_Pos              (5UL)                     /*!< RBNE (Bit 5)                                          */
#define USART_STAT_RBNE_Msk              (0x20UL)                  /*!< RBNE (Bitfield-Mask: 0x01)                            */
#define USART_STAT_IDLEF_Pos             (4UL)                     /*!< IDLEF (Bit 4)                                         */
#define USART_STAT_IDLEF_Msk             (0x10UL)                  /*!< IDLEF (Bitfield-Mask: 0x01)                           */
#define USART_STAT_ORERR_Pos             (3UL)                     /*!< ORERR (Bit 3)                                         */
#define USART_STAT_ORERR_Msk             (0x8UL)                   /*!< ORERR (Bitfield-Mask: 0x01)                           */
#define USART_STAT_NERR_Pos              (2UL)                     /*!< NERR (Bit 2)                                          */
#define USART_STAT_NERR_Msk              (0x4UL)                   /*!< NERR (Bitfield-Mask: 0x01)                            */
#define USART_STAT_FERR_Pos              (1UL)                     /*!< FERR (Bit 1)                                          */
#define USART_STAT_FERR_Msk              (0x2UL)                   /*!< FERR (Bitfield-Mask: 0x01)                            */
#define USART_STAT_PERR_Pos              (0UL)                     /*!< PERR (Bit 0)                                          */
#define USART_STAT_PERR_Msk              (0x1UL)                   /*!< PERR (Bitfield-Mask: 0x01)                            */
/* =========================================================  INTC  ========================================================== */
#define USART_INTC_WUC_Pos               (20UL)                    /*!< WUC (Bit 20)                                          */
#define USART_INTC_WUC_Msk               (0x100000UL)              /*!< WUC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_AMC_Pos               (17UL)                    /*!< AMC (Bit 17)                                          */
#define USART_INTC_AMC_Msk               (0x20000UL)               /*!< AMC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_EBC_Pos               (12UL)                    /*!< EBC (Bit 12)                                          */
#define USART_INTC_EBC_Msk               (0x1000UL)                /*!< EBC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_RTC_Pos               (11UL)                    /*!< RTC (Bit 11)                                          */
#define USART_INTC_RTC_Msk               (0x800UL)                 /*!< RTC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_CTSC_Pos              (9UL)                     /*!< CTSC (Bit 9)                                          */
#define USART_INTC_CTSC_Msk              (0x200UL)                 /*!< CTSC (Bitfield-Mask: 0x01)                            */
#define USART_INTC_LBDC_Pos              (8UL)                     /*!< LBDC (Bit 8)                                          */
#define USART_INTC_LBDC_Msk              (0x100UL)                 /*!< LBDC (Bitfield-Mask: 0x01)                            */
#define USART_INTC_TCC_Pos               (6UL)                     /*!< TCC (Bit 6)                                           */
#define USART_INTC_TCC_Msk               (0x40UL)                  /*!< TCC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_IDLEC_Pos             (4UL)                     /*!< IDLEC (Bit 4)                                         */
#define USART_INTC_IDLEC_Msk             (0x10UL)                  /*!< IDLEC (Bitfield-Mask: 0x01)                           */
#define USART_INTC_OREC_Pos              (3UL)                     /*!< OREC (Bit 3)                                          */
#define USART_INTC_OREC_Msk              (0x8UL)                   /*!< OREC (Bitfield-Mask: 0x01)                            */
#define USART_INTC_NEC_Pos               (2UL)                     /*!< NEC (Bit 2)                                           */
#define USART_INTC_NEC_Msk               (0x4UL)                   /*!< NEC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_FEC_Pos               (1UL)                     /*!< FEC (Bit 1)                                           */
#define USART_INTC_FEC_Msk               (0x2UL)                   /*!< FEC (Bitfield-Mask: 0x01)                             */
#define USART_INTC_PEC_Pos               (0UL)                     /*!< PEC (Bit 0)                                           */
#define USART_INTC_PEC_Msk               (0x1UL)                   /*!< PEC (Bitfield-Mask: 0x01)                             */
/* =========================================================  RDATA  ========================================================= */
#define USART_RDATA_RDATA_Pos            (0UL)                     /*!< RDATA (Bit 0)                                         */
#define USART_RDATA_RDATA_Msk            (0x1ffUL)                 /*!< RDATA (Bitfield-Mask: 0x1ff)                          */
/* =========================================================  TDATA  ========================================================= */
#define USART_TDATA_TDATA_Pos            (0UL)                     /*!< TDATA (Bit 0)                                         */
#define USART_TDATA_TDATA_Msk            (0x1ffUL)                 /*!< TDATA (Bitfield-Mask: 0x1ff)                          */
/* ==========================================================  CHC  ========================================================== */
#define USART_CHC_EPERR_Pos              (8UL)                     /*!< EPERR (Bit 8)                                         */
#define USART_CHC_EPERR_Msk              (0x100UL)                 /*!< EPERR (Bitfield-Mask: 0x01)                           */
#define USART_CHC_HCM_Pos                (0UL)                     /*!< HCM (Bit 0)                                           */
#define USART_CHC_HCM_Msk                (0x1UL)                   /*!< HCM (Bitfield-Mask: 0x01)                             */
/* =========================================================  RFCS  ========================================================== */
#define USART_RFCS_RFFINT_Pos            (15UL)                    /*!< RFFINT (Bit 15)                                       */
#define USART_RFCS_RFFINT_Msk            (0x8000UL)                /*!< RFFINT (Bitfield-Mask: 0x01)                          */
#define USART_RFCS_RFCNT_Pos             (12UL)                    /*!< RFCNT (Bit 12)                                        */
#define USART_RFCS_RFCNT_Msk             (0x7000UL)                /*!< RFCNT (Bitfield-Mask: 0x07)                           */
#define USART_RFCS_RFF_Pos               (11UL)                    /*!< RFF (Bit 11)                                          */
#define USART_RFCS_RFF_Msk               (0x800UL)                 /*!< RFF (Bitfield-Mask: 0x01)                             */
#define USART_RFCS_RFE_Pos               (10UL)                    /*!< RFE (Bit 10)                                          */
#define USART_RFCS_RFE_Msk               (0x400UL)                 /*!< RFE (Bitfield-Mask: 0x01)                             */
#define USART_RFCS_RFFIE_Pos             (9UL)                     /*!< RFFIE (Bit 9)                                         */
#define USART_RFCS_RFFIE_Msk             (0x200UL)                 /*!< RFFIE (Bitfield-Mask: 0x01)                           */
#define USART_RFCS_RFEN_Pos              (8UL)                     /*!< RFEN (Bit 8)                                          */
#define USART_RFCS_RFEN_Msk              (0x100UL)                 /*!< RFEN (Bitfield-Mask: 0x01)                            */
#define USART_RFCS_ELNACK_Pos            (0UL)                     /*!< ELNACK (Bit 0)                                        */
#define USART_RFCS_ELNACK_Msk            (0x1UL)                   /*!< ELNACK (Bitfield-Mask: 0x01)                          */


/* =========================================================================================================================== */
/* ================                                           WWDGT                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CTL  ========================================================== */
#define WWDGT_CTL_WDGTEN_Pos              (7UL)                     /*!< WDGTEN (Bit 7)                                        */
#define WWDGT_CTL_WDGTEN_Msk              (0x80UL)                  /*!< WDGTEN (Bitfield-Mask: 0x01)                          */
#define WWDGT_CTL_CNT_Pos                 (0UL)                     /*!< CNT (Bit 0)                                           */
#define WWDGT_CTL_CNT_Msk                 (0x7fUL)                  /*!< CNT (Bitfield-Mask: 0x7f)                             */
/* ==========================================================  CFG  ========================================================== */
#define WWDGT_CFG_EWIE_Pos                (9UL)                     /*!< EWIE (Bit 9)                                          */
#define WWDGT_CFG_EWIE_Msk                (0x200UL)                 /*!< EWIE (Bitfield-Mask: 0x01)                            */
#define WWDGT_CFG_PSC_Pos                 (7UL)                     /*!< PSC (Bit 7)                                           */
#define WWDGT_CFG_PSC_Msk                 (0x180UL)                 /*!< PSC (Bitfield-Mask: 0x03)                             */
#define WWDGT_CFG_WIN_Pos                 (0UL)                     /*!< WIN (Bit 0)                                           */
#define WWDGT_CFG_WIN_Msk                 (0x7fUL)                  /*!< WIN (Bitfield-Mask: 0x7f)                             */
/* =========================================================  STAT  ========================================================== */
#define WWDGT_STAT_EWIF_Pos               (0UL)                     /*!< EWIF (Bit 0)                                          */
#define WWDGT_STAT_EWIF_Msk               (0x1UL)                   /*!< EWIF (Bitfield-Mask: 0x01)                            */

/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* GD32E23X_PERIPH_H */


/** @} */ /* End of group GD32E230 */

/** @} */ /* End of group  */
