/**
@defgroup    boards_openmote-b OpenMote-b
@ingroup     boards
@brief       Support for the OpenMote-b board

## Overview

The [OpenMote](http://www.openmote.com/) is slim board that comes with a TI
SoC combining an ARM Cortex-M3 microcontroller with an IEEE802.15.4 radio.

## Hardware
| MCU        | CC2538SF53        |
|:------------- |:--------------------- |
| Family | ARM Cortex-M3     |
| Vendor | Texas Instruments |
| RAM        | 32Kb  |
| Flash      | 512Kb             |
| Frequency  | 32MHz |
| FPU        | no                |
| Timers | 4 |
| ADCs       | 1x 12-bit (8 channels)        |
| UARTs      | 2                 |
| SPIs       | 2                 |
| I2Cs       | 1                 |
| Vcc        | 2V - 3.6V         |
| Datasheet  | [Datasheet](http://www.ti.com/lit/gpn/cc2538) (pdf file) |
| Reference Manual | [Reference Manual](http://www.ti.com/lit/pdf/swru319) |

##  Flashing and Debugging

Currently RIOT supports flashing the OpenMote using a Segger JLink JTAG
adapter or via USB, using the bootloader on the board.

### Flashing via USB

RIOT support flashing with USB by default.

`make flash`

You may have to specify the flashing port with
`PORT_DEV=<my_openmote_port> make flash`

The flash tool needs to convert the generated Hex file to RAW format.
For this it needs to have the intelhex library installed.

    apt install python3-intelhex

or

    pip3 install intelhex

### Flashing via JTAG

To be able to flash the board via JTAG you need to install Seggers JLinkExe
tool. Once you have this in place, you can simply flash by calling

`PROGRAMMER=jlink make flash`

from your application folder.

Mac OS users may experiment a command line expecting `connect`. Just type it
and the process will continue.

### Debugging

The JTAG interface is required for debugging.  On some board revisions the
debug may not be able to run. To debug use:

`make debug`
 */
