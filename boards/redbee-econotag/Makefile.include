## the cpu to build for
export CPU = mc1322x

# toolchain config
export PREFIX = arm-none-eabi-
export CC = $(PREFIX)gcc
export AR = $(PREFIX)ar
export CFLAGS += -march=armv4t -mtune=arm7tdmi-s -mlong-calls \
		-msoft-float -mthumb-interwork -fno-strict-aliasing -fno-common \
		-ffixed-r8 -ffunction-sections -ffreestanding -fno-builtin \
		-nodefaultlibs -Wcast-align -Wall -Wstrict-prototypes -Wextra \
		-Os -pipe
export CFLAGS_MTHUMB ?= -mthumb
$(warning TODO add -mthumb)
export AFLAGS = -Wa,-gstabs $(CFLAGS)
export AS = $(PREFIX)as
export LINK = $(PREFIX)gcc
export SIZE = $(PREFIX)size
export OBJCOPY = $(PREFIX)objcopy
FLASHER = mc1322x-load.pl
TERM = pyterm.py
LINKFLAGS = -mcpu=arm7tdmi-s -static -lgcc -nostartfiles -T$(RIOTBASE)/cpu/$(CPU)/mc1322x.lds

ifeq ($(strip $(PORT)),)
	export PORT = /dev/ttyUSB0
endif
export FFLAGS = -t $(PORT) -f $(HEXFILE) -c 'bbmc -l redbee-econotag reset'
export OFLAGS = -O binary --gap-fill=0xff

export INCLUDES += -I$(RIOTCPU)/$(CPU)/include/ -I$(RIOTBOARD)/$(BOARD)/include/
export INCLUDES += -I$(RIOTCPU)/$(CPU)/maca/include
export INCLUDES += -I$(RIOTBOARD)/$(BOARD)/drivers/include

ifneq (,$(filter defaulttransceiver,$(USEMODULE)))
	USEMODULE += mc1322x
	USEMODULE += transceiver
endif

export UNDEF += $(BINDIR)cpu/startup.o
