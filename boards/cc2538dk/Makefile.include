# Define the cpu used by the CC2538DK board:
export CPU        = cc2538
export CPU_MODEL ?= cc2538nf53

# the SmartRF06 Evaluation Board serial numbers all begin with "06EB":
PROGRAMMER_SERIAL ?= 06EB

# setup serial terminal
# the debug UART is always the second tty with the matching serial number:
PORT_LINUX ?= $(word 2,$(shell $(RIOTTOOLS)/usb-serial/find-tty.sh '^$(PROGRAMMER_SERIAL)'))
PORT_DARWIN ?= $(firstword $(sort $(wildcard /dev/tty.usbserial*)))
include $(RIOTMAKE)/tools/serial.inc.mk

# setup emulator
include $(RIOTMAKE)/tools/renode.inc.mk

# debugger config
DEBUGGER = $(RIOTBOARD)/$(BOARD)/dist/debug.sh
DEBUGSERVER = JLinkGDBServer -device CC2538SF53
RESET = $(RIOTBOARD)/$(BOARD)/dist/reset.sh

# The entry point `cortex_vector_base` is defined in the cca field.
# If the cca field is updated when flashing a slot then the entry 
# point will never be the bootloader but the respective slot. This
# ensures it never happens .
ifneq (,$(filter riotboot,$(FEATURES_REQUIRED)))
ifneq (riotboot,$(filter riotboot,$(APPLICATION)))
  CFLAGS+=-DUPDATE_CCA=0
endif
endif

# Define the flash-tool and default port:
export PROGRAMMER ?= cc2538-bsl

ifeq ($(PROGRAMMER),cc2538-bsl)
	FLASHER = $(RIOTTOOLS)/cc2538-bsl/cc2538-bsl.py 
    FFLAGS  = $(if $(IMAGE_OFFSET), -a $(shell printf "0x%08x" $$(($(IMAGE_OFFSET) + $(ROM_START_ADDR)))))
    FFLAGS += -p "$(PORT)" -w -v $(FLASHFILE)
else ifeq ($(PROGRAMMER),jlink)
  FLASHER = $(RIOTBOARD)/$(BOARD)/dist/flash.sh
  FFLAGS  = $(BINDIR) $(FLASHFILE)
endif

OFLAGS = --gap-fill 0xff
FLASHFILE ?= $(BINFILE)
DEBUGGER_FLAGS = $(BINDIR) $(ELFFILE)
RESET_FLAGS = $(BINDIR)

export OBJDUMPFLAGS += --disassemble --source --disassembler-options=force-thumb
