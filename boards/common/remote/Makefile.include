# define the default flash-tool
export PROGRAMMER ?= cc2538-bsl

ifeq ($(PROGRAMMER),cc2538-bsl)
  ifeq ($(OS),Linux)
    PORT_BSL ?= $(PORT_LINUX)
  else ifeq ($(OS),Darwin)
    PORT_BSL ?= $(PORT_DARWIN)
  endif
  RESET ?= $(RIOTTOOLS)/cc2538-bsl/cc2538-bsl.py -p "$(PORT_BSL)"
  FLASHER = $(RIOTTOOLS)/cc2538-bsl/cc2538-bsl.py
  FFLAGS  = -p "$(PORT_BSL)" -e -w -v -b 115200 $(FLASHFILE)
else ifeq ($(PROGRAMMER),jlink)
  FLASHER = $(RIOTBOARD)/common/remote/dist/flash.sh
  FFLAGS  = $(BINDIR) $(FLASHFILE)
  DEBUGGER = $(RIOTBOARD)/common/remote/dist/debug.sh
  DEBUGSERVER = JLinkGDBServer -device CC2538SF53
  RESET ?= $(RIOTBOARD)/common/remote/dist/reset.sh
  RESET_FLAGS ?= $(BINDIR)
endif

OFLAGS = --gap-fill 0xff
FLASHFILE ?= $(BINFILE)
DEBUGGER_FLAGS = $(BINDIR) $(ELFFILE)
OBJDUMPFLAGS += --disassemble --source --disassembler-options=force-thumb

# remote use cc2538-bsl attaching to the serial PORT to reset the board. If
# `make reset` is called when the terminal is open it will set the device in
# bootloader but fail in the next commands, leaving the device in bootloader
# mode
MAKE_RESET_WITH_TERM ?= 0

# include common remote includes
INCLUDES += -I$(RIOTBOARD)/common/remote/include

# setup serial terminal
include $(RIOTMAKE)/tools/serial.inc.mk
