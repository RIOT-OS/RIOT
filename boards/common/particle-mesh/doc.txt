/**
@defgroup    boards_common_particle-mesh Particle Mesh common
@ingroup     boards
@brief       Common support for the Particle Mesh boards family (Xenon, Argon, Boron)

### General information

[Particle Mesh](https://www.particle.io/mesh/) are mesh-ready development kits.
Depending on the board type (Xenon, Argon, Boron), it provides access to
multiple communication protocols: BLE, 802.15.4, WiFi, LTE.

### Flash the board

Using the [Particle Mesh debugger](https://docs.particle.io/datasheets/accessories/mesh-accessories/#debugger),
the board can be flashed with PyOCD programmer via a DAPLink.

PyOCD can be installed using Python package manager:
```
    pip install pyocd --user -U
```

To flash the board, use `BOARD=<board name>` (with board name in {particle-argon,
particle-boron, particle-xenon}) with the `make` command.<br/>
Example with `hello-world` application:
```
    make BOARD=particle-xenon -C examples/hello-world flash
```

In this case, OpenOCD can also be used. For the moment, the latest stable
version of OpenOCD (0.10) doesn't contain any support for nrf52 but versions
built against the actual development version can be used.

To flash the board with OpenOCD, use the `PROGRAMMER` variable:
```
    PROGRAMMER=openocd make BOARD=<board name> -C examples/hello-world flash
```

### Reset the board

The on-board reset button doesn't work, so to trigger a reset of the board, use
the `reset` target with `make`:
```
    make BOARD=<board name> -C examples/hello-world reset
```

### Accessing STDIO via UART

The STDIO is not accessible via the USB port.

To access the STDIO of RIOT, a FTDI to USB converter needs to be plugged to
the RX/TX pins on the board.

### nRF antenna selection

The Particle Mesh boards all have two antenna choices for their nRF (Bluetooth
/ 802.15.4) radios, a on-board antenna and a U.FL connector for an external
antenna.

By default, the on-board antenna is selected at startup. That choice can be
overridden by setting ``BOARD_NRFANTENNA_DEFAULT = EXTERNAL`` (as opposed to
the default ``BUILTIN``) in a project's `Makefile`, or at runtime using @ref
board_nrfantenna_select function.

The external antenna connection should only be enabled if a suitable antenna is
connected.

 */
