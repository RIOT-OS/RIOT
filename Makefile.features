# Process provided FEATURES
#
# The board/board common are responsible for defining the CPU and CPU_MODEL
# variables in their Makefile.features.
# This makes them available when setting features based on CPU_MODEL in the cpu
# Makefile.features and also during dependency resolution.

# Transition:
#   Moving 'CPU/CPU_MODEL' to Makefile.features is an ongoing work and may not
#   reflect the state of all boards for the moment.

include $(BOARDDIR)/Makefile.features

CPUSDIRS := $(EXTERNAL_CPU_DIRS) $(RIOTCPU)

# Take the first folder in $(CPUSDIRS) that contains a folder named $(CPU)
CPUDIR := $(word 1,$(foreach dir,$(CPUSDIRS),$(wildcard $(dir)/$(CPU)/.)))
# Sanitize folder
CPUDIR := $(abspath $(CPUDIR))

# Also provide CPUSDIR for compatibility and for accessing common folders
# (e.g. include $(CPUSDIR)/common/external_common/Makefile.dep)
CPUSDIR := $(dir $(CPUDIR))

ifeq (,$(CPUDIR))
  $(info Folders searched for the cpu: $(CPUSDIRS))
  $(error The specified cpu $(CPU) does not exist.)
endif

# Sanity check
ifeq (,$(CPU))
  $(error $(BOARD): CPU must be defined by board / board_common Makefile.features)
endif

include $(CPUDIR)/Makefile.features

# Provide CPU as a feature to allow listing all boards with a CPU
FEATURES_PROVIDED += cpu_$(CPU)

# Features that are conflicting for all architectures
FEATURES_CONFLICT += picolibc:newlib
FEATURES_CONFLICT_MSG += "Only one standard C library can be used."

FEATURES_CONFLICT += periph_gpio_irq:periph_gpio_ll_irq
FEATURES_CONFLICT_MSG += "Only one GPIO IRQ implementation can be used."

FEATURES_CONFLICT += periph_usbdev:tinyusb_device
FEATURES_CONFLICT += periph_usbdev:tinyusb_host
FEATURES_CONFLICT_MSG += "Package tinyUSB is not yet compatible with periph_usbdev."
